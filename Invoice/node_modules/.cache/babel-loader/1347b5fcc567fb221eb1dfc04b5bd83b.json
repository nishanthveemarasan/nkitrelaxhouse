{"ast":null,"code":"import{useEffect}from\"react\";import CModal from\"src/Components/UI/Modal/CModal\";import{useSelector,useDispatch}from\"react-redux\";import FormInputLabel from\"src/Components/UI/Input/FormInputLabel\";import useFormValidate from\"src/Hooks/input-validation\";import FormTextArea from\"src/Components/UI/Input/FormTextArea\";import FormSelect from\"src/Components/UI/Input/FormSelect\";import{addPostData,closePostModal}from\"src/store/post.slice\";import CAlert from\"src/Components/UI/Alert/CAlert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateModal=function CreateModal(){var _useFormValidate=useFormValidate(),athorName=_useFormValidate.inputValue,setAuthorName=_useFormValidate.setInputValue,authorNameChangeHandler=_useFormValidate.inputChangeHandler,authorNameBlurHandler=_useFormValidate.inputBlurHandler;var _useFormValidate2=useFormValidate(),postTitle=_useFormValidate2.inputValue,setPostTitle=_useFormValidate2.setInputValue,postTitleChangeHandler=_useFormValidate2.inputChangeHandler,postTitleBlurHandler=_useFormValidate2.inputBlurHandler;var _useFormValidate3=useFormValidate(),postContent=_useFormValidate3.inputValue,setPostContent=_useFormValidate3.setInputValue,postContentChangeHandler=_useFormValidate3.inputChangeHandler,postContentBlurHandler=_useFormValidate3.inputBlurHandler;var _useFormValidate4=useFormValidate(),postType=_useFormValidate4.inputValue,setType=_useFormValidate4.setInputValue,postTypeChangeHandler=_useFormValidate4.inputChangeHandler,postTypeBlurHandler=_useFormValidate4.inputBlurHandler;var mapStateToProps=function mapStateToProps(state){return{modalData:state.postStore.addPostModalData,updatedData:state.postStore.updatePostModalData};};var state=useSelector(mapStateToProps);var dispatch=useDispatch();useEffect(function(){setAuthorName(\"Nishanth\");},[setAuthorName]);var modalCloseHandler=function modalCloseHandler(){dispatch(closePostModal());setPostTitle(\"\");setPostContent(\"\");setType(\"\");};var onSubmitHandler=function onSubmitHandler(e){e.preventDefault();var data={title:postTitle,content:postContent,status:postType};dispatch(addPostData(data));setPostTitle(\"\");setPostContent(\"\");setType(\"\");};return/*#__PURE__*/_jsxs(CModal,{onShow:state.modalData.isModalOpen,onClose:modalCloseHandler,heading:state.modalData.modalHeading,variant:state.modalData.variant,action:state.modalData.modalActionButton,size:\"md\",onSubmitHandler:onSubmitHandler,loading:state.modalData.isLoading,children:[state.updatedData.isUpdated&&/*#__PURE__*/_jsx(CAlert,{color:state.updatedData.variant,text:state.updatedData.msg}),/*#__PURE__*/_jsx(FormInputLabel,{type:\"text\",readOnly:true,label:\"Author Name\",value:athorName,change:authorNameChangeHandler,blur:authorNameBlurHandler}),/*#__PURE__*/_jsx(FormInputLabel,{type:\"text\",readOnly:false,label:\"Post Title\",value:postTitle,change:postTitleChangeHandler,blur:postTitleBlurHandler}),/*#__PURE__*/_jsx(FormTextArea,{type:\"textarea\",labelName:\"Post Content\",readOnly:false,rows:\"5\",change:postContentChangeHandler,value:postContent,blur:postContentBlurHandler}),/*#__PURE__*/_jsx(FormSelect,{label:\"Post Type\",value:postType,change:postTypeChangeHandler,options:[\"Publish\",\"Draft\"],blur:postTypeBlurHandler})]});};export default CreateModal;","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Posts/Modal/CreateModal.js"],"names":["useEffect","CModal","useSelector","useDispatch","FormInputLabel","useFormValidate","FormTextArea","FormSelect","addPostData","closePostModal","CAlert","CreateModal","athorName","inputValue","setAuthorName","setInputValue","authorNameChangeHandler","inputChangeHandler","authorNameBlurHandler","inputBlurHandler","postTitle","setPostTitle","postTitleChangeHandler","postTitleBlurHandler","postContent","setPostContent","postContentChangeHandler","postContentBlurHandler","postType","setType","postTypeChangeHandler","postTypeBlurHandler","mapStateToProps","state","modalData","postStore","addPostModalData","updatedData","updatePostModalData","dispatch","modalCloseHandler","onSubmitHandler","e","preventDefault","data","title","content","status","isModalOpen","modalHeading","variant","modalActionButton","isLoading","isUpdated","msg"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,cAAP,KAA2B,wCAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,sCAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CACA,OAASC,WAAT,CAAsBC,cAAtB,KAA4C,sBAA5C,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,C,wFACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,qBAKIN,eAAe,EALnB,CACcO,SADd,kBACEC,UADF,CAEiBC,aAFjB,kBAEEC,aAFF,CAGsBC,uBAHtB,kBAGEC,kBAHF,CAIoBC,qBAJpB,kBAIEC,gBAJF,CAMA,sBAKId,eAAe,EALnB,CACce,SADd,mBACEP,UADF,CAEiBQ,YAFjB,mBAEEN,aAFF,CAGsBO,sBAHtB,mBAGEL,kBAHF,CAIoBM,oBAJpB,mBAIEJ,gBAJF,CAMA,sBAKId,eAAe,EALnB,CACcmB,WADd,mBACEX,UADF,CAEiBY,cAFjB,mBAEEV,aAFF,CAGsBW,wBAHtB,mBAGET,kBAHF,CAIoBU,sBAJpB,mBAIER,gBAJF,CAMA,sBAKId,eAAe,EALnB,CACcuB,QADd,mBACEf,UADF,CAEiBgB,OAFjB,mBAEEd,aAFF,CAGsBe,qBAHtB,mBAGEb,kBAHF,CAIoBc,mBAJpB,mBAIEZ,gBAJF,CAMA,GAAMa,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,SAAS,CAAED,KAAK,CAACE,SAAN,CAAgBC,gBADtB,CAELC,WAAW,CAAEJ,KAAK,CAACE,SAAN,CAAgBG,mBAFxB,CAAP,CAID,CALD,CAMA,GAAML,CAAAA,KAAK,CAAG/B,WAAW,CAAC8B,eAAD,CAAzB,CACA,GAAMO,CAAAA,QAAQ,CAAGpC,WAAW,EAA5B,CACAH,SAAS,CAAC,UAAM,CACdc,aAAa,CAAC,UAAD,CAAb,CACD,CAFQ,CAEN,CAACA,aAAD,CAFM,CAAT,CAGA,GAAM0B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BD,QAAQ,CAAC9B,cAAc,EAAf,CAAR,CACAY,YAAY,CAAC,EAAD,CAAZ,CACAI,cAAc,CAAC,EAAD,CAAd,CACAI,OAAO,CAAC,EAAD,CAAP,CACD,CALD,CAMA,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAO,CAC7BA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,IAAI,CAAG,CACXC,KAAK,CAAEzB,SADI,CAEX0B,OAAO,CAAEtB,WAFE,CAGXuB,MAAM,CAAEnB,QAHG,CAAb,CAKAW,QAAQ,CAAC/B,WAAW,CAACoC,IAAD,CAAZ,CAAR,CACAvB,YAAY,CAAC,EAAD,CAAZ,CACAI,cAAc,CAAC,EAAD,CAAd,CACAI,OAAO,CAAC,EAAD,CAAP,CACD,CAXD,CAYA,mBACE,MAAC,MAAD,EACE,MAAM,CAAEI,KAAK,CAACC,SAAN,CAAgBc,WAD1B,CAEE,OAAO,CAAER,iBAFX,CAGE,OAAO,CAAEP,KAAK,CAACC,SAAN,CAAgBe,YAH3B,CAIE,OAAO,CAAEhB,KAAK,CAACC,SAAN,CAAgBgB,OAJ3B,CAKE,MAAM,CAAEjB,KAAK,CAACC,SAAN,CAAgBiB,iBAL1B,CAME,IAAI,CAAC,IANP,CAOE,eAAe,CAAEV,eAPnB,CAQE,OAAO,CAAER,KAAK,CAACC,SAAN,CAAgBkB,SAR3B,WAUGnB,KAAK,CAACI,WAAN,CAAkBgB,SAAlB,eACC,KAAC,MAAD,EACE,KAAK,CAAEpB,KAAK,CAACI,WAAN,CAAkBa,OAD3B,CAEE,IAAI,CAAEjB,KAAK,CAACI,WAAN,CAAkBiB,GAF1B,EAXJ,cAgBE,KAAC,cAAD,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,CAAE,IAFZ,CAGE,KAAK,CAAC,aAHR,CAIE,KAAK,CAAE1C,SAJT,CAKE,MAAM,CAAEI,uBALV,CAME,IAAI,CAAEE,qBANR,EAhBF,cAwBE,KAAC,cAAD,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,CAAE,KAFZ,CAGE,KAAK,CAAC,YAHR,CAIE,KAAK,CAAEE,SAJT,CAKE,MAAM,CAAEE,sBALV,CAME,IAAI,CAAEC,oBANR,EAxBF,cAgCE,KAAC,YAAD,EACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,cAFZ,CAGE,QAAQ,CAAE,KAHZ,CAIE,IAAI,CAAC,GAJP,CAKE,MAAM,CAAEG,wBALV,CAME,KAAK,CAAEF,WANT,CAOE,IAAI,CAAEG,sBAPR,EAhCF,cAyCE,KAAC,UAAD,EACE,KAAK,CAAC,WADR,CAEE,KAAK,CAAEC,QAFT,CAGE,MAAM,CAAEE,qBAHV,CAIE,OAAO,CAAE,CAAC,SAAD,CAAY,OAAZ,CAJX,CAKE,IAAI,CAAEC,mBALR,EAzCF,GADF,CAmDD,CAzGD,CA2GA,cAAepB,CAAAA,WAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport FormTextArea from \"src/Components/UI/Input/FormTextArea\";\r\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\r\nimport { addPostData, closePostModal } from \"src/store/post.slice\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nconst CreateModal = () => {\r\n  const {\r\n    inputValue: athorName,\r\n    setInputValue: setAuthorName,\r\n    inputChangeHandler: authorNameChangeHandler,\r\n    inputBlurHandler: authorNameBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: postTitle,\r\n    setInputValue: setPostTitle,\r\n    inputChangeHandler: postTitleChangeHandler,\r\n    inputBlurHandler: postTitleBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: postContent,\r\n    setInputValue: setPostContent,\r\n    inputChangeHandler: postContentChangeHandler,\r\n    inputBlurHandler: postContentBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: postType,\r\n    setInputValue: setType,\r\n    inputChangeHandler: postTypeChangeHandler,\r\n    inputBlurHandler: postTypeBlurHandler,\r\n  } = useFormValidate();\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.postStore.addPostModalData,\r\n      updatedData: state.postStore.updatePostModalData,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setAuthorName(\"Nishanth\");\r\n  }, [setAuthorName]);\r\n  const modalCloseHandler = () => {\r\n    dispatch(closePostModal());\r\n    setPostTitle(\"\");\r\n    setPostContent(\"\");\r\n    setType(\"\");\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      title: postTitle,\r\n      content: postContent,\r\n      status: postType,\r\n    };\r\n    dispatch(addPostData(data));\r\n    setPostTitle(\"\");\r\n    setPostContent(\"\");\r\n    setType(\"\");\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalActionButton}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={state.modalData.isLoading}\r\n    >\r\n      {state.updatedData.isUpdated && (\r\n        <CAlert\r\n          color={state.updatedData.variant}\r\n          text={state.updatedData.msg}\r\n        />\r\n      )}\r\n      <FormInputLabel\r\n        type=\"text\"\r\n        readOnly={true}\r\n        label=\"Author Name\"\r\n        value={athorName}\r\n        change={authorNameChangeHandler}\r\n        blur={authorNameBlurHandler}\r\n      />\r\n      <FormInputLabel\r\n        type=\"text\"\r\n        readOnly={false}\r\n        label=\"Post Title\"\r\n        value={postTitle}\r\n        change={postTitleChangeHandler}\r\n        blur={postTitleBlurHandler}\r\n      />\r\n      <FormTextArea\r\n        type=\"textarea\"\r\n        labelName=\"Post Content\"\r\n        readOnly={false}\r\n        rows=\"5\"\r\n        change={postContentChangeHandler}\r\n        value={postContent}\r\n        blur={postContentBlurHandler}\r\n      ></FormTextArea>\r\n      <FormSelect\r\n        label=\"Post Type\"\r\n        value={postType}\r\n        change={postTypeChangeHandler}\r\n        options={[\"Publish\", \"Draft\"]}\r\n        blur={postTypeBlurHandler}\r\n      />\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default CreateModal;\r\n"]},"metadata":{},"sourceType":"module"}