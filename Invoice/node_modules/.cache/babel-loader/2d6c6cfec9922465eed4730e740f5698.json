{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getProductApi, searchApi } from \"src/service/appService\";\nimport { itemStoreAction } from \"./store\";\nvar initialState = {\n  products: [],\n  isPageLoading: false,\n  isButtonLoading: false,\n  isDataChanged: true,\n  itemCode: [],\n  row: 10\n};\nvar itemSlice = createSlice({\n  name: \"items\",\n  initialState: initialState,\n  reducers: {\n    getResponse: function getResponse(state, action) {\n      state.products = action.payload.items;\n      state.isPageLoading = true;\n    },\n    sendRequest: function sendRequest(state) {\n      state.isPageLoading = false;\n    }\n  }\n});\nexport default itemSlice;\nexport var getItemData = function getItemData(url, row) {\n  return function (dispatch) {\n    getProductApi(url, row).then(function (response) {\n      dispatch(itemStoreAction.getResponse({\n        items: response.data.data\n      }));\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};\nexport var searchItems = function searchItems(searchString) {\n  return function (dispatch) {\n    if (!searchString) {\n      dispatch(itemStoreAction.sendRequest());\n      dispatch(getItemData(\"\", 10));\n    } else {\n      dispatch(itemStoreAction.sendRequest());\n      sendGet(\"get-search-details\", searchString).then(function (response) {\n        console.log(response.data.data);\n        dispatch(itemStoreAction.getResponse({\n          items: response.data.data\n        }));\n      }).catch();\n    }\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/item-slice.js"],"names":["createSlice","getProductApi","searchApi","itemStoreAction","initialState","products","isPageLoading","isButtonLoading","isDataChanged","itemCode","row","itemSlice","name","reducers","getResponse","state","action","payload","items","sendRequest","getItemData","url","dispatch","then","response","data","catch","error","console","log","searchItems","searchString","sendGet"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,wBAAzC;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,aAAa,EAAE,IAJI;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,GAAG,EAAE;AANc,CAArB;AASA,IAAMC,SAAS,GAAGX,WAAW,CAAC;AAC5BY,EAAAA,IAAI,EAAE,OADsB;AAE5BR,EAAAA,YAAY,EAAZA,YAF4B;AAG5BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACWC,MADX,EACmB;AACzBD,MAAAA,KAAK,CAACV,QAAN,GAAiBW,MAAM,CAACC,OAAP,CAAeC,KAAhC;AACAH,MAAAA,KAAK,CAACT,aAAN,GAAsB,IAAtB;AACD,KAJO;AAKRa,IAAAA,WALQ,uBAKIJ,KALJ,EAKW;AACjBA,MAAAA,KAAK,CAACT,aAAN,GAAsB,KAAtB;AACD;AAPO;AAHkB,CAAD,CAA7B;AAaA,eAAeK,SAAf;AAEA,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMX,GAAN,EAAc;AACvC,SAAO,UAACY,QAAD,EAAc;AACnBrB,IAAAA,aAAa,CAACoB,GAAD,EAAMX,GAAN,CAAb,CACGa,IADH,CACQ,UAACC,QAAD,EAAc;AAClBF,MAAAA,QAAQ,CACNnB,eAAe,CAACW,WAAhB,CAA4B;AAC1BI,QAAAA,KAAK,EAAEM,QAAQ,CAACC,IAAT,CAAcA;AADK,OAA5B,CADM,CAAR;AAKD,KAPH,EAQGC,KARH,CAQS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,QAAlB;AACD,KAVH;AAWD,GAZD;AAaD,CAdM;AAgBP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,YAAD,EAAkB;AAC3C,SAAO,UAACT,QAAD,EAAc;AACnB,QAAI,CAACS,YAAL,EAAmB;AACjBT,MAAAA,QAAQ,CAACnB,eAAe,CAACgB,WAAhB,EAAD,CAAR;AACAG,MAAAA,QAAQ,CAACF,WAAW,CAAC,EAAD,EAAK,EAAL,CAAZ,CAAR;AACD,KAHD,MAGO;AACLE,MAAAA,QAAQ,CAACnB,eAAe,CAACgB,WAAhB,EAAD,CAAR;AACAa,MAAAA,OAAO,CAAC,oBAAD,EAAuBD,YAAvB,CAAP,CACGR,IADH,CACQ,UAACC,QAAD,EAAc;AAClBI,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAAT,CAAcA,IAA1B;AACAH,QAAAA,QAAQ,CACNnB,eAAe,CAACW,WAAhB,CAA4B;AAC1BI,UAAAA,KAAK,EAAEM,QAAQ,CAACC,IAAT,CAAcA;AADK,SAA5B,CADM,CAAR;AAKD,OARH,EASGC,KATH;AAUD;AACF,GAjBD;AAkBD,CAnBM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getProductApi, searchApi } from \"src/service/appService\";\r\nimport { itemStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  isPageLoading: false,\r\n  isButtonLoading: false,\r\n  isDataChanged: true,\r\n  itemCode: [],\r\n  row: 10,\r\n};\r\n\r\nconst itemSlice = createSlice({\r\n  name: \"items\",\r\n  initialState,\r\n  reducers: {\r\n    getResponse(state, action) {\r\n      state.products = action.payload.items;\r\n      state.isPageLoading = true;\r\n    },\r\n    sendRequest(state) {\r\n      state.isPageLoading = false;\r\n    },\r\n  },\r\n});\r\nexport default itemSlice;\r\n\r\nexport const getItemData = (url, row) => {\r\n  return (dispatch) => {\r\n    getProductApi(url, row)\r\n      .then((response) => {\r\n        dispatch(\r\n          itemStoreAction.getResponse({\r\n            items: response.data.data,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n\r\nexport const searchItems = (searchString) => {\r\n  return (dispatch) => {\r\n    if (!searchString) {\r\n      dispatch(itemStoreAction.sendRequest());\r\n      dispatch(getItemData(\"\", 10));\r\n    } else {\r\n      dispatch(itemStoreAction.sendRequest());\r\n      sendGet(\"get-search-details\", searchString)\r\n        .then((response) => {\r\n          console.log(response.data.data);\r\n          dispatch(\r\n            itemStoreAction.getResponse({\r\n              items: response.data.data,\r\n            })\r\n          );\r\n        })\r\n        .catch();\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}