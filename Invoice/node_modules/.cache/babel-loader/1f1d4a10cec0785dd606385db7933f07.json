{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { shopStoreAction } from \"./store\";\nvar initialState = {\n  shop: {\n    product: [],\n    isDataReceived: false,\n    reRunComponent: true\n  }\n};\nvar shopSlice = createSlice({\n  name: \"shop\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: false\n      });\n    },\n    getStoreProduct: function getStoreProduct(state, action) {},\n    getResponse: function getResponse(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: true\n      });\n    }\n  }\n});\nexport default shopSlice;\nexport var getStoreProductData = function getStoreProductData() {\n  return function (dispatch) {\n    dispatch(shopStoreAction.sendRequest());\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/shop-slice.js"],"names":["createSlice","shopStoreAction","initialState","shop","product","isDataReceived","reRunComponent","shopSlice","name","reducers","sendRequest","state","getStoreProduct","action","getResponse","getStoreProductData","dispatch"],"mappings":";AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,cAAc,EAAE,KAFZ;AAGJC,IAAAA,cAAc,EAAE;AAHZ;AADa,CAArB;AAQA,IAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAZA,YAF4B;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACW;AACjBA,MAAAA,KAAK,CAACR,IAAN,mCACKQ,KAAK,CAACR,IADX;AAEEE,QAAAA,cAAc,EAAE;AAFlB;AAID,KANO;AAORO,IAAAA,eAPQ,2BAOQD,KAPR,EAOeE,MAPf,EAOuB,CAAE,CAPzB;AAQRC,IAAAA,WARQ,uBAQIH,KARJ,EAQW;AACjBA,MAAAA,KAAK,CAACR,IAAN,mCACKQ,KAAK,CAACR,IADX;AAEEE,QAAAA,cAAc,EAAE;AAFlB;AAID;AAbO;AAHkB,CAAD,CAA7B;AAmBA,eAAeE,SAAf;AAEA,OAAO,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACf,eAAe,CAACS,WAAhB,EAAD,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { shopStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  shop: {\r\n    product: [],\r\n    isDataReceived: false,\r\n    reRunComponent: true,\r\n  },\r\n};\r\n\r\nconst shopSlice = createSlice({\r\n  name: \"shop\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: false,\r\n      };\r\n    },\r\n    getStoreProduct(state, action) {},\r\n    getResponse(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: true,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default shopSlice;\r\n\r\nexport const getStoreProductData = () => {\r\n  return (dispatch) => {\r\n    dispatch(shopStoreAction.sendRequest());\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}