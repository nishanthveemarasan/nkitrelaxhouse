{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Users\\\\Modal\\\\JobDetailModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport { getDate } from \"src/custom-functions\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { userStoreAction } from \"src/store/store\";\nimport { updateJobModalData } from \"src/store/user-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar JobDetailModal = function JobDetailModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(),\n      title = _useFormValidate.inputValue,\n      setTitle = _useFormValidate.setInputValue,\n      titleChangeHandler = _useFormValidate.inputChangeHandler,\n      titleBlurHandler = _useFormValidate.inputBlurHandler;\n\n  var _useFormValidate2 = useFormValidate(),\n      date = _useFormValidate2.inputValue,\n      setDate = _useFormValidate2.setInputValue,\n      dateChangeHandler = _useFormValidate2.inputChangeHandler,\n      dateBlurHandler = _useFormValidate2.inputBlurHandler;\n\n  var _useFormValidate3 = useFormValidate(),\n      type = _useFormValidate3.inputValue,\n      setType = _useFormValidate3.setInputValue,\n      typeChangeHandler = _useFormValidate3.inputChangeHandler,\n      typeBlurHandler = _useFormValidate3.inputBlurHandler;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      data: state.userStore.jobModal\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    setTitle(state.data.details.title);\n    setDate(getDate(state.data.details.joinedDate));\n    setType(state.data.details.jobType);\n  }, [setTitle, state.data]);\n\n  var onModalCloseHandler = function onModalCloseHandler() {\n    dispatch(userStoreAction.closeJobModal());\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    var data = {\n      id: state.data.id,\n      jobData: {\n        job_title: title,\n        job_started_date: date,\n        job_type: type\n      }\n    };\n    dispatch(updateJobModalData(data));\n  };\n\n  console.log(\"daa\", state.data.isDataUpdated);\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.data.isModalOpen,\n    heading: \"View/Update the job Details\",\n    variant: \"primary\",\n    action: \"Update\",\n    loading: state.data.isLoading,\n    onClose: onModalCloseHandler,\n    onSubmitHandler: onSubmitHandler,\n    width: \"20%\",\n    children: [state.data.isDataUpdated && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: state.data.color,\n      text: state.data.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(FormInputLabel, {\n      type: \"text\",\n      readOnly: false,\n      label: \"Job Title\",\n      value: title,\n      change: titleChangeHandler,\n      blur: titleBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormInputLabel, {\n      type: \"date\",\n      readOnly: false,\n      label: \"Joined Date\",\n      value: date,\n      change: dateChangeHandler,\n      blur: dateBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormSelect, {\n      label: \"Job Type\",\n      value: type,\n      options: [\"Part-Time\", \"Full-Time\"],\n      readOnly: false,\n      change: typeChangeHandler,\n      blur: typeBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(JobDetailModal, \"qEIBAS9OiePxC4NOis6rgRTBWXQ=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = JobDetailModal;\nexport default JobDetailModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDetailModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Users/Modal/JobDetailModal.js"],"names":["useEffect","useSelector","useDispatch","CAlert","FormInputLabel","FormSelect","CModal","getDate","useFormValidate","userStoreAction","updateJobModalData","JobDetailModal","title","inputValue","setTitle","setInputValue","titleChangeHandler","inputChangeHandler","titleBlurHandler","inputBlurHandler","date","setDate","dateChangeHandler","dateBlurHandler","type","setType","typeChangeHandler","typeBlurHandler","mapStateToProps","state","data","userStore","jobModal","dispatch","details","joinedDate","jobType","onModalCloseHandler","closeJobModal","onSubmitHandler","e","preventDefault","id","jobData","job_title","job_started_date","job_type","console","log","isDataUpdated","isModalOpen","isLoading","color","msg"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { userStoreAction } from \"src/store/store\";\r\nimport { updateJobModalData } from \"src/store/user-slice\";\r\nconst JobDetailModal = () => {\r\n  const {\r\n    inputValue: title,\r\n    setInputValue: setTitle,\r\n    inputChangeHandler: titleChangeHandler,\r\n    inputBlurHandler: titleBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: date,\r\n    setInputValue: setDate,\r\n    inputChangeHandler: dateChangeHandler,\r\n    inputBlurHandler: dateBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: type,\r\n    setInputValue: setType,\r\n    inputChangeHandler: typeChangeHandler,\r\n    inputBlurHandler: typeBlurHandler,\r\n  } = useFormValidate();\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      data: state.userStore.jobModal,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setTitle(state.data.details.title);\r\n    setDate(getDate(state.data.details.joinedDate));\r\n    setType(state.data.details.jobType);\r\n  }, [setTitle, state.data]);\r\n  const onModalCloseHandler = () => {\r\n    dispatch(userStoreAction.closeJobModal());\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      id: state.data.id,\r\n      jobData: {\r\n        job_title: title,\r\n        job_started_date: date,\r\n        job_type: type,\r\n      },\r\n    };\r\n    dispatch(updateJobModalData(data));\r\n  };\r\n  console.log(\"daa\", state.data.isDataUpdated);\r\n  return (\r\n    <CModal\r\n      onShow={state.data.isModalOpen}\r\n      heading=\"View/Update the job Details\"\r\n      variant=\"primary\"\r\n      action=\"Update\"\r\n      loading={state.data.isLoading}\r\n      onClose={onModalCloseHandler}\r\n      onSubmitHandler={onSubmitHandler}\r\n      width=\"20%\"\r\n    >\r\n      {state.data.isDataUpdated && (\r\n        <CAlert color={state.data.color} text={state.data.msg} />\r\n      )}\r\n      <FormInputLabel\r\n        type=\"text\"\r\n        readOnly={false}\r\n        label=\"Job Title\"\r\n        value={title}\r\n        change={titleChangeHandler}\r\n        blur={titleBlurHandler}\r\n      />\r\n      <FormInputLabel\r\n        type=\"date\"\r\n        readOnly={false}\r\n        label=\"Joined Date\"\r\n        value={date}\r\n        change={dateChangeHandler}\r\n        blur={dateBlurHandler}\r\n      />\r\n      <FormSelect\r\n        label=\"Job Type\"\r\n        value={type}\r\n        options={[\"Part-Time\", \"Full-Time\"]}\r\n        readOnly={false}\r\n        change={typeChangeHandler}\r\n        blur={typeBlurHandler}\r\n      />\r\n    </CModal>\r\n  );\r\n};\r\nexport default JobDetailModal;\r\n"]},"metadata":{},"sourceType":"module"}