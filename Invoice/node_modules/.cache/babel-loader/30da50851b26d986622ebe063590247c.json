{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getProductApi } from \"src/service/appService\";\nimport { itemStoreAction } from \"./store\";\nvar initialState = {\n  products: [],\n  isPageLoading: false,\n  isButtonLoading: false,\n  isDataChanged: false,\n  itemCode: [],\n  row: 10\n};\nvar itemSlice = createSlice({\n  name: \"items\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.isPageLoading = true;\n      isDataChanged;\n    }\n  }\n});\nexport default itemSlice;\nexport var getItemData = function getItemData(row) {\n  return function (dispatch) {\n    dispatch(itemStoreAction.sendRequest());\n    getProductApi(row).then(function (response) {}).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/item-slice.js"],"names":["createSlice","getProductApi","itemStoreAction","initialState","products","isPageLoading","isButtonLoading","isDataChanged","itemCode","row","itemSlice","name","reducers","sendRequest","state","getItemData","dispatch","then","response","catch","error","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,aAAa,EAAE,KAJI;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,GAAG,EAAE;AANc,CAArB;AASA,IAAMC,SAAS,GAAGV,WAAW,CAAC;AAC5BW,EAAAA,IAAI,EAAE,OADsB;AAE5BR,EAAAA,YAAY,EAAZA,YAF4B;AAG5BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACW;AACjBA,MAAAA,KAAK,CAACT,aAAN,GAAsB,IAAtB;AACAE,MAAAA,aAAa;AACd;AAJO;AAHkB,CAAD,CAA7B;AAUA,eAAeG,SAAf;AAEA,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACN,GAAD,EAAS;AAClC,SAAO,UAACO,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACd,eAAe,CAACW,WAAhB,EAAD,CAAR;AACAZ,IAAAA,aAAa,CAACQ,GAAD,CAAb,CACGQ,IADH,CACQ,UAAAC,QAAQ,EAAI,CAEjB,CAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AACD,KANH;AAOD,GATD;AAUD,CAXM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getProductApi } from \"src/service/appService\";\r\nimport { itemStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  isPageLoading: false,\r\n  isButtonLoading: false,\r\n  isDataChanged: false,\r\n  itemCode: [],\r\n  row: 10,\r\n};\r\n\r\nconst itemSlice = createSlice({\r\n  name: \"items\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.isPageLoading = true;\r\n      isDataChanged\r\n    },\r\n  },\r\n});\r\nexport default itemSlice;\r\n\r\nexport const getItemData = (row) => {\r\n  return (dispatch) => {\r\n    dispatch(itemStoreAction.sendRequest());\r\n    getProductApi(row)\r\n      .then(response => {\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}