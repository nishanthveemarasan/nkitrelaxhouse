{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { productStoreAction } from \"./store\";\nvar initialState = {\n  isDataChanged: false,\n  productData: [],\n  reRunData: true,\n  modalActionData: \"\",\n  isLoading: false,\n  modalData: {\n    isModalOpen: false,\n    productId: 0,\n    modalAction: \"\",\n    modalHeading: \"\",\n    variant: \"\"\n  }\n};\nvar productSlice = createSlice({\n  name: \"products\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataChanged = true;\n      state.productData = action.payload.data;\n    },\n    dataChanged: function dataChanged(state) {\n      state.reRunData = true;\n    },\n    dataNotChanged: function dataNotChanged(state) {\n      state.reRunData = false;\n    },\n    modalOpen: function modalOpen(state, action) {\n      state.modalData = {\n        isModalOpen: true,\n        productId: action.payload.id,\n        modalAction: action.payload.action,\n        modalHeading: action.payload.heading,\n        variant: action.payload.variant\n      };\n    },\n    modalClose: function modalClose(state) {\n      state.modalData = {\n        isModalOpen: false,\n        productId: 0,\n        modalAction: \"\",\n        modalHeading: \"\"\n      };\n    },\n    isDataLoading: function isDataLoading(state) {\n      state.isLoading = true;\n    },\n    dataIs: dataIs\n  }\n});\nexport default productSlice;\nexport var getProductData = function getProductData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"get-all-chairs\";\n\n    if (param) {\n      url = \"get-all-chairs?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(productStoreAction.getData({\n          data: response.data.data\n        }));\n      }\n    }).catch();\n  };\n};\nexport var getModalData = function getModalData(id) {\n  return function (dispatch) {\n    API.get(\"get-product-details/\".concat(id)).then(function (response) {\n      if (response.data.http_status === 200) {}\n\n      console.log(response.data.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/product-slice.js"],"names":["createSlice","API","productStoreAction","initialState","isDataChanged","productData","reRunData","modalActionData","isLoading","modalData","isModalOpen","productId","modalAction","modalHeading","variant","productSlice","name","reducers","getData","state","action","payload","data","dataChanged","dataNotChanged","modalOpen","id","heading","modalClose","isDataLoading","dataIs","getProductData","param","dispatch","url","get","then","response","http_status","catch","getModalData","console","log","error"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { productStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  productData: [],\r\n  reRunData: true,\r\n  modalActionData: \"\",\r\n  isLoading: false,\r\n  modalData: {\r\n    isModalOpen: false,\r\n    productId: 0,\r\n    modalAction: \"\",\r\n    modalHeading: \"\",\r\n    variant: \"\",\r\n  },\r\n};\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.productData = action.payload.data;\r\n    },\r\n    dataChanged(state) {\r\n      state.reRunData = true;\r\n    },\r\n    dataNotChanged(state) {\r\n      state.reRunData = false;\r\n    },\r\n    modalOpen(state, action) {\r\n      state.modalData = {\r\n        isModalOpen: true,\r\n        productId: action.payload.id,\r\n        modalAction: action.payload.action,\r\n        modalHeading: action.payload.heading,\r\n        variant: action.payload.variant,\r\n      };\r\n    },\r\n    modalClose(state) {\r\n      state.modalData = {\r\n        isModalOpen: false,\r\n        productId: 0,\r\n        modalAction: \"\",\r\n        modalHeading: \"\",\r\n      };\r\n    },\r\n    isDataLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    dataIs\r\n  },\r\n});\r\nexport default productSlice;\r\n\r\nexport const getProductData = (param = \"\") => {\r\n  return (dispatch) => {\r\n    let url = \"get-all-chairs\";\r\n    if (param) {\r\n      url = `get-all-chairs?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(productStoreAction.getData({ data: response.data.data }));\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport const getModalData = (id) => {\r\n  return (dispatch) => {\r\n    API.get(`get-product-details/${id}`)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n        }\r\n        console.log(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}