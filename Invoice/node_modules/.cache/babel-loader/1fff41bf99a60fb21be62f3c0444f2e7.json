{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Posts\\\\AllPostBodyTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDate } from \"src/custom-functions\";\nimport classes from \"./Posts.module.css\";\nimport { openPostModal } from \"src/store/post.slice\";\nimport CBadge from \"src/Components/UI/Badge/CBadge\";\nimport CButton from \"src/Components/UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AllPostBodyTable = function AllPostBodyTable(props) {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {};\n\n  var dispatch = useDispatch();\n\n  var updateHandler = function updateHandler(id) {\n    var data = {\n      id: props.body[id].id,\n      postData: props.body[id],\n      action: \"Update\"\n    };\n    dispatch(openPostModal(data));\n  };\n\n  var deleteleHandler = function deleteleHandler(id) {\n    var data = {\n      id: props.body[id].id,\n      postData: props.body[id],\n      action: \"Delete\"\n    };\n    dispatch(openPostModal(data));\n  };\n\n  var onSubmitHandler = function onSubmitHandler(id) {\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.body.map(function (row, i) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            name: \"View Post\",\n            type: \"button\",\n            size: \"20%\",\n            loading: false,\n            click: onSubmitHandler.bind(null, row.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getDate(row.updated_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.comments_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.likes_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getStatus(row.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getStatus(row.type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Edit Post\",\n            class: classes.view,\n            name: \"cil-align-center\",\n            action: function action() {\n              return updateHandler(i);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, _this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Delete\",\n            class: classes.delete,\n            name: \"cil-trash\",\n            action: function action() {\n              return deleteleHandler(i);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(AllPostBodyTable, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AllPostBodyTable;\nexport default AllPostBodyTable;\n\nvar getStatus = function getStatus(value) {\n  switch (value) {\n    case \"publish\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"primary\",\n        value: \"Published\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, _this);\n\n    case \"draft\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"warning\",\n        value: \"Draft\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, _this);\n\n    case \"active\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"success\",\n        value: \"Active\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, _this);\n\n    case \"disabled\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"danger\",\n        value: \"Inactive\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, _this);\n\n    default:\n      return false;\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPostBodyTable\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Posts/AllPostBodyTable.js"],"names":["ActionButton","useSelector","useDispatch","getDate","classes","openPostModal","CBadge","CButton","AllPostBodyTable","props","mapStateToProps","state","dispatch","updateHandler","id","data","body","postData","action","deleteleHandler","onSubmitHandler","console","log","map","row","i","name","title","bind","updated_at","comments_count","likes_count","getStatus","status","type","view","delete","value"],"mappings":"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","sourcesContent":["import ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport classes from \"./Posts.module.css\";\r\nimport { openPostModal } from \"src/store/post.slice\";\r\nimport CBadge from \"src/Components/UI/Badge/CBadge\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nconst AllPostBodyTable = (props) => {\r\n  const mapStateToProps = (state) => {\r\n    \r\n  }\r\n  const dispatch = useDispatch();\r\n  const updateHandler = (id) => {\r\n    const data = {\r\n      id: props.body[id].id,\r\n      postData: props.body[id],\r\n      action: \"Update\",\r\n    };\r\n    dispatch(openPostModal(data));\r\n  };\r\n  const deleteleHandler = (id) => {\r\n    const data = {\r\n      id: props.body[id].id,\r\n      postData: props.body[id],\r\n      action: \"Delete\",\r\n    };\r\n    dispatch(openPostModal(data));\r\n  };\r\n\r\n  const onSubmitHandler = (id) => {\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>{row.name}</td>\r\n            <td>{row.title}</td>\r\n            <td>\r\n              {\r\n                <CButton\r\n                  color={\"primary\"}\r\n                  name={\"View Post\"}\r\n                  type=\"button\"\r\n                  size=\"20%\"\r\n                  loading={false}\r\n                  click={onSubmitHandler.bind(null, row.id)}\r\n                />\r\n              }\r\n            </td>\r\n            <td>{getDate(row.updated_at)}</td>\r\n            <td>{row.comments_count}</td>\r\n            <td>{row.likes_count}</td>\r\n            <td>{getStatus(row.status)}</td>\r\n            <td>{getStatus(row.type)}</td>\r\n            <td>\r\n              <ActionButton\r\n                value=\"Edit Post\"\r\n                class={classes.view}\r\n                name=\"cil-align-center\"\r\n                action={() => updateHandler(i)}\r\n              />{\" \"}\r\n              |{\" \"}\r\n              <ActionButton\r\n                value=\"Delete\"\r\n                class={classes.delete}\r\n                name=\"cil-trash\"\r\n                action={() => deleteleHandler(i)}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default AllPostBodyTable;\r\n\r\nconst getStatus = (value) => {\r\n  switch (value) {\r\n    case \"publish\":\r\n      return <CBadge color=\"primary\" value={\"Published\"} size=\"100%\" />;\r\n    case \"draft\":\r\n      return <CBadge color=\"warning\" value={\"Draft\"} size=\"100%\" />;\r\n    case \"active\":\r\n      return <CBadge color=\"success\" value={\"Active\"} size=\"100%\" />;\r\n    case \"disabled\":\r\n      return <CBadge color=\"danger\" value={\"Inactive\"} size=\"100%\" />;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}