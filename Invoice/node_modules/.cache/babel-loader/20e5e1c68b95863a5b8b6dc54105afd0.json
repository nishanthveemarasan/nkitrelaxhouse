{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { providerStoreAction } from \"./store\";\nvar initialState = {\n  providerData: [],\n  isDataChanged: false\n};\nvar providerSlice = createSlice({\n  name: \"provider\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.providerData = action.payload.data;\n    }\n  }\n});\nexport default providerSlice;\nexport var getProviderData = function getProviderData() {\n  return function (dispatch) {\n    API.get(\"provider/get\").then(function (response) {\n      if (response.data.http_status === 200) {\n        console.log();\n        dispatch(providerStoreAction.getData(response.data.data.data));\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/cartDna_app/cart-dna-frontend/src/store/provider-slice.js"],"names":["createSlice","API","providerStoreAction","initialState","providerData","isDataChanged","providerSlice","name","reducers","getData","state","action","payload","data","getProviderData","dispatch","get","then","response","http_status","console","log","catch","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,mBAAT,QAAoC,SAApC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;AAKA,IAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,UAD0B;AAEhCJ,EAAAA,YAAY,EAAZA,YAFgC;AAGhCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAAP,CAAeC,IAApC;AACD;AAHO;AAHsB,CAAD,CAAjC;AAUA,eAAeP,aAAf;AAEA,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAO,UAACC,QAAD,EAAc;AACnBd,IAAAA,GAAG,CAACe,GAAJ,CAAQ,cAAR,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACL,IAAT,CAAcM,WAAd,KAA8B,GAAlC,EAAuC;AACnCC,QAAAA,OAAO,CAACC,GAAR;AACFN,QAAAA,QAAQ,CAACb,mBAAmB,CAACO,OAApB,CAA4BS,QAAQ,CAACL,IAAT,CAAcA,IAAd,CAAmBA,IAA/C,CAAD,CAAR;AACD;AACF,KANH,EAOGS,KAPH,CAOS,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KATH;AAUD,GAXD;AAYD,CAbM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { providerStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  providerData: [],\r\n  isDataChanged: false,\r\n};\r\n\r\nconst providerSlice = createSlice({\r\n  name: \"provider\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.providerData = action.payload.data;\r\n    },\r\n  },\r\n});\r\n\r\nexport default providerSlice;\r\n\r\nexport const getProviderData = () => {\r\n  return (dispatch) => {\r\n    API.get(\"provider/get\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n            console.log();\r\n          dispatch(providerStoreAction.getData(response.data.data.data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}