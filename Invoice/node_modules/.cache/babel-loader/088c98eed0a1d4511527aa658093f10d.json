{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Comments\\\\Comment.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport CTable from \"src/Components/UI/Table/CTable\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport { getCommentData } from \"src/store/comment-slice\";\nimport { commentStoreAction } from \"src/store/store\";\nimport CTableBody from \"./Table/CTableBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Comment = function Comment() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      data: state.commentStore.tableData,\n      reRun: state.commentStore.reRunComponent\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRun.isDataChanged) {\n      var data = {\n        param: state.reRun.queryParam\n      };\n      dispatch(getCommentData(data));\n    }\n  }, [state.reRun.isDataChanged, state.reRun.queryParam, dispatch]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    if (url) {\n      var param = url.split(\"?\")[1];\n      conso; //   dispatch(commentStoreAction.updateParam({ param }));\n      //   const data = {\n      //     param,\n      //   };\n\n      dispatch(getCommentData(param));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!state.data.isDataLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }, _this), state.data.isDataLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CTable, {\n        header: [\"#\", \"Author\", \"Post Title\", \"Post Content\", \"Comment\", \"Date Created\", \"Status\", \"Action\"],\n        children: /*#__PURE__*/_jsxDEV(CTableBody, {\n          body: state.data.data.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Pagination, {\n        body: state.data.data,\n        change: pageChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Comment, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Comments/Comment.js"],"names":["useEffect","useSelector","useDispatch","Loader","CTable","Pagination","getCommentData","commentStoreAction","CTableBody","Comment","mapStateToProps","state","data","commentStore","tableData","reRun","reRunComponent","dispatch","isDataChanged","param","queryParam","pageChangeHandler","url","split","conso","isDataLoaded"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,IAAI,EAAED,KAAK,CAACE,YAAN,CAAmBC,SADpB;AAELC,MAAAA,KAAK,EAAEJ,KAAK,CAACE,YAAN,CAAmBG;AAFrB,KAAP;AAID,GALD;;AAMA,MAAML,KAAK,GAAGV,WAAW,CAACS,eAAD,CAAzB;AACA,MAAMO,QAAQ,GAAGf,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,KAAK,CAACI,KAAN,CAAYG,aAAhB,EAA+B;AAC7B,UAAMN,IAAI,GAAG;AACXO,QAAAA,KAAK,EAAER,KAAK,CAACI,KAAN,CAAYK;AADR,OAAb;AAGAH,MAAAA,QAAQ,CAACX,cAAc,CAACM,IAAD,CAAf,CAAR;AACD;AACF,GAPQ,EAON,CAACD,KAAK,CAACI,KAAN,CAAYG,aAAb,EAA4BP,KAAK,CAACI,KAAN,CAAYK,UAAxC,EAAoDH,QAApD,CAPM,CAAT;;AAQA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AACjC,QAAIA,GAAJ,EAAS;AACP,UAAMH,KAAK,GAAGG,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAd;AACAC,MAAAA,KAAK,CAFE,CAGP;AACA;AACA;AACA;;AACAP,MAAAA,QAAQ,CAACX,cAAc,CAACa,KAAD,CAAf,CAAR;AACD;AACF,GAVD;;AAWA,sBACE;AAAA,eACG,CAACR,KAAK,CAACC,IAAN,CAAWa,YAAZ,iBAA4B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAD/B,EAEGd,KAAK,CAACC,IAAN,CAAWa,YAAX,iBACC;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,MAAM,EAAE,CACN,GADM,EAEN,QAFM,EAGN,YAHM,EAIN,cAJM,EAKN,SALM,EAMN,cANM,EAON,QAPM,EAQN,QARM,CADV;AAAA,+BAYE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEd,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBA;AAAlC;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,eADF,eAeE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWA,IAA7B;AAAmC,QAAA,MAAM,EAAES;AAA3C;AAAA;AAAA;AAAA;AAAA,eAfF;AAAA,oBAHJ;AAAA,kBADF;AAwBD,CApDD;;GAAMZ,O;UAOUR,W,EACGC,W;;;KARbO,O;AAqDN,eAAeA,OAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport CTable from \"src/Components/UI/Table/CTable\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { getCommentData } from \"src/store/comment-slice\";\r\nimport { commentStoreAction } from \"src/store/store\";\r\nimport CTableBody from \"./Table/CTableBody\";\r\nconst Comment = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      data: state.commentStore.tableData,\r\n      reRun: state.commentStore.reRunComponent,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRun.isDataChanged) {\r\n      const data = {\r\n        param: state.reRun.queryParam,\r\n      };\r\n      dispatch(getCommentData(data));\r\n    }\r\n  }, [state.reRun.isDataChanged, state.reRun.queryParam, dispatch]);\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const param = url.split(\"?\")[1];\r\n      conso\r\n      //   dispatch(commentStoreAction.updateParam({ param }));\r\n      //   const data = {\r\n      //     param,\r\n      //   };\r\n      dispatch(getCommentData(param));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {!state.data.isDataLoaded && <Loader />}\r\n      {state.data.isDataLoaded && (\r\n        <>\r\n          <CTable\r\n            header={[\r\n              \"#\",\r\n              \"Author\",\r\n              \"Post Title\",\r\n              \"Post Content\",\r\n              \"Comment\",\r\n              \"Date Created\",\r\n              \"Status\",\r\n              \"Action\",\r\n            ]}\r\n          >\r\n            <CTableBody body={state.data.data.data} />\r\n          </CTable>\r\n          <Pagination body={state.data.data} change={pageChangeHandler} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Comment;\r\n"]},"metadata":{},"sourceType":"module"}