{"ast":null,"code":"import _defineProperty from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\views\\\\pages\\\\register\\\\Register.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CCard, CCardBody, CCardFooter, CCol, CContainer, CForm, CRow } from \"@coreui/react\";\nimport RInput from \"src/Components/UI/Register/RInput\";\nimport RButton from \"src/Components/UI/Register/RButton\";\nimport { registerData } from \"src/store/register-slice\";\nimport RAlert from \"src/Components/UI/Alert/RAlert\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"src/Components/views/Store/UI/validator/Validator\";\nimport { email, length, validPassword } from \"src/Components/UI/Validation/Validator\";\nimport Error from \"src/Components/UI/Error/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Register = function Register() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isLoading: state.registerStore.isLoading,\n      message: state.registerStore.message\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    fname: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required],\n      error: \"First Name is Required!\"\n    },\n    lname: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required],\n      error: \"Last Name is Required!\"\n    },\n    email: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [email],\n      error: \"Enter Valid Email Address!\"\n    },\n    username: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required, length({\n        min: 6\n      })],\n      error: \"Username must be atleast 6 characters!\"\n    },\n    password: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required, length({\n        min: 8\n      })],\n      error: \"Password must be atleast 8 characters!\"\n    },\n    cPassword: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      // validator: [validPassword(formData.password.value)],\n      error: \"Password does not match!\"\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var onInputChangeHandler = function onInputChangeHandler(e, type) {\n    var value = e.target.value;\n    var isValid = true;\n\n    var _iterator = _createForOfIteratorHelper(formData[type].validator),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var validator = _step.value;\n        isValid = isValid && validator(value);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    setFormData(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, type, _objectSpread(_objectSpread({}, prevState[type]), {}, {\n        value: value,\n        valid: isValid\n      })));\n    });\n    console.log(formData);\n  };\n\n  var onInputBlurHandler = function onInputBlurHandler(e, type) {\n    setFormData(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, type, _objectSpread(_objectSpread({}, prevState[type]), {}, {\n        touched: true\n      })));\n    });\n  };\n\n  var onRegisterHandler = function onRegisterHandler(e) {\n    e.preventDefault(); // if (isFormValid) {\n    //   const data = {\n    //     // name: fname,\n    //     // last_name: lname,\n    //     // username,\n    //     // email,\n    //     // password,\n    //     // password_confirmation: cPassword,\n    //   };\n    //   dispatch(registerData(data));\n    // } else {\n    // }\n  };\n\n  var isFormValid = false;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-app c-default-layout flex-row align-items-center\",\n      style: {\n        marginTop: \"5%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CContainer, {\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            md: 12,\n            lg: 7,\n            xl: 6,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              className: \"mx-4\",\n              children: [/*#__PURE__*/_jsxDEV(CCardBody, {\n                className: \"p-4\",\n                children: /*#__PURE__*/_jsxDEV(CForm, {\n                  onSubmit: onRegisterHandler,\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-muted\",\n                    children: \"Create your account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, _this), state.message.isRegistered && /*#__PURE__*/_jsxDEV(RAlert, {\n                    alert: state.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(RInput, {\n                      iconName: \"cil-user\",\n                      name: \"First Name\",\n                      auto: \"firstname\",\n                      id: \"fname\",\n                      icon: true,\n                      value: formData.fname.value,\n                      change: onInputChangeHandler,\n                      control: true,\n                      blur: onInputBlurHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, _this), !formData.fname.valid && formData.fname.touched && /*#__PURE__*/_jsxDEV(Error, {\n                      error: formData.fname.error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(RInput, {\n                    class: \"mb-3\",\n                    iconName: \"cil-user\",\n                    name: \"Last Name\",\n                    auto: \"lastname\",\n                    id: \"lname\",\n                    icon: true,\n                    value: formData.lname.value,\n                    change: onInputChangeHandler,\n                    control: true,\n                    blur: onInputBlurHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, _this), !formData.lname.valid && formData.lname.touched && /*#__PURE__*/_jsxDEV(Error, {\n                    error: formData.lname.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(RInput, {\n                    class: \"mb-3\",\n                    iconName: \"cil-user\",\n                    name: \"Username\",\n                    auto: \"username\",\n                    icon: true // value={username}\n                    // change={usernameChangeHandler}\n                    // blur={usernameBlurHandler}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(RInput, {\n                    class: \"mb-3\",\n                    iconName: \"@\",\n                    name: \"Email Address\",\n                    auto: \"email\",\n                    icon: false // value={email}\n                    // change={emailChangeHandler}\n                    // blur={emailBlurHandler}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(RInput, {\n                    class: \"mb-3\",\n                    iconName: \"cil-lock-locked\",\n                    name: \"Password\",\n                    auto: \"password\",\n                    icon: true // value={password}\n                    // change={passwordChangeHandler}\n                    // blur={passwordBlurHandler}\n                    ,\n                    append: true // click={onGenerateRandomPasswordHandler}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(RInput, {\n                    class: \"mb-3\",\n                    iconName: \"cil-lock-locked\",\n                    name: \"Confirm Password\",\n                    auto: \"confirm password\",\n                    icon: true // value={cPassword}\n                    // change={cPasswordChangeHandler}\n                    // blur={cPasswordBlurHandler}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(RButton, {\n                    name: \"Create Account\",\n                    color: \"success\",\n                    block: true,\n                    type: \"submit\",\n                    loading: state.isLoading,\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n                className: \"p-4\",\n                children: /*#__PURE__*/_jsxDEV(CRow, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"If you have already an account with us, please\", /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/login\",\n                      children: \" Login here\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Register, \"RVOWPknVJU3h3m3TiJ2Kf/jMWZ0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/views/pages/register/Register.js"],"names":["React","useState","useSelector","useDispatch","CCard","CCardBody","CCardFooter","CCol","CContainer","CForm","CRow","RInput","RButton","registerData","RAlert","Link","required","email","length","validPassword","Error","Register","mapStateToProps","state","isLoading","registerStore","message","dispatch","fname","value","valid","touched","validator","error","lname","username","min","password","cPassword","formData","setFormData","onInputChangeHandler","e","type","target","isValid","prevState","console","log","onInputBlurHandler","onRegisterHandler","preventDefault","isFormValid","marginTop","isRegistered"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CRow,\n} from \"@coreui/react\";\nimport RInput from \"src/Components/UI/Register/RInput\";\nimport RButton from \"src/Components/UI/Register/RButton\";\nimport { registerData } from \"src/store/register-slice\";\nimport RAlert from \"src/Components/UI/Alert/RAlert\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"src/Components/views/Store/UI/validator/Validator\";\nimport {\n  email,\n  length,\n  validPassword,\n} from \"src/Components/UI/Validation/Validator\";\nimport Error from \"src/Components/UI/Error/Error\";\n\nconst Register = () => {\n  const mapStateToProps = (state) => {\n    return {\n      isLoading: state.registerStore.isLoading,\n      message: state.registerStore.message,\n    };\n  };\n  const state = useSelector(mapStateToProps);\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState({\n    fname: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required],\n      error: \"First Name is Required!\",\n    },\n    lname: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required],\n      error: \"Last Name is Required!\",\n    },\n    email: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [email],\n      error: \"Enter Valid Email Address!\",\n    },\n    username: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required, length({ min: 6 })],\n      error: \"Username must be atleast 6 characters!\",\n    },\n    password: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      validator: [required, length({ min: 8 })],\n      error: \"Password must be atleast 8 characters!\",\n    },\n    cPassword: {\n      value: \"\",\n      valid: false,\n      touched: false,\n      // validator: [validPassword(formData.password.value)],\n      error: \"Password does not match!\",\n    },\n  });\n  const onInputChangeHandler = (e, type) => {\n    const value = e.target.value;\n    let isValid = true;\n    for (const validator of formData[type].validator) {\n      isValid = isValid && validator(value);\n    }\n    setFormData((prevState) => {\n      return {\n        ...prevState,\n        [type]: {\n          ...prevState[type],\n          value,\n          valid: isValid,\n        },\n      };\n    });\n    console.log(formData);\n  };\n  const onInputBlurHandler = (e, type) => {\n    setFormData((prevState) => {\n      return {\n        ...prevState,\n        [type]: {\n          ...prevState[type],\n          touched: true,\n        },\n      };\n    });\n  };\n  const onRegisterHandler = (e) => {\n    e.preventDefault();\n    // if (isFormValid) {\n    //   const data = {\n    //     // name: fname,\n    //     // last_name: lname,\n    //     // username,\n    //     // email,\n    //     // password,\n    //     // password_confirmation: cPassword,\n    //   };\n\n    //   dispatch(registerData(data));\n    // } else {\n    // }\n  };\n  let isFormValid = false;\n  return (\n    <>\n      <div\n        className=\"c-app c-default-layout flex-row align-items-center\"\n        style={{ marginTop: \"5%\" }}\n      >\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={12} lg={7} xl={6} sm={12}>\n              <CCard className=\"mx-4\">\n                <CCardBody className=\"p-4\">\n                  <CForm onSubmit={onRegisterHandler}>\n                    <h1>Register</h1>\n                    <p className=\"text-muted\">Create your account</p>\n                    {state.message.isRegistered && (\n                      <RAlert alert={state.message} />\n                    )}\n                    <div className=\"mb-3\">\n                      <RInput\n                        iconName=\"cil-user\"\n                        name=\"First Name\"\n                        auto=\"firstname\"\n                        id=\"fname\"\n                        icon={true}\n                        value={formData.fname.value}\n                        change={onInputChangeHandler}\n                        control={true}\n                        blur={onInputBlurHandler}\n                      />\n                      {!formData.fname.valid && formData.fname.touched && (\n                        <Error error={formData.fname.error} />\n                      )}\n                    </div>\n                    <RInput\n                      class=\"mb-3\"\n                      iconName=\"cil-user\"\n                      name=\"Last Name\"\n                      auto=\"lastname\"\n                      id=\"lname\"\n                      icon={true}\n                      value={formData.lname.value}\n                      change={onInputChangeHandler}\n                      control={true}\n                      blur={onInputBlurHandler}\n                    />\n                    {!formData.lname.valid && formData.lname.touched && (\n                      <Error error={formData.lname.error} />\n                    )}\n                    <RInput\n                      class=\"mb-3\"\n                      iconName=\"cil-user\"\n                      name=\"Username\"\n                      auto=\"username\"\n                      icon={true}\n                      // value={username}\n                      // change={usernameChangeHandler}\n                      // blur={usernameBlurHandler}\n                    />\n                    {/* {usernameIsInvalid && (\n                      <Error error=\"Username is required\" />\n                    )} */}\n                    <RInput\n                      class=\"mb-3\"\n                      iconName=\"@\"\n                      name=\"Email Address\"\n                      auto=\"email\"\n                      icon={false}\n                      // value={email}\n                      // change={emailChangeHandler}\n                      // blur={emailBlurHandler}\n                    />\n                    {/* {emailIsInvalid && (\n                      <Error error=\"Enter a Valid Email Address\" />\n                    )} */}\n                    <RInput\n                      class=\"mb-3\"\n                      iconName=\"cil-lock-locked\"\n                      name=\"Password\"\n                      auto=\"password\"\n                      icon={true}\n                      // value={password}\n                      // change={passwordChangeHandler}\n                      // blur={passwordBlurHandler}\n                      append={true}\n                      // click={onGenerateRandomPasswordHandler}\n                    />\n                    {/* {passwordIsInvalid && (\n                      <Error error=\"Password is required!!\" />\n                    )} */}\n                    <RInput\n                      class=\"mb-3\"\n                      iconName=\"cil-lock-locked\"\n                      name=\"Confirm Password\"\n                      auto=\"confirm password\"\n                      icon={true}\n                      // value={cPassword}\n                      // change={cPasswordChangeHandler}\n                      // blur={cPasswordBlurHandler}\n                    />\n                    {/* {cPasswordIsInvalid && (\n                      <Error error=\"Password does n't match!!\" />\n                    )} */}\n\n                    <RButton\n                      name=\"Create Account\"\n                      color=\"success\"\n                      block={true}\n                      type=\"submit\"\n                      loading={state.isLoading}\n                      disabled={true}\n                    />\n                  </CForm>\n                </CCardBody>\n                <CCardFooter className=\"p-4\">\n                  <CRow>\n                    <div>\n                      If you have already an account with us, please\n                      <Link to=\"/login\"> Login here</Link>\n                    </div>\n                    {/* <CCol xs=\"12\" sm=\"6\">\n                      <CButton className=\"btn-facebook mb-1\" block>\n                        <span>facebook</span>\n                      </CButton>\n                    </CCol>\n                    <CCol xs=\"12\" sm=\"6\">\n                      <CButton className=\"btn-twitter mb-1\" block>\n                        <span>twitter</span>\n                      </CButton>\n                    </CCol> */}\n                  </CRow>\n                </CCardFooter>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}