{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\views\\\\Home\\\\Posts\\\\Comment\\\\PostComment.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport FormTextArea from \"src/Components/UI/Input/FormTextArea\";\nimport { getDate } from \"src/custom-functions\";\nimport { sendGetAdminApi } from \"src/service/appService\";\nimport { getUrl } from \"src/service/customService\";\nimport CButton from \"src/Components/UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostComment = function PostComment(props) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cPagination = _useState4[0],\n      setpagination = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      param = _useState6[0],\n      setParam = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      writeComment = _useState8[0],\n      setWriteComment = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      commentChanged = _useState10[0],\n      setCommentChanged = _useState10[1];\n\n  useEffect(function () {\n    if (props.id && commentChanged) {\n      var url = getUrl(\"comments/get-post-comment/\".concat(props.id), param);\n      sendGetAdminApi(url).then(function (response) {\n        var data = {\n          data: response.data.data\n        };\n        setComment(response.data.data.data);\n        setpagination(response.data.data);\n      }).catch(function (error) {\n        console.log(error.message);\n      });\n    }\n  }, [props.id, param, commentChanged]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    var param = url.split(\"?\")[1];\n    setParam(param);\n  };\n\n  var onCommentChangeHandler = function onCommentChangeHandler(e) {\n    setWriteComment(e.target.value);\n  };\n\n  var onCreateCommentHandler = function onCreateCommentHandler() {\n    if (writeComment) {\n      var data = {\n        post_id: props.id,\n        content: writeComment\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [comment.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-primary font-italic\",\n        children: \"no comment yet for this post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, _this), comment.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [comment.map(function (row, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"font-weight-bolder text-primary\",\n              children: [row.name, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"font-italic\",\n                children: [\"On \", getDate(row.created_at)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: row.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Pagination, {\n          body: cPagination,\n          change: pageChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          md: 8,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(FormTextArea, {\n            labelName: \"Write your comment here\",\n            readOnly: false,\n            row: 5,\n            value: writeComment,\n            change: onCommentChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          md: 4,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            type: \"button\",\n            color: \"success\",\n            width: \"30%\",\n            name: \"Submit\",\n            click: onCreateCommentHandler,\n            loading: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(PostComment, \"TU9r+tphYWIZNJbvbSbUXTYHvPM=\");\n\n_c = PostComment;\nexport default _c2 = /*#__PURE__*/React.memo(PostComment);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostComment\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/views/Home/Posts/Comment/PostComment.js"],"names":["React","useEffect","useState","CCol","CRow","Pagination","FormTextArea","getDate","sendGetAdminApi","getUrl","CButton","PostComment","props","comment","setComment","cPagination","setpagination","param","setParam","writeComment","setWriteComment","commentChanged","setCommentChanged","id","url","then","response","data","catch","error","console","log","message","pageChangeHandler","split","onCommentChangeHandler","e","target","value","onCreateCommentHandler","post_id","content","length","map","row","index","name","created_at","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport FormTextArea from \"src/Components/UI/Input/FormTextArea\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport { sendGetAdminApi } from \"src/service/appService\";\r\nimport { getUrl } from \"src/service/customService\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nconst PostComment = (props) => {\r\n  const [comment, setComment] = useState([]);\r\n  const [cPagination, setpagination] = useState(\"\");\r\n  const [param, setParam] = useState(\"\");\r\n  const [writeComment, setWriteComment] = useState(\"\");\r\n  const [commentChanged, setCommentChanged] = useState(true);\r\n  useEffect(() => {\r\n    if (props.id && commentChanged) {\r\n      const url = getUrl(`comments/get-post-comment/${props.id}`, param);\r\n      sendGetAdminApi(url)\r\n        .then((response) => {\r\n          const data = {\r\n            data: response.data.data,\r\n          };\r\n          setComment(response.data.data.data);\r\n          setpagination(response.data.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  }, [props.id, param, commentChanged]);\r\n  const pageChangeHandler = (url) => {\r\n    const param = url.split(\"?\")[1];\r\n    setParam(param);\r\n  };\r\n\r\n  const onCommentChangeHandler = (e) => {\r\n    setWriteComment(e.target.value);\r\n  };\r\n  const onCreateCommentHandler = () => {\r\n    if (writeComment) {\r\n      const data = {\r\n        post_id: props.id,\r\n        content: writeComment,\r\n      };\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <>\r\n        {comment.length === 0 && (\r\n          <span className=\"text-primary font-italic\">\r\n            no comment yet for this post\r\n          </span>\r\n        )}\r\n        {comment.length > 0 && (\r\n          <>\r\n            {comment.map((row, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <h6 className=\"font-weight-bolder text-primary\">\r\n                    {row.name}{\" \"}\r\n                    <small className=\"font-italic\">\r\n                      On {getDate(row.created_at)}\r\n                    </small>\r\n                  </h6>\r\n                  <p className=\"mt-2\">{row.content}</p>\r\n                </div>\r\n              );\r\n            })}\r\n            <Pagination body={cPagination} change={pageChangeHandler} />\r\n          </>\r\n        )}\r\n        <CRow>\r\n          <CCol md={8} sm={12}>\r\n            <FormTextArea\r\n              labelName=\"Write your comment here\"\r\n              readOnly={false}\r\n              row={5}\r\n              value={writeComment}\r\n              change={onCommentChangeHandler}\r\n            ></FormTextArea>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <CCol md={4} sm={12}>\r\n            <CButton\r\n              type=\"button\"\r\n              color=\"success\"\r\n              width=\"30%\"\r\n              name=\"Submit\"\r\n              click={onCreateCommentHandler}\r\n              loading={true}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    </>\r\n  );\r\n};\r\nexport default React.memo(PostComment);\r\n"]},"metadata":{},"sourceType":"module"}