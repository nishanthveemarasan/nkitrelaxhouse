{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { getApi, sendGetAdminApi } from \"src/service/appService\";\nimport { getUrl } from \"src/service/customService\";\nimport { shopStoreAction } from \"./store\";\nvar initialState = {\n  shop: {\n    product: [],\n    isDataReceived: false,\n    param: \"\",\n    productId: 0\n  },\n  reRunComponent: {\n    isDataChanged: true\n  },\n  singaleProductData: {\n    data: \"\"\n  },\n  order: {\n    data: [],\n    isDataReceived: false,\n    param: \"\",\n    status: \"all\",\n    method: \"all\",\n    orderStatus: \"all\"\n  },\n  singleOrderData: {\n    data: \"\"\n  }\n};\nvar shopSlice = createSlice({\n  name: \"shop\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: false\n      });\n    },\n    getStoreProduct: function getStoreProduct(state, action) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        product: action.payload.data\n      });\n    },\n    getResponse: function getResponse(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: true\n      });\n    },\n    updateParam: function updateParam(state, action) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        param: action.payload.param\n      });\n    },\n    getSingleProductData: function getSingleProductData(state, action) {\n      state.singaleProductData = {\n        data: action.payload.data\n      };\n    },\n    updateProductId: function updateProductId(state, action) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        productId: action.payload.id\n      });\n      console.log(state.shop);\n    },\n    sendProductOrderRequest: function sendProductOrderRequest(state) {\n      state.order = _objectSpread(_objectSpread({}, state.order), {}, {\n        isDataReceived: false\n      });\n    },\n    UpdateStoreOrderData: function UpdateStoreOrderData(state, action) {\n      state.order = _objectSpread(_objectSpread({}, state.order), {}, {\n        isDataReceived: true,\n        data: action.payload.data\n      });\n    },\n    updateOrderParam: function updateOrderParam(state, action) {\n      state.order = _objectSpread(_objectSpread({}, state.order), {}, {\n        param: action.payload.param\n      });\n    },\n    getSingleOrder: function getSingleOrder(state, action) {\n      state.singleOrderData = _objectSpread(_objectSpread({}, state.singleOrderData), {}, {\n        data: action.payload.data\n      });\n    },\n    updatePayStatus: function updatePayStatus(state, action) {\n      state.order = _objectSpread(_objectSpread({}, state.order), {}, {\n        status: action.payload.status\n      });\n    },\n    updatePayMethod: function updatePayMethod(state, action) {\n      state.order = _objectSpread(_objectSpread({}, state.order), {}, {\n        method: action.payload.method\n      });\n    }\n  }\n});\nexport default shopSlice;\nexport var getStoreProductData = function getStoreProductData(param) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var url, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(shopStoreAction.sendRequest());\n              _context.prev = 1;\n              url = getUrl(\"store/get-products/6\", param);\n              _context.next = 5;\n              return getApi(url);\n\n            case 5:\n              response = _context.sent;\n              dispatch(shopStoreAction.getStoreProduct({\n                data: response.data.data\n              }));\n              dispatch(shopStoreAction.getResponse());\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0.response);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getStoreOrderData = function getStoreOrderData(param, ordertatus, method, deliveryStatus) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var url, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(shopStoreAction.sendProductOrderRequest());\n              url = getUrl(\"store/order-data/\".concat(ordertatus, \"/\").concat(method, \"/$\"), param);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return sendGetAdminApi(url);\n\n            case 5:\n              response = _context2.sent;\n              dispatch(shopStoreAction.UpdateStoreOrderData({\n                data: response.data.data\n              }));\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0.response);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/shop-slice.js"],"names":["createSlice","getApi","sendGetAdminApi","getUrl","shopStoreAction","initialState","shop","product","isDataReceived","param","productId","reRunComponent","isDataChanged","singaleProductData","data","order","status","method","orderStatus","singleOrderData","shopSlice","name","reducers","sendRequest","state","getStoreProduct","action","payload","getResponse","updateParam","getSingleProductData","updateProductId","id","console","log","sendProductOrderRequest","UpdateStoreOrderData","updateOrderParam","getSingleOrder","updatePayStatus","updatePayMethod","getStoreProductData","dispatch","url","response","getStoreOrderData","ordertatus","deliveryStatus"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getApi, sendGetAdminApi } from \"src/service/appService\";\r\nimport { getUrl } from \"src/service/customService\";\r\nimport { shopStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  shop: {\r\n    product: [],\r\n    isDataReceived: false,\r\n    param: \"\",\r\n    productId: 0,\r\n  },\r\n\r\n  reRunComponent: {\r\n    isDataChanged: true,\r\n  },\r\n  singaleProductData: {\r\n    data: \"\",\r\n  },\r\n  order: {\r\n    data: [],\r\n    isDataReceived: false,\r\n    param: \"\",\r\n    status: \"all\",\r\n    method: \"all\",\r\n    orderStatus: \"all\",\r\n  },\r\n  singleOrderData: {\r\n    data: \"\",\r\n  },\r\n};\r\n\r\nconst shopSlice = createSlice({\r\n  name: \"shop\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: false,\r\n      };\r\n    },\r\n    getStoreProduct(state, action) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        product: action.payload.data,\r\n      };\r\n    },\r\n    getResponse(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: true,\r\n      };\r\n    },\r\n    updateParam(state, action) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        param: action.payload.param,\r\n      };\r\n    },\r\n    getSingleProductData(state, action) {\r\n      state.singaleProductData = {\r\n        data: action.payload.data,\r\n      };\r\n    },\r\n    updateProductId(state, action) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        productId: action.payload.id,\r\n      };\r\n      console.log(state.shop);\r\n    },\r\n    sendProductOrderRequest(state) {\r\n      state.order = {\r\n        ...state.order,\r\n        isDataReceived: false,\r\n      };\r\n    },\r\n    UpdateStoreOrderData(state, action) {\r\n      state.order = {\r\n        ...state.order,\r\n        isDataReceived: true,\r\n        data: action.payload.data,\r\n      };\r\n    },\r\n    updateOrderParam(state, action) {\r\n      state.order = {\r\n        ...state.order,\r\n        param: action.payload.param,\r\n      };\r\n    },\r\n    getSingleOrder(state, action) {\r\n      state.singleOrderData = {\r\n        ...state.singleOrderData,\r\n        data: action.payload.data,\r\n      };\r\n    },\r\n    updatePayStatus(state, action) {\r\n      state.order = {\r\n        ...state.order,\r\n        status: action.payload.status,\r\n      };\r\n    },\r\n    updatePayMethod(state, action) {\r\n      state.order = {\r\n        ...state.order,\r\n        method: action.payload.method,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default shopSlice;\r\n\r\nexport const getStoreProductData = (param) => {\r\n  return async (dispatch) => {\r\n    dispatch(shopStoreAction.sendRequest());\r\n    try {\r\n      const url = getUrl(`store/get-products/6`, param);\r\n      const response = await getApi(url);\r\n      dispatch(\r\n        shopStoreAction.getStoreProduct({\r\n          data: response.data.data,\r\n        })\r\n      );\r\n      dispatch(shopStoreAction.getResponse());\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\nexport const getStoreOrderData = (param, ordertatus, method, deliveryStatus) => {\r\n  return async (dispatch) => {\r\n    dispatch(shopStoreAction.sendProductOrderRequest());\r\n    const url = getUrl(`store/order-data/${ordertatus}/${method}/$`, param);\r\n    try {\r\n      const response = await sendGetAdminApi(url);\r\n      dispatch(\r\n        shopStoreAction.UpdateStoreOrderData({\r\n          data: response.data.data,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}