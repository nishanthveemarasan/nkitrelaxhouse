{"ast":null,"code":"import _toConsumableArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { sendGetAdminApi, sendPostAdminApi } from \"src/service/appService\";\nimport { getUrl } from \"src/service/customService\";\nimport { saleStoreAction } from \"./store\";\nvar initialState = {\n  isDataLoaded: false,\n  saleData: [],\n  reRunComponent: {\n    isDataChanged: true,\n    queryParam: \"\"\n  },\n  saleModalData: {\n    isLoading: false,\n    saleId: 0,\n    orderData: \"\",\n    actionType: \"\",\n    isModalOpen: false,\n    modalHeading: \"\",\n    modalAction: \"\",\n    variant: \"\"\n  },\n  updateSaleData: {\n    isLoading: false,\n    isUpdated: false,\n    msg: \"\",\n    variant: \"\"\n  },\n  addSaleModalData: {\n    isLoading: false,\n    latestOrderId: \"\",\n    productNames: [],\n    modalHeading: \"Add A New Order\",\n    modalActionButton: \"Create\",\n    isModalOpen: false\n  },\n  addOrder: {\n    isLoading: false,\n    orderCreated: false,\n    orderItem: [],\n    msg: \"\",\n    color: \"\"\n  },\n  refreshORderId: false\n};\nvar saleSlice = createSlice({\n  name: \"sale\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataLoaded = true;\n      state.saleData = action.payload.sale;\n    },\n    updateParam: function updateParam(state, action) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        queryParam: action.payload.param\n      });\n    },\n    loadModalInitialData: function loadModalInitialData(state, action) {\n      state.saleModalData = {\n        isLoading: true,\n        saleId: action.payload.id,\n        actionType: action.payload.action\n      };\n    },\n    loadSaleModal: function loadSaleModal(state, action) {\n      state.saleModalData = {\n        isLoading: false,\n        modalData: action.payload.saleDetails,\n        saleId: action.payload.id,\n        isModalOpen: true,\n        modalHeading: action.payload.heading,\n        modalAction: action.payload.actionType,\n        variant: action.payload.variant\n      }; //console.log(state.saleModalData);\n    },\n    closeModal: function closeModal(state) {\n      state.saleModalData = {\n        isLoading: false,\n        saleId: 0,\n        actionType: \"\",\n        isModalOpen: false,\n        modalHeading: \"\",\n        modalAction: \"\",\n        variant: \"\"\n      };\n      state.updateSaleData = {\n        isLoading: false,\n        isUpdated: false,\n        msg: \"\",\n        variant: \"\"\n      };\n      state.addSaleModalData = {\n        isLoading: false,\n        latestOrderId: \"000\",\n        productNames: [],\n        modalHeading: \"Add A New Order\",\n        modalActionButton: \"Create\",\n        isModalOpen: false\n      };\n      state.addOrder = {\n        isLoading: false,\n        orderCreated: false,\n        orderItem: [],\n        msg: \"\",\n        color: \"\"\n      };\n    },\n    updatingData: function updatingData(state) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        isDataChanged: false\n      });\n      state.updateSaleData = _objectSpread(_objectSpread({}, state.updateSaleData), {}, {\n        isLoading: true\n      });\n    },\n    dataUpdated: function dataUpdated(state, action) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        isDataChanged: true\n      });\n      state.updateSaleData = {\n        isLoading: false,\n        isUpdated: true,\n        msg: action.payload.msg,\n        variant: action.payload.color\n      };\n    },\n    loadingInitialAddModal: function loadingInitialAddModal(state) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        isLoading: true\n      });\n    },\n    getlatestOrderId: function getlatestOrderId(state, action) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        latestOrderId: action.payload.id\n      });\n      state.refreshORderId = false;\n    },\n    getProductNames: function getProductNames(state, action) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        productNames: action.payload.names\n      });\n    },\n    loadAddModalData: function loadAddModalData(state) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        isLoading: false,\n        isModalOpen: true\n      });\n    },\n    addOrderItemCart: function addOrderItemCart(state, action) {\n      var copyOrderList = [].concat(_toConsumableArray(state.addOrder.orderItem), [action.payload.data]);\n      state.addOrder = _objectSpread(_objectSpread({}, state.addOrder), {}, {\n        orderItem: copyOrderList\n      }); // console.log(state.addOrder);\n    },\n    removeOrderItemCart: function removeOrderItemCart(state, action) {\n      var copyOrderList = state.addOrder.orderItem.slice();\n      copyOrderList.splice(action.payload.id, 1);\n      state.addOrder = _objectSpread(_objectSpread({}, state.addOrder), {}, {\n        orderItem: copyOrderList\n      });\n    },\n    updateOrderItem: function updateOrderItem(state, action) {\n      var id = action.payload.id;\n      var copyOrderList = state.addOrder.orderItem.slice();\n      copyOrderList[id].quantity = action.payload.quantity;\n      state.addOrder = _objectSpread(_objectSpread({}, state.addOrder), {}, {\n        orderItem: copyOrderList\n      });\n    },\n    initiateCreatingOrder: function initiateCreatingOrder(state) {\n      state.addOrder = _objectSpread(_objectSpread({}, state.addOrder), {}, {\n        isLoading: true,\n        orderCreated: false\n      });\n    },\n    orderCreated: function orderCreated(state, action) {\n      state.addOrder = _objectSpread(_objectSpread({}, state.addOrder), {}, {\n        isLoading: false,\n        msg: action.payload.msg,\n        color: action.payload.color,\n        orderItem: [],\n        orderCreated: true\n      });\n    },\n    dataNotChanged: function dataNotChanged(state) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        isDataChanged: false\n      });\n    },\n    dataChanged: function dataChanged(state) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        isDataChanged: true\n      });\n    },\n    refreshOrderLatestId: function refreshOrderLatestId(state) {\n      state.refreshORderId = true;\n    }\n  }\n});\nexport default saleSlice;\nexport var getSaleData = function getSaleData(data) {\n  return function (dispatch) {\n    var url = getUrl(\"order/get-order-data\", data.param);\n    sendGetAdminApi(url).then(function (response) {\n      console.log(response.data.http_status);\n\n      if (response.data.http_status === 200) {\n        dispatch(saleStoreAction.getData({\n          sale: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var getSaleModalData = function getSaleModalData(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.loadModalInitialData({\n      id: data.id,\n      action: data.action\n    }));\n    dispatch(saleStoreAction.loadSaleModal({\n      id: data.id,\n      saleDetails: data.saleData,\n      heading: data.action === \"Update\" ? \"Update the Order\" : \"Cancel The Order\",\n      actionType: data.action === \"Update\" ? \"Update\" : \"Cancel\",\n      variant: data.action === \"Update\" ? \"primary\" : \"danger\"\n    }));\n  };\n};\nexport var closeSaleModal = function closeSaleModal() {\n  return function (dispatch) {\n    dispatch(saleStoreAction.closeModal());\n  };\n};\nexport var updateSaleData = function updateSaleData(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.updatingData());\n    sendPostAdminApi(\"order/edit-order-data\", data).then(function (response) {\n      dispatch(saleStoreAction.dataUpdated({\n        msg: response.data.data.msg,\n        color: \"success\"\n      }));\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};\nexport var openAddOrderModal = function openAddOrderModal() {\n  return function (dispatch) {\n    dispatch(saleStoreAction.loadingInitialAddModal());\n    send(\"order/edit-order-data\", data);\n    API.get(\"order/get-latest-order-id\").then(function (response) {\n      if (response.data.http_status === 200) {\n        var id = response.data.data.order_id;\n        dispatch(saleStoreAction.getlatestOrderId({\n          id: id\n        }));\n      }\n    }).catch();\n    API.get(\"get-product-names\").then(function (response) {\n      if (response.data.http_status === 200) {\n        var names = response.data.data;\n        dispatch(saleStoreAction.getProductNames({\n          names: names\n        }));\n        dispatch(saleStoreAction.loadAddModalData());\n      }\n    }).catch();\n  };\n};\nexport var initiateCreateOrder = function initiateCreateOrder(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.initiateCreatingOrder());\n    dispatch(saleStoreAction.dataNotChanged());\n    API.post(\"order/create\", data).then(function (response) {\n      dispatch(saleStoreAction.dataChanged());\n\n      if (response.data.http_status === 200) {\n        dispatch(saleStoreAction.orderCreated({\n          msg: response.data.data.msg,\n          color: \"success\"\n        }));\n      }\n    }); // dispatch(\n    //   saleStoreAction.orderCreated({\n    //     msg: result.msg,\n    //     color: \"success\",\n    //   })\n    // );\n  };\n};\nexport var refreshOrderIdData = function refreshOrderIdData() {\n  return function (dispatch) {\n    dispatch(saleStoreAction.refreshOrderLatestId());\n    API.get(\"order/get-latest-order-id\").then(function (response) {\n      if (response.data.http_status === 200) {\n        var id = response.data.data.order_id;\n        dispatch(saleStoreAction.getlatestOrderId({\n          id: id\n        }));\n      }\n    }).catch();\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/sale-slice.js"],"names":["createSlice","API","sendGetAdminApi","sendPostAdminApi","getUrl","saleStoreAction","initialState","isDataLoaded","saleData","reRunComponent","isDataChanged","queryParam","saleModalData","isLoading","saleId","orderData","actionType","isModalOpen","modalHeading","modalAction","variant","updateSaleData","isUpdated","msg","addSaleModalData","latestOrderId","productNames","modalActionButton","addOrder","orderCreated","orderItem","color","refreshORderId","saleSlice","name","reducers","getData","state","action","payload","sale","updateParam","param","loadModalInitialData","id","loadSaleModal","modalData","saleDetails","heading","closeModal","updatingData","dataUpdated","loadingInitialAddModal","getlatestOrderId","getProductNames","names","loadAddModalData","addOrderItemCart","copyOrderList","data","removeOrderItemCart","slice","splice","updateOrderItem","quantity","initiateCreatingOrder","dataNotChanged","dataChanged","refreshOrderLatestId","getSaleData","dispatch","url","then","response","console","log","http_status","catch","error","message","getSaleModalData","closeSaleModal","openAddOrderModal","send","get","order_id","initiateCreateOrder","post","refreshOrderIdData"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { sendGetAdminApi, sendPostAdminApi } from \"src/service/appService\";\r\nimport { getUrl } from \"src/service/customService\";\r\nimport { saleStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataLoaded: false,\r\n  saleData: [],\r\n  reRunComponent: {\r\n    isDataChanged: true,\r\n    queryParam: \"\",\r\n  },\r\n  saleModalData: {\r\n    isLoading: false,\r\n    saleId: 0,\r\n    orderData: \"\",\r\n    actionType: \"\",\r\n    isModalOpen: false,\r\n    modalHeading: \"\",\r\n    modalAction: \"\",\r\n    variant: \"\",\r\n  },\r\n  updateSaleData: {\r\n    isLoading: false,\r\n    isUpdated: false,\r\n    msg: \"\",\r\n    variant: \"\",\r\n  },\r\n  addSaleModalData: {\r\n    isLoading: false,\r\n    latestOrderId: \"\",\r\n    productNames: [],\r\n    modalHeading: \"Add A New Order\",\r\n    modalActionButton: \"Create\",\r\n    isModalOpen: false,\r\n  },\r\n  addOrder: {\r\n    isLoading: false,\r\n    orderCreated: false,\r\n    orderItem: [],\r\n    msg: \"\",\r\n    color: \"\",\r\n  },\r\n  refreshORderId: false,\r\n};\r\n\r\nconst saleSlice = createSlice({\r\n  name: \"sale\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataLoaded = true;\r\n      state.saleData = action.payload.sale;\r\n    },\r\n    updateParam(state, action) {\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        queryParam: action.payload.param,\r\n      };\r\n    },\r\n    loadModalInitialData(state, action) {\r\n      state.saleModalData = {\r\n        isLoading: true,\r\n        saleId: action.payload.id,\r\n        actionType: action.payload.action,\r\n      };\r\n    },\r\n    loadSaleModal(state, action) {\r\n      state.saleModalData = {\r\n        isLoading: false,\r\n        modalData: action.payload.saleDetails,\r\n        saleId: action.payload.id,\r\n        isModalOpen: true,\r\n        modalHeading: action.payload.heading,\r\n        modalAction: action.payload.actionType,\r\n        variant: action.payload.variant,\r\n      };\r\n      //console.log(state.saleModalData);\r\n    },\r\n    closeModal(state) {\r\n      state.saleModalData = {\r\n        isLoading: false,\r\n        saleId: 0,\r\n        actionType: \"\",\r\n        isModalOpen: false,\r\n        modalHeading: \"\",\r\n        modalAction: \"\",\r\n        variant: \"\",\r\n      };\r\n      state.updateSaleData = {\r\n        isLoading: false,\r\n        isUpdated: false,\r\n        msg: \"\",\r\n        variant: \"\",\r\n      };\r\n      state.addSaleModalData = {\r\n        isLoading: false,\r\n        latestOrderId: \"000\",\r\n        productNames: [],\r\n        modalHeading: \"Add A New Order\",\r\n        modalActionButton: \"Create\",\r\n        isModalOpen: false,\r\n      };\r\n      state.addOrder = {\r\n        isLoading: false,\r\n        orderCreated: false,\r\n        orderItem: [],\r\n        msg: \"\",\r\n        color: \"\",\r\n      };\r\n    },\r\n    updatingData(state) {\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        isDataChanged: false,\r\n      };\r\n      state.updateSaleData = {\r\n        ...state.updateSaleData,\r\n        isLoading: true,\r\n      };\r\n    },\r\n    dataUpdated(state, action) {\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        isDataChanged: true,\r\n      };\r\n      state.updateSaleData = {\r\n        isLoading: false,\r\n        isUpdated: true,\r\n        msg: action.payload.msg,\r\n        variant: action.payload.color,\r\n      };\r\n    },\r\n    loadingInitialAddModal(state) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        isLoading: true,\r\n      };\r\n    },\r\n    getlatestOrderId(state, action) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        latestOrderId: action.payload.id,\r\n      };\r\n      state.refreshORderId = false;\r\n    },\r\n    getProductNames(state, action) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        productNames: action.payload.names,\r\n      };\r\n    },\r\n    loadAddModalData(state) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        isLoading: false,\r\n        isModalOpen: true,\r\n      };\r\n    },\r\n    addOrderItemCart(state, action) {\r\n      const copyOrderList = [...state.addOrder.orderItem, action.payload.data];\r\n      state.addOrder = {\r\n        ...state.addOrder,\r\n        orderItem: copyOrderList,\r\n      };\r\n      // console.log(state.addOrder);\r\n    },\r\n    removeOrderItemCart(state, action) {\r\n      const copyOrderList = state.addOrder.orderItem.slice();\r\n      copyOrderList.splice(action.payload.id, 1);\r\n      state.addOrder = {\r\n        ...state.addOrder,\r\n        orderItem: copyOrderList,\r\n      };\r\n    },\r\n    updateOrderItem(state, action) {\r\n      const id = action.payload.id;\r\n      const copyOrderList = state.addOrder.orderItem.slice();\r\n      copyOrderList[id].quantity = action.payload.quantity;\r\n      state.addOrder = {\r\n        ...state.addOrder,\r\n        orderItem: copyOrderList,\r\n      };\r\n    },\r\n    initiateCreatingOrder(state) {\r\n      state.addOrder = {\r\n        ...state.addOrder,\r\n        isLoading: true,\r\n        orderCreated: false,\r\n      };\r\n    },\r\n    orderCreated(state, action) {\r\n      state.addOrder = {\r\n        ...state.addOrder,\r\n        isLoading: false,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n        orderItem: [],\r\n        orderCreated: true,\r\n      };\r\n    },\r\n    dataNotChanged(state) {\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        isDataChanged: false,\r\n      };\r\n    },\r\n    dataChanged(state) {\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        isDataChanged: true,\r\n      };\r\n    },\r\n    refreshOrderLatestId(state) {\r\n      state.refreshORderId = true;\r\n    },\r\n  },\r\n});\r\nexport default saleSlice;\r\n\r\nexport const getSaleData = (data) => {\r\n  return (dispatch) => {\r\n    const url = getUrl(\"order/get-order-data\", data.param);\r\n    sendGetAdminApi(url)\r\n      .then((response) => {\r\n        console.log(response.data.http_status);\r\n        if (response.data.http_status === 200) {\r\n          dispatch(saleStoreAction.getData({ sale: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getSaleModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      saleStoreAction.loadModalInitialData({\r\n        id: data.id,\r\n        action: data.action,\r\n      })\r\n    );\r\n    dispatch(\r\n      saleStoreAction.loadSaleModal({\r\n        id: data.id,\r\n        saleDetails: data.saleData,\r\n        heading:\r\n          data.action === \"Update\" ? \"Update the Order\" : \"Cancel The Order\",\r\n        actionType: data.action === \"Update\" ? \"Update\" : \"Cancel\",\r\n        variant: data.action === \"Update\" ? \"primary\" : \"danger\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const closeSaleModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.closeModal());\r\n  };\r\n};\r\n\r\nexport const updateSaleData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.updatingData());\r\n    sendPostAdminApi(\"order/edit-order-data\", data)\r\n      .then((response) => {\r\n        dispatch(\r\n          saleStoreAction.dataUpdated({\r\n            msg: response.data.data.msg,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n\r\nexport const openAddOrderModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.loadingInitialAddModal());\r\n    send(\"order/edit-order-data\", data)\r\n    API.get(\"order/get-latest-order-id\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const id = response.data.data.order_id;\r\n          dispatch(saleStoreAction.getlatestOrderId({ id }));\r\n        }\r\n      })\r\n      .catch();\r\n    API.get(\"get-product-names\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const names = response.data.data;\r\n          dispatch(saleStoreAction.getProductNames({ names }));\r\n          dispatch(saleStoreAction.loadAddModalData());\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport const initiateCreateOrder = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.initiateCreatingOrder());\r\n    dispatch(saleStoreAction.dataNotChanged());\r\n    API.post(\"order/create\", data).then((response) => {\r\n      dispatch(saleStoreAction.dataChanged());\r\n      if (response.data.http_status === 200) {\r\n        dispatch(\r\n          saleStoreAction.orderCreated({\r\n            msg: response.data.data.msg,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      }\r\n    });\r\n\r\n    // dispatch(\r\n    //   saleStoreAction.orderCreated({\r\n    //     msg: result.msg,\r\n    //     color: \"success\",\r\n    //   })\r\n    // );\r\n  };\r\n};\r\n\r\nexport const refreshOrderIdData = () => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.refreshOrderLatestId());\r\n    API.get(\"order/get-latest-order-id\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const id = response.data.data.order_id;\r\n          dispatch(saleStoreAction.getlatestOrderId({ id }));\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}