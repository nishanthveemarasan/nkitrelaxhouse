{"ast":null,"code":"import _regeneratorRuntime from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{CCol,CRow}from\"@coreui/react\";import{Form}from\"react-bootstrap\";import CButton from\"src/Components/UI/Button/Button\";import Card from\"src/Components/UI/Card/Card\";import FormGroup from\"src/Components/UI/Input/FormGroup\";import FormInputLabel from\"src/Components/UI/Input/FormInputLabel\";import{generateRandomPassword}from\"src/service/customService\";import useFormValidate from\"src/Hooks/input-validation\";import CAlert from\"src/Components/UI/Alert/CAlert\";import{sendPostAdminApi}from\"src/service/appService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PasswordReset=function PasswordReset(props){var data=props.body;var _useFormValidate=useFormValidate(),password=_useFormValidate.inputValue,setPassword=_useFormValidate.setInputValue,passwordChangeHandler=_useFormValidate.inputChangeHandler;var _useFormValidate2=useFormValidate(),password_confirmation=_useFormValidate2.inputValue,passwordConfirmationChangeHandler=_useFormValidate2.inputChangeHandler;var _useState=useState(\"view\"),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var _useState3=useState(\"password\"),_useState4=_slicedToArray(_useState3,2),type=_useState4[0],setType=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState({msg:\"\",dataReceived:false,color:\"\"}),_useState8=_slicedToArray(_useState7,2),response=_useState8[0],setResponse=_useState8[1];var generateRandomPasswordHandler=function generateRandomPasswordHandler(){var password=generateRandomPassword(15);setPassword(password);};var onViewHandler=function onViewHandler(){if(view===\"view\"){setView(\"hide\");setType(\"text\");}else if(view===\"hide\"){setView(\"view\");setType(\"password\");}};var onResetPasswordHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var passwordData,_response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();passwordData={user_id:data.id,password:password,password_confirmation:password_confirmation};if(!(password&&password_confirmation&&password===password_confirmation)){_context.next=12;break;}setLoading(true);setResponse(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{dataReceived:false});});_context.next=7;return sendPostAdminApi(\"users/password-reset\",passwordData);case 7:_response=_context.sent;setResponse(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{dataReceived:true,msg:_response.data.data.msg,color:\"success\"});});setLoading(false);_context.next=13;break;case 12:setResponse(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{dataReceived:true,msg:\"Password does not match!!\",color:\"danger\"});});case 13:case\"end\":return _context.stop();}}},_callee);}));return function onResetPasswordHandler(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Card,{color:\"primary\",header:\"Change Password\",children:[response.dataReceived&&/*#__PURE__*/_jsx(CAlert,{color:response.color,text:response.msg}),/*#__PURE__*/_jsxs(Form,{onSubmit:onResetPasswordHandler,children:[/*#__PURE__*/_jsxs(CRow,{children:[/*#__PURE__*/_jsx(FormGroup,{placeholder:\"New Password\",type:type,group:view,md:8,sm:12,value:password,change:passwordChangeHandler,viewHandler:onViewHandler}),/*#__PURE__*/_jsx(CCol,{md:4,sm:12,className:\"text-right\",children:/*#__PURE__*/_jsx(CButton,{color:\"light\",width:\"30%\",type:\"button\",loading:false,name:\"generate\",block:true,click:generateRandomPasswordHandler})})]}),/*#__PURE__*/_jsx(CRow,{children:/*#__PURE__*/_jsx(FormInputLabel,{label:false,type:type,readOnly:false,md:8,sm:12,placeHolder:\"Confirm Password\",value:password_confirmation,change:passwordConfirmationChangeHandler})}),/*#__PURE__*/_jsx(CRow,{children:/*#__PURE__*/_jsx(CCol,{md:12,sm:12,className:\"text-right\",children:/*#__PURE__*/_jsx(CButton,{color:\"success\",width:\"30%\",type:\"submit\",loading:loading,name:\"Reset\"})})})]})]});};export default PasswordReset;","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Users/UserDetail/PasswordReset.js"],"names":["useState","CCol","CRow","Form","CButton","Card","FormGroup","FormInputLabel","generateRandomPassword","useFormValidate","CAlert","sendPostAdminApi","PasswordReset","props","data","body","password","inputValue","setPassword","setInputValue","passwordChangeHandler","inputChangeHandler","password_confirmation","passwordConfirmationChangeHandler","view","setView","type","setType","loading","setLoading","msg","dataReceived","color","response","setResponse","generateRandomPasswordHandler","onViewHandler","onResetPasswordHandler","e","preventDefault","passwordData","user_id","id","prevState"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport FormGroup from \"src/Components/UI/Input/FormGroup\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport { generateRandomPassword } from \"src/service/customService\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport { sendPostAdminApi } from \"src/service/appService\";\r\nconst PasswordReset = (props) => {\r\n  const data = props.body;\r\n  const {\r\n    inputValue: password,\r\n    setInputValue: setPassword,\r\n    inputChangeHandler: passwordChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: password_confirmation,\r\n    inputChangeHandler: passwordConfirmationChangeHandler,\r\n  } = useFormValidate();\r\n  const [view, setView] = useState(\"view\");\r\n  const [type, setType] = useState(\"password\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    msg: \"\",\r\n    dataReceived: false,\r\n    color: \"\",\r\n  });\r\n  const generateRandomPasswordHandler = () => {\r\n    const password = generateRandomPassword(15);\r\n    setPassword(password);\r\n  };\r\n\r\n  const onViewHandler = () => {\r\n    if (view === \"view\") {\r\n      setView(\"hide\");\r\n      setType(\"text\");\r\n    } else if (view === \"hide\") {\r\n      setView(\"view\");\r\n      setType(\"password\");\r\n    }\r\n  };\r\n\r\n  const onResetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n    const passwordData = {\r\n      user_id: data.id,\r\n      password,\r\n      password_confirmation,\r\n    };\r\n    if (\r\n      password &&\r\n      password_confirmation &&\r\n      password === password_confirmation\r\n    ) {\r\n      setLoading(true);\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: false,\r\n        };\r\n      });\r\n      const response = await sendPostAdminApi(\r\n        \"users/password-reset\",\r\n        passwordData\r\n      );\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: true,\r\n          msg: response.data.data.msg,\r\n          color: \"success\",\r\n        };\r\n      });\r\n      setLoading(false);\r\n    } else {\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: true,\r\n          msg: \"Password does not match!!\",\r\n          color: \"danger\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Card color=\"primary\" header=\"Change Password\">\r\n      {response.dataReceived && (\r\n        <CAlert color={response.color} text={response.msg} />\r\n      )}\r\n      <Form onSubmit={onResetPasswordHandler}>\r\n        <CRow>\r\n          <FormGroup\r\n            placeholder=\"New Password\"\r\n            type={type}\r\n            group={view}\r\n            md={8}\r\n            sm={12}\r\n            value={password}\r\n            change={passwordChangeHandler}\r\n            viewHandler={onViewHandler}\r\n          />\r\n          <CCol md={4} sm={12} className=\"text-right\">\r\n            <CButton\r\n              color=\"light\"\r\n              width=\"30%\"\r\n              type=\"button\"\r\n              loading={false}\r\n              name=\"generate\"\r\n              block={true}\r\n              click={generateRandomPasswordHandler}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label={false}\r\n            type={type}\r\n            readOnly={false}\r\n            md={8}\r\n            sm={12}\r\n            placeHolder=\"Confirm Password\"\r\n            value={password_confirmation}\r\n            change={passwordConfirmationChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <CCol md={12} sm={12} className=\"text-right\">\r\n            <CButton\r\n              color=\"success\"\r\n              width=\"30%\"\r\n              type=\"submit\"\r\n              loading={loading}\r\n              name=\"Reset\"\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}