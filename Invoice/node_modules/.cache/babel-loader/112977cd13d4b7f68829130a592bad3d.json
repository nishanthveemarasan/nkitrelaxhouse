{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { sendGetAdminApi, sendPostApi } from \"src/service/appService\";\nimport { loginStoreAction } from \"./store\";\nvar initialState = {\n  isLoading: false,\n  loggedInData: {\n    userName: \"\",\n    name: \"\",\n    token: null,\n    role_id: 0,\n    isDataReceived: false,\n    image: \"\"\n  },\n  message: {\n    msg: \"\",\n    color: \"\",\n    isLoggedIn: false\n  },\n  admin: false\n};\nvar loginSlice = createSlice({\n  name: \"login\",\n  initialState: initialState,\n  reducers: {\n    logout: function logout(state) {\n      state.loggedInData = {\n        userName: \"\",\n        name: \"\",\n        token: null,\n        role_id: 0,\n        image: \"\"\n      };\n      state.message = {\n        msg: \"\",\n        color: \"\",\n        isLoggedIn: false\n      };\n    },\n    sendLoginRequest: function sendLoginRequest(state) {\n      state.isLoading = true;\n      state.message = _objectSpread(_objectSpread({}, state.message), {}, {\n        msg: \"Authenticating......\",\n        color: \"success\",\n        isLoggedIn: true\n      });\n    },\n    getLoginErrorResponse: function getLoginErrorResponse(state, action) {\n      state.isLoading = false;\n      state.message = _objectSpread(_objectSpread({}, state.message), {}, {\n        msg: action.payload.msg,\n        color: action.payload.color,\n        isLoggedIn: true\n      });\n    },\n    getLoginSuccessResponse: function getLoginSuccessResponse(state, action) {\n      state.isLoading = false;\n      state.message = _objectSpread(_objectSpread({}, state.message), {}, {\n        msg: action.payload.msg,\n        color: action.payload.color,\n        isLoggedIn: true\n      });\n      state.loggedInData = _objectSpread(_objectSpread({}, state.loggedInData), {}, {\n        name: action.payload.name,\n        image: action.payload.image,\n        role_id: action.payload.role_id\n      });\n    },\n    updateToken: function updateToken(state, action) {\n      state.loggedInData = _objectSpread(_objectSpread({}, state.loggedInData), {}, {\n        token: action.payload.token\n      });\n    },\n    checkUserLoggedIn: function checkUserLoggedIn(state, action) {\n      state.loggedInData = _objectSpread(_objectSpread({}, state.loggedInData), {}, {\n        name: action.payload.name,\n        role_id: action.payload.role_id,\n        isDataReceived: true,\n        image: action.payload.image\n      });\n    }\n  }\n});\nexport default loginSlice;\nexport var LoginRequest = function LoginRequest(data, history) {\n  return function (dispatch) {\n    dispatch(loginStoreAction.sendLoginRequest());\n    sendPostApi(\"user/login\", data).then(function (response) {\n      localStorage.setItem(\"token\", response.data.data.token);\n      dispatch(loginStoreAction.getLoginSuccessResponse({\n        msg: \"Authentication Successfull:Rediracting to Admin Panel!!\",\n        color: \"success\",\n        name: response.data.data.name,\n        role_id: response.data.data.roles,\n        image: response.data.data.profile_photo_path\n      }));\n      setTimeout(function () {\n        dispatch(loginStoreAction.updateToken({\n          token: response.data.data.token\n        }));\n        history.replace(\"/admin\");\n      }, 2000);\n    }).catch(function (error) {\n      dispatch(loginStoreAction.getLoginErrorResponse({\n        msg: error.response.data.error,\n        color: \"danger\"\n      }));\n    });\n  };\n};\n_c = LoginRequest;\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.removeItem(\"token\");\n    dispatch(loginStoreAction.logout());\n  };\n};\nexport var checkUser = function checkUser(history) {\n  return function (dispatch) {\n    sendGetAdminApi(\"users/get-a-user\").then(function (response) {\n      dispatch(loginStoreAction.checkUserLoggedIn({\n        name: response.data.data.name,\n        role_id: response.data.data.roles,\n        image: response.data.data.profile_photo_path\n      }));\n    }).catch(function (error) {\n      history.push(\"/\");\n    });\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRequest\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/login-store.js"],"names":["createSlice","sendGetAdminApi","sendPostApi","loginStoreAction","initialState","isLoading","loggedInData","userName","name","token","role_id","isDataReceived","image","message","msg","color","isLoggedIn","admin","loginSlice","reducers","logout","state","sendLoginRequest","getLoginErrorResponse","action","payload","getLoginSuccessResponse","updateToken","checkUserLoggedIn","LoginRequest","data","history","dispatch","then","response","localStorage","setItem","roles","profile_photo_path","setTimeout","replace","catch","error","removeItem","checkUser","push"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { sendGetAdminApi, sendPostApi } from \"src/service/appService\";\r\nimport { loginStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  loggedInData: {\r\n    userName: \"\",\r\n    name: \"\",\r\n    token: null,\r\n    role_id: 0,\r\n    isDataReceived: false,\r\n    image: \"\",\r\n  },\r\n  message: {\r\n    msg: \"\",\r\n    color: \"\",\r\n    isLoggedIn: false,\r\n  },\r\n  admin: false,\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    logout(state) {\r\n      state.loggedInData = {\r\n        userName: \"\",\r\n        name: \"\",\r\n        token: null,\r\n        role_id: 0,\r\n        image: \"\",\r\n      };\r\n      state.message = {\r\n        msg: \"\",\r\n        color: \"\",\r\n        isLoggedIn: false,\r\n      };\r\n    },\r\n    sendLoginRequest(state) {\r\n      state.isLoading = true;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: \"Authenticating......\",\r\n        color: \"success\",\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n\r\n    getLoginErrorResponse(state, action) {\r\n      state.isLoading = false;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n    getLoginSuccessResponse(state, action) {\r\n      state.isLoading = false;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n        isLoggedIn: true,\r\n      };\r\n      state.loggedInData = {\r\n        ...state.loggedInData,\r\n        name: action.payload.name,\r\n        image: action.payload.image,\r\n        role_id: action.payload.role_id,\r\n      };\r\n    },\r\n    updateToken(state, action) {\r\n      state.loggedInData = {\r\n        ...state.loggedInData,\r\n        token: action.payload.token,\r\n      };\r\n    },\r\n    checkUserLoggedIn(state, action) {\r\n      state.loggedInData = {\r\n        ...state.loggedInData,\r\n        name: action.payload.name,\r\n        role_id: action.payload.role_id,\r\n        isDataReceived: true,\r\n        image: action.payload.image,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default loginSlice;\r\n\r\nexport const LoginRequest = (data, history) => {\r\n  return (dispatch) => {\r\n    dispatch(loginStoreAction.sendLoginRequest());\r\n\r\n    sendPostApi(\"user/login\", data)\r\n      .then((response) => {\r\n        localStorage.setItem(\"token\", response.data.data.token);\r\n        dispatch(\r\n          loginStoreAction.getLoginSuccessResponse({\r\n            msg: \"Authentication Successfull:Rediracting to Admin Panel!!\",\r\n            color: \"success\",\r\n            name: response.data.data.name,\r\n            role_id: response.data.data.roles,\r\n            image: response.data.data.profile_photo_path,\r\n          })\r\n        );\r\n        setTimeout(() => {\r\n          dispatch(\r\n            loginStoreAction.updateToken({\r\n              token: response.data.data.token,\r\n            })\r\n          );\r\n          history.replace(\"/admin\");\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          loginStoreAction.getLoginErrorResponse({\r\n            msg: error.response.data.error,\r\n            color: \"danger\",\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch(loginStoreAction.logout());\r\n  };\r\n};\r\n\r\nexport const checkUser = (history) => {\r\n  return (dispatch) => {\r\n    sendGetAdminApi(\"users/get-a-user\")\r\n      .then((response) => {\r\n        dispatch(\r\n          loginStoreAction.checkUserLoggedIn({\r\n            name: response.data.data.name,\r\n            role_id: response.data.data.roles,\r\n            image: response.data.data.profile_photo_path,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}