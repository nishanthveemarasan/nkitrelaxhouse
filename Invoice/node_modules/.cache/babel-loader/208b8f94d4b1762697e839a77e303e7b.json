{"ast":null,"code":"import{useEffect}from\"react\";import CTable from\"src/Components/Table/CTable\";import{useSelector,useDispatch}from\"react-redux\";import Loader from\"src/Components/UI/Loader/Loader\";import{getStoreProductData}from\"src/store/shop-slice\";import SPTableBody from\"./SPTableBody\";import Pagination from\"src/Components/UI/Table/Pagination\";import{shopStoreAction}from\"src/store/store\";import{useHistory}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StoreItems=function StoreItems(){var history=useHistory();var mapStateToProps=function mapStateToProps(state){return{data:state.shopStore.shop.product,isDataReceived:state.shopStore.shop.isDataReceived,param:state.shopStore.shop.param,reRunComponent:state.shopStore.reRunComponent.isDataChanged};};var state=useSelector(mapStateToProps);var dispatch=useDispatch();useEffect(function(){if(state.reRunComponent){dispatch(getStoreProductData(state.param));}},[state.reRunComponent,dispatch,state.param]);var pageChangeHandler=function pageChangeHandler(url){if(url){var param=url.split(\"?\")[1];dispatch(shopStoreAction.updateParam({param:param}));dispatch(getStoreProductData(param));}};var onActionHandler=function onActionHandler(id){var productID=state.data.data[id].id;// dispatch(shopStoreAction.getSingleProductData(data));\nhistory.push(\"/admin/store/edit/\".concat(productID));};return/*#__PURE__*/_jsxs(_Fragment,{children:[!state.isDataReceived&&/*#__PURE__*/_jsx(Loader,{}),state.isDataReceived&&/*#__PURE__*/_jsx(CTable,{header:[\"#\",\"Image\",\"Product\",\"Price\",\"Offer Price\",\"Color\",\"Height\",\"Status\",\"Action\"],children:/*#__PURE__*/_jsx(SPTableBody,{body:state.data.data,action:onActionHandler})}),state.isDataReceived&&/*#__PURE__*/_jsx(Pagination,{body:state.data,change:pageChangeHandler})]});};export default StoreItems;","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Store/Product/StoreItems.js"],"names":["useEffect","CTable","useSelector","useDispatch","Loader","getStoreProductData","SPTableBody","Pagination","shopStoreAction","useHistory","StoreItems","history","mapStateToProps","state","data","shopStore","shop","product","isDataReceived","param","reRunComponent","isDataChanged","dispatch","pageChangeHandler","url","split","updateParam","onActionHandler","id","productID","push"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iCAAnB,CACA,OAASC,mBAAT,KAAoC,sBAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CACA,OAASC,eAAT,KAAgC,iBAAhC,CACA,OAASC,UAAT,KAA2B,cAA3B,C,6IACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,OAAO,CAAGF,UAAU,EAA1B,CACA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,IAAI,CAAED,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBC,OADtB,CAELC,cAAc,CAAEL,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBE,cAFhC,CAGLC,KAAK,CAAEN,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBG,KAHvB,CAILC,cAAc,CAAEP,KAAK,CAACE,SAAN,CAAgBK,cAAhB,CAA+BC,aAJ1C,CAAP,CAMD,CAPD,CAQA,GAAMR,CAAAA,KAAK,CAAGX,WAAW,CAACU,eAAD,CAAzB,CACA,GAAMU,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CACAH,SAAS,CAAC,UAAM,CACd,GAAIa,KAAK,CAACO,cAAV,CAA0B,CACxBE,QAAQ,CAACjB,mBAAmB,CAACQ,KAAK,CAACM,KAAP,CAApB,CAAR,CACD,CACF,CAJQ,CAIN,CAACN,KAAK,CAACO,cAAP,CAAuBE,QAAvB,CAAiCT,KAAK,CAACM,KAAvC,CAJM,CAAT,CAMA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,GAAD,CAAS,CACjC,GAAIA,GAAJ,CAAS,CACP,GAAML,CAAAA,KAAK,CAAGK,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAd,CAEAH,QAAQ,CAACd,eAAe,CAACkB,WAAhB,CAA4B,CAAEP,KAAK,CAALA,KAAF,CAA5B,CAAD,CAAR,CACAG,QAAQ,CAACjB,mBAAmB,CAACc,KAAD,CAApB,CAAR,CACD,CACF,CAPD,CAQA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,EAAD,CAAQ,CAC9B,GAAMC,CAAAA,SAAS,CAAGhB,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBc,EAAhB,EAAoBA,EAAtC,CACA;AACAjB,OAAO,CAACmB,IAAR,6BAAkCD,SAAlC,GACD,CAJD,CAKA,mBACE,2BACG,CAAChB,KAAK,CAACK,cAAP,eAAyB,KAAC,MAAD,IAD5B,CAEGL,KAAK,CAACK,cAAN,eACC,KAAC,MAAD,EACE,MAAM,CAAE,CACN,GADM,CAEN,OAFM,CAGN,SAHM,CAIN,OAJM,CAKN,aALM,CAMN,OANM,CAON,QAPM,CAQN,QARM,CASN,QATM,CADV,uBAaE,KAAC,WAAD,EAAa,IAAI,CAAEL,KAAK,CAACC,IAAN,CAAWA,IAA9B,CAAoC,MAAM,CAAEa,eAA5C,EAbF,EAHJ,CAmBGd,KAAK,CAACK,cAAN,eACC,KAAC,UAAD,EAAY,IAAI,CAAEL,KAAK,CAACC,IAAxB,CAA8B,MAAM,CAAES,iBAAtC,EApBJ,GADF,CAyBD,CAxDD,CAyDA,cAAeb,CAAAA,UAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport CTable from \"src/Components/Table/CTable\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport { getStoreProductData } from \"src/store/shop-slice\";\r\nimport SPTableBody from \"./SPTableBody\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { shopStoreAction } from \"src/store/store\";\r\nimport { useHistory } from \"react-router\";\r\nconst StoreItems = () => {\r\n  const history = useHistory();\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      data: state.shopStore.shop.product,\r\n      isDataReceived: state.shopStore.shop.isDataReceived,\r\n      param: state.shopStore.shop.param,\r\n      reRunComponent: state.shopStore.reRunComponent.isDataChanged,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunComponent) {\r\n      dispatch(getStoreProductData(state.param));\r\n    }\r\n  }, [state.reRunComponent, dispatch, state.param]);\r\n\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const param = url.split(\"?\")[1];\r\n\r\n      dispatch(shopStoreAction.updateParam({ param }));\r\n      dispatch(getStoreProductData(param));\r\n    }\r\n  };\r\n  const onActionHandler = (id) => {\r\n    const productID = state.data.data[id].id;\r\n    // dispatch(shopStoreAction.getSingleProductData(data));\r\n    history.push(`/admin/store/edit/${productID}`);\r\n  };\r\n  return (\r\n    <>\r\n      {!state.isDataReceived && <Loader />}\r\n      {state.isDataReceived && (\r\n        <CTable\r\n          header={[\r\n            \"#\",\r\n            \"Image\",\r\n            \"Product\",\r\n            \"Price\",\r\n            \"Offer Price\",\r\n            \"Color\",\r\n            \"Height\",\r\n            \"Status\",\r\n            \"Action\",\r\n          ]}\r\n        >\r\n          <SPTableBody body={state.data.data} action={onActionHandler} />\r\n        </CTable>\r\n      )}\r\n      {state.isDataReceived && (\r\n        <Pagination body={state.data} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default StoreItems;\r\n"]},"metadata":{},"sourceType":"module"}