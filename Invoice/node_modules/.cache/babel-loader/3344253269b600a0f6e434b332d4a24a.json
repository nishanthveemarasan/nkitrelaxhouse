{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Sales\\\\Modal\\\\SaleActionModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { closeSaleModal, updateSaleData } from \"src/store/sale-slice\";\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\nimport FormTextArea from \"src/Components/UI/Input/FormTextArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar SaleActionModal = function SaleActionModal() {\n  _s();\n\n  var _state$saleModalData$6;\n\n  var _useFormValidate = useFormValidate(),\n      orderNumber = _useFormValidate.inputValue,\n      orderNumberChangeHandler = _useFormValidate.inputChangeHandler,\n      setOrderNumber = _useFormValidate.setInputValue;\n\n  var _useFormValidate2 = useFormValidate(),\n      productName = _useFormValidate2.inputValue,\n      productNameChangeHandler = _useFormValidate2.inputChangeHandler,\n      setProductName = _useFormValidate2.setInputValue;\n\n  var _useFormValidate3 = useFormValidate(),\n      quantity = _useFormValidate3.inputValue,\n      quantityChangeHandler = _useFormValidate3.inputChangeHandler,\n      setQuantity = _useFormValidate3.setInputValue;\n\n  var _useFormValidate4 = useFormValidate(),\n      status = _useFormValidate4.inputValue,\n      onStatusChange = _useFormValidate4.inputChangeHandler,\n      setStatus = _useFormValidate4.setInputValue;\n\n  var _useFormValidate5 = useFormValidate(),\n      note = _useFormValidate5.inputValue,\n      onNoteChange = _useFormValidate5.inputChangeHandler,\n      setNote = _useFormValidate5.setInputValue;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      saleModalData: state.saleStore.saleModalData,\n      updateSaleData: state.saleStore.updateSaleData\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  useEffect(function () {\n    if (state.saleModalData.modalAction === \"Update\") {\n      var _state$saleModalData$, _state$saleModalData$2, _state$saleModalData$3, _state$saleModalData$4, _state$saleModalData$5;\n\n      setOrderNumber((_state$saleModalData$ = state.saleModalData.modalData) === null || _state$saleModalData$ === void 0 ? void 0 : _state$saleModalData$.order_number);\n      setProductName((_state$saleModalData$2 = state.saleModalData.modalData) === null || _state$saleModalData$2 === void 0 ? void 0 : _state$saleModalData$2.itemname);\n      setQuantity((_state$saleModalData$3 = state.saleModalData.modalData) === null || _state$saleModalData$3 === void 0 ? void 0 : _state$saleModalData$3.sellcount);\n      setStatus((_state$saleModalData$4 = state.saleModalData.modalData) === null || _state$saleModalData$4 === void 0 ? void 0 : _state$saleModalData$4.sell_type); //note\n\n      setNote((_state$saleModalData$5 = state.saleModalData.modalData) === null || _state$saleModalData$5 === void 0 ? void 0 : _state$saleModalData$5.note);\n    }\n  }, [state.saleModalData, setOrderNumber, setProductName, setStatus, setNote, setQuantity]);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(closeSaleModal());\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n\n    if (state.saleModalData.modalAction === 'Update') {}\n\n    var data = {\n      sell_type: status,\n      sellcount: quantity,\n      note: note,\n      action: state.saleModalData.modalAction.toLowerCase(),\n      id: state.saleModalData.modalData.id,\n      itemname: productName\n    };\n    dispatch(updateSaleData(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.saleModalData.isModalOpen,\n    heading: state.saleModalData.modalHeading,\n    variant: state.saleModalData.variant,\n    action: state.saleModalData.modalAction,\n    size: \"md\",\n    onClose: modalCloseHandler,\n    onSubmitHandler: onSubmitHandler,\n    loading: state.updateSaleData.isLoading,\n    showButton: state.updateSaleData.isUpdated && state.saleModalData.modalAction === \"Cancel\" ? false : true,\n    children: [state.updateSaleData.isUpdated && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: state.updateSaleData.variant,\n      text: state.updateSaleData.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, _this), state.saleModalData.modalAction === \"Cancel\" && !state.updateSaleData.isUpdated && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: \"danger\",\n      text: \"please confirm that you are going to Cencel the Order(\".concat((_state$saleModalData$6 = state.saleModalData.modalData) === null || _state$saleModalData$6 === void 0 ? void 0 : _state$saleModalData$6.order_number, \" )\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, _this), state.saleModalData.modalAction === \"Update\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormInputLabel, {\n        type: \"text\",\n        readOnly: true,\n        label: \"Order NUmber\",\n        value: orderNumber,\n        change: orderNumberChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInputLabel, {\n        type: \"text\",\n        readOnly: true,\n        label: \"Product\",\n        value: productName,\n        change: productNameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInputLabel, {\n        type: \"number\",\n        readOnly: false,\n        label: \"Quantity\",\n        value: quantity,\n        change: quantityChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormSelect, {\n        label: \"Order Satus\",\n        value: status,\n        change: onStatusChange,\n        options: [\"Received\", \"Processing\", \"Packed\", \"Sent\"],\n        readOnly: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormTextArea, {\n        type: \"textarea\",\n        labelName: \"Note\",\n        readOnly: false,\n        rows: \"3\",\n        change: onNoteChange,\n        value: !note ? \" \" : note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SaleActionModal, \"jfwiqPlNGTQcWWmNqT+DBFyAOR0=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = SaleActionModal;\nexport default SaleActionModal;\n/**\r\n * created_at: \"2021-07-17T06:44:38.000000Z\"\r\nid: 216\r\nitemname: \"B9 Armchair - Wenge\"\r\nnote: null\r\norder_number: \"212129\"\r\npacked_by: null\r\nsell_type: \"received\"\r\nsellcount: \"1\"\r\nupdated_at: \"2021-07-17T\r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"SaleActionModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Sales/Modal/SaleActionModal.js"],"names":["useEffect","CModal","useSelector","useDispatch","closeSaleModal","updateSaleData","CAlert","FormInputLabel","useFormValidate","FormSelect","FormTextArea","SaleActionModal","orderNumber","inputValue","orderNumberChangeHandler","inputChangeHandler","setOrderNumber","setInputValue","productName","productNameChangeHandler","setProductName","quantity","quantityChangeHandler","setQuantity","status","onStatusChange","setStatus","note","onNoteChange","setNote","mapStateToProps","state","saleModalData","saleStore","modalAction","modalData","order_number","itemname","sellcount","sell_type","dispatch","modalCloseHandler","onSubmitHandler","e","preventDefault","data","action","toLowerCase","id","isModalOpen","modalHeading","variant","isLoading","isUpdated","msg"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeSaleModal, updateSaleData } from \"src/store/sale-slice\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\r\nimport FormTextArea from \"src/Components/UI/Input/FormTextArea\";\r\nconst SaleActionModal = () => {\r\n  const {\r\n    inputValue: orderNumber,\r\n    inputChangeHandler: orderNumberChangeHandler,\r\n    setInputValue: setOrderNumber,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    setInputValue: setProductName,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: quantity,\r\n    inputChangeHandler: quantityChangeHandler,\r\n    setInputValue: setQuantity,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: status,\r\n    inputChangeHandler: onStatusChange,\r\n    setInputValue: setStatus,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: note,\r\n    inputChangeHandler: onNoteChange,\r\n    setInputValue: setNote,\r\n  } = useFormValidate();\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      saleModalData: state.saleStore.saleModalData,\r\n      updateSaleData: state.saleStore.updateSaleData,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  useEffect(() => {\r\n    if (state.saleModalData.modalAction === \"Update\") {\r\n      setOrderNumber(state.saleModalData.modalData?.order_number);\r\n      setProductName(state.saleModalData.modalData?.itemname);\r\n      setQuantity(state.saleModalData.modalData?.sellcount);\r\n      setStatus(state.saleModalData.modalData?.sell_type); //note\r\n      setNote(state.saleModalData.modalData?.note);\r\n    }\r\n  }, [\r\n    state.saleModalData,\r\n    setOrderNumber,\r\n    setProductName,\r\n    setStatus,\r\n    setNote,\r\n    setQuantity,\r\n  ]);\r\n  const dispatch = useDispatch();\r\n  const modalCloseHandler = () => {\r\n    dispatch(closeSaleModal());\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(state.saleModalData.modalAction === 'Update'){\r\n      \r\n    }\r\n    const data = {\r\n      sell_type: status,\r\n      sellcount: quantity,\r\n      note: note,\r\n      action: state.saleModalData.modalAction.toLowerCase(),\r\n      id: state.saleModalData.modalData.id,\r\n      itemname: productName,\r\n    };\r\n    dispatch(updateSaleData(data));\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.saleModalData.isModalOpen}\r\n      heading={state.saleModalData.modalHeading}\r\n      variant={state.saleModalData.variant}\r\n      action={state.saleModalData.modalAction}\r\n      size=\"md\"\r\n      onClose={modalCloseHandler}\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={state.updateSaleData.isLoading}\r\n      showButton={\r\n        state.updateSaleData.isUpdated &&\r\n        state.saleModalData.modalAction === \"Cancel\"\r\n          ? false\r\n          : true\r\n      }\r\n    >\r\n      {state.updateSaleData.isUpdated && (\r\n        <CAlert\r\n          color={state.updateSaleData.variant}\r\n          text={state.updateSaleData.msg}\r\n        />\r\n      )}\r\n      {state.saleModalData.modalAction === \"Cancel\" &&\r\n        !state.updateSaleData.isUpdated && (\r\n          <CAlert\r\n            color=\"danger\"\r\n            text={`please confirm that you are going to Cencel the Order(${state.saleModalData.modalData?.order_number} )`}\r\n          />\r\n        )}\r\n      {state.saleModalData.modalAction === \"Update\" && (\r\n        <>\r\n          <FormInputLabel\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Order NUmber\"\r\n            value={orderNumber}\r\n            change={orderNumberChangeHandler}\r\n          />\r\n          <FormInputLabel\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Product\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInputLabel\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Quantity\"\r\n            value={quantity}\r\n            change={quantityChangeHandler}\r\n          />\r\n          <FormSelect\r\n            label=\"Order Satus\"\r\n            value={status}\r\n            change={onStatusChange}\r\n            options={[\"Received\", \"Processing\", \"Packed\", \"Sent\"]}\r\n            readOnly={false}\r\n          />\r\n          <FormTextArea\r\n            type=\"textarea\"\r\n            labelName=\"Note\"\r\n            readOnly={false}\r\n            rows=\"3\"\r\n            change={onNoteChange}\r\n            value={!note ? \" \" : note}\r\n          ></FormTextArea>\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default SaleActionModal;\r\n/**\r\n * created_at: \"2021-07-17T06:44:38.000000Z\"\r\nid: 216\r\nitemname: \"B9 Armchair - Wenge\"\r\nnote: null\r\norder_number: \"212129\"\r\npacked_by: null\r\nsell_type: \"received\"\r\nsellcount: \"1\"\r\nupdated_at: \"2021-07-17T\r\n */\r\n"]},"metadata":{},"sourceType":"module"}