{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\ProductModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { productStoreAction } from \"src/store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProductModal = function ProductModal() {\n  _s();\n\n  var _state$modalData$data;\n\n  var _useFormValidate = useFormValidate(),\n      productName = _useFormValidate.inputValue,\n      setProductName = _useFormValidate.setInputValue,\n      productNameChangeHandler = _useFormValidate.inputChangeHandler;\n\n  var _useFormValidate2 = useFormValidate(),\n      productCode = _useFormValidate2.inputValue,\n      setProductCode = _useFormValidate2.setInputValue,\n      productCodeChangeHandler = _useFormValidate2.inputChangeHandler;\n\n  var _useFormValidate3 = useFormValidate(),\n      stock = _useFormValidate3.inputValue,\n      setstock = _useFormValidate3.setInputValue,\n      stockChangeHandler = _useFormValidate3.inputChangeHandler;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      modalData: state.productStore.modalData,\n      id: state.productStore.modalData.productId,\n      isLoading: state.productStore.isLoading,\n      initialLoad: state.productStore.initialLoad\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(productStoreAction.modalClose());\n  };\n\n  useEffect(function () {\n    if (state.modalData.isModalOpen && state.initialLoad.action === \"Update\") {\n      setProductCode(state.modalData.data.itemcode);\n      setProductName(state.modalData.data.itemname);\n      setstock(state.modalData.data.count);\n    }\n  }, [state.modalData, state.initialLoad.action, setProductCode, setProductName, setstock]);\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.prevet;\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.modalData.isModalOpen,\n    onClose: modalCloseHandler,\n    heading: state.modalData.modalHeading,\n    variant: state.modalData.variant,\n    action: state.modalData.modalAction,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    children: [state.initialLoad.action === \"Delete\" && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: \"danger\",\n      text: \"please confirm that you are going to delete \".concat((_state$modalData$data = state.modalData.data) === null || _state$modalData$data === void 0 ? void 0 : _state$modalData$data.itemname.toUpperCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, _this), state.initialLoad.action === \"Update\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        label: \"Product Name\",\n        value: productName,\n        change: productNameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        label: \"Product Code\",\n        value: productCode,\n        change: productCodeChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"number\",\n        readOnly: false,\n        label: \"Current Stock\",\n        value: stock,\n        change: stockChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProductModal, \"74k0FpT8eEfPo8WUXQB/thBCGQk=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = ProductModal;\nexport default ProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/ProductModal.js"],"names":["React","useEffect","useSelector","useDispatch","CAlert","FormInput","CModal","useFormValidate","productStoreAction","ProductModal","productName","inputValue","setProductName","setInputValue","productNameChangeHandler","inputChangeHandler","productCode","setProductCode","productCodeChangeHandler","stock","setstock","stockChangeHandler","mapStateToProps","state","modalData","productStore","id","productId","isLoading","initialLoad","dispatch","modalCloseHandler","modalClose","isModalOpen","action","data","itemcode","itemname","count","onSubmitHandler","e","prevet","modalHeading","variant","modalAction","toUpperCase"],"mappings":"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","sourcesContent":["import React, {  useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\n\r\nconst ProductModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    setInputValue: setProductName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    setInputValue: setProductCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stock,\r\n    setInputValue: setstock,\r\n    inputChangeHandler: stockChangeHandler,\r\n  } = useFormValidate();\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.productStore.modalData,\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n      initialLoad: state.productStore.initialLoad,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.modalClose());\r\n  };\r\n  useEffect(() => {\r\n    if (state.modalData.isModalOpen && state.initialLoad.action === \"Update\") {\r\n      setProductCode(state.modalData.data.itemcode);\r\n      setProductName(state.modalData.data.itemname);\r\n      setstock(state.modalData.data.count);\r\n    }\r\n  }, [\r\n    state.modalData,\r\n    state.initialLoad.action,\r\n    setProductCode,\r\n    setProductName,\r\n    setstock,\r\n  ]);\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.prevet\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalAction}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n    >\r\n      {state.initialLoad.action === \"Delete\" && (\r\n        <CAlert\r\n          color=\"danger\"\r\n          text={`please confirm that you are going to delete ${state.modalData.data?.itemname.toUpperCase()}`}\r\n        />\r\n      )}\r\n      {state.initialLoad.action === \"Update\" && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Product Name\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Product Code\"\r\n            value={productCode}\r\n            change={productCodeChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Current Stock\"\r\n            value={stock}\r\n            change={stockChangeHandler}\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}