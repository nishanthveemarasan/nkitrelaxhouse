{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getProductApi } from \"src/service/appService\";\nimport { itemStoreAction } from \"./store\";\nvar initialState = {\n  products: [],\n  isPageLoading: false,\n  isButtonLoading: false,\n  isDataChanged: true,\n  itemCode: [],\n  row: 10\n};\nvar itemSlice = createSlice({\n  name: \"items\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.isDataChanged = false;\n    },\n    getResponse: function getResponse(state, action) {\n      state.products = action.payload.items;\n      state.isPageLoading = true;\n      state.isDataChanged = true; //   console.log(state.products, state.isPageLoading);\n    }\n  }\n});\nexport default itemSlice;\nexport var getItemData = function getItemData(param, row) {\n  return function (dispatch) {\n    dispatch(itemStoreAction.sendRequest());\n    getProductApi(param, row).then(function (response) {\n      dispatch(itemStoreAction.getResponse({\n        items: response.data.data\n      }));\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/item-slice.js"],"names":["createSlice","getProductApi","itemStoreAction","initialState","products","isPageLoading","isButtonLoading","isDataChanged","itemCode","row","itemSlice","name","reducers","sendRequest","state","getResponse","action","payload","items","getItemData","param","dispatch","then","response","data","catch","error","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,aAAa,EAAE,IAJI;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,GAAG,EAAE;AANc,CAArB;AASA,IAAMC,SAAS,GAAGV,WAAW,CAAC;AAC5BW,EAAAA,IAAI,EAAE,OADsB;AAE5BR,EAAAA,YAAY,EAAZA,YAF4B;AAG5BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACW;AACjBA,MAAAA,KAAK,CAACP,aAAN,GAAsB,KAAtB;AACD,KAHO;AAIRQ,IAAAA,WAJQ,uBAIID,KAJJ,EAIWE,MAJX,EAImB;AACzBF,MAAAA,KAAK,CAACV,QAAN,GAAiBY,MAAM,CAACC,OAAP,CAAeC,KAAhC;AACAJ,MAAAA,KAAK,CAACT,aAAN,GAAsB,IAAtB;AACAS,MAAAA,KAAK,CAACP,aAAN,GAAsB,IAAtB,CAHyB,CAIzB;AACD;AATO;AAHkB,CAAD,CAA7B;AAeA,eAAeG,SAAf;AAEA,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQX,GAAR,EAAgB;AACzC,SAAO,UAACY,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACnB,eAAe,CAACW,WAAhB,EAAD,CAAR;AACAZ,IAAAA,aAAa,CAACmB,KAAD,EAAQX,GAAR,CAAb,CACGa,IADH,CACQ,UAACC,QAAD,EAAc;AAClBF,MAAAA,QAAQ,CACNnB,eAAe,CAACa,WAAhB,CAA4B;AAC1BG,QAAAA,KAAK,EAAEK,QAAQ,CAACC,IAAT,CAAcA;AADK,OAA5B,CADM,CAAR;AAKD,KAPH,EAQGC,KARH,CAQS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,QAAlB;AACD,KAVH;AAWD,GAbD;AAcD,CAfM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getProductApi } from \"src/service/appService\";\r\nimport { itemStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n  isPageLoading: false,\r\n  isButtonLoading: false,\r\n  isDataChanged: true,\r\n  itemCode: [],\r\n  row: 10,\r\n};\r\n\r\nconst itemSlice = createSlice({\r\n  name: \"items\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.isDataChanged = false;\r\n    },\r\n    getResponse(state, action) {\r\n      state.products = action.payload.items;\r\n      state.isPageLoading = true;\r\n      state.isDataChanged = true;\r\n      //   console.log(state.products, state.isPageLoading);\r\n    },\r\n  },\r\n});\r\nexport default itemSlice;\r\n\r\nexport const getItemData = (param, row) => {\r\n  return (dispatch) => {\r\n    dispatch(itemStoreAction.sendRequest());\r\n    getProductApi(param, row)\r\n      .then((response) => {\r\n        dispatch(\r\n          itemStoreAction.getResponse({\r\n            items: response.data.data,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}