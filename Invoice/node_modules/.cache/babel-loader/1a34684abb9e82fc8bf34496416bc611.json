{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Dashboard\\\\Dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CRow, CCol } from \"@coreui/react\";\nimport DWidget from \"src/Components/UI/DWidget\";\nimport { getWidgetData } from \"src/store/dashboard-slice\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport _widget from \"src/Components/UI/Array/_widget\";\nimport Card from \"src/Components/UI/Card/Card\";\nimport CTable from \"src/Components/UI/Table/CTable\";\nimport RTableBody from \"./RTableBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      widget: state.dashboardStore.widget,\n      isDataChanged: state.dashboardStore.isDataChanged,\n      topOrders: state.dashboardStore.topOrders,\n      recentOrders: state.dashboardStore.recentOrders\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getWidgetData());\n  }, [dispatch]);\n  var widget = state.isDataChanged && state.widget.map(function (item, i) {\n    return /*#__PURE__*/_jsxDEV(CCol, {\n      sm: \"12\",\n      md: \"3\",\n      children: /*#__PURE__*/_jsxDEV(DWidget, {\n        value: item[_widget[i].type],\n        text: _widget[i].text,\n        color: _widget[i].color,\n        icon: _widget[i].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!state.isDataChanged && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n      children: widget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this), state.isDataChanged && /*#__PURE__*/_jsxDEV(CRow, {\n      children: [/*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"12\",\n        md: \"12\",\n        lg: \"6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          header: \"Top 10 Selling Items\",\n          children: /*#__PURE__*/_jsxDEV(CTable, {\n            header: [\"#\", \"Product Name\", \"Total Sell Count\"],\n            children: /*#__PURE__*/_jsxDEV(RTableBody, {\n              body: state.topOrders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n        sm: \"12\",\n        md: \"12\",\n        lg: \"6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          header: \"Most Recent Orders\",\n          children: /*#__PURE__*/_jsxDEV(CTable, {\n            header: [\"#\", \"Order ID\", \"Product\", \"Quantity\", \"Status\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Dashboard/Dashboard.js"],"names":["useEffect","useSelector","useDispatch","CRow","CCol","DWidget","getWidgetData","Loader","_widget","Card","CTable","RTableBody","Dashboard","mapStateToProps","state","widget","dashboardStore","isDataChanged","topOrders","recentOrders","dispatch","map","item","i","type","text","color","icon"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CRow, CCol } from \"@coreui/react\";\r\nimport DWidget from \"src/Components/UI/DWidget\";\r\nimport { getWidgetData } from \"src/store/dashboard-slice\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport _widget from \"src/Components/UI/Array/_widget\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport CTable from \"src/Components/UI/Table/CTable\";\r\nimport RTableBody from \"./RTableBody\";\r\nconst Dashboard = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      widget: state.dashboardStore.widget,\r\n      isDataChanged: state.dashboardStore.isDataChanged,\r\n      topOrders: state.dashboardStore.topOrders,\r\n      recentOrders: state.dashboardStore.recentOrders,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getWidgetData());\r\n  }, [dispatch]);\r\n\r\n  const widget =\r\n    state.isDataChanged &&\r\n    state.widget.map((item, i) => {\r\n      return (\r\n        <CCol sm=\"12\" md=\"3\" key={i}>\r\n          <DWidget\r\n            value={item[_widget[i].type]}\r\n            text={_widget[i].text}\r\n            color={_widget[i].color}\r\n            icon={_widget[i].icon}\r\n          />\r\n        </CCol>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {!state.isDataChanged && <Loader />}\r\n\r\n      <CRow>{widget}</CRow>\r\n      {state.isDataChanged && (\r\n        <CRow>\r\n          <CCol sm=\"12\" md=\"12\" lg=\"6\">\r\n            <Card header=\"Top 10 Selling Items\">\r\n              <CTable header={[\"#\", \"Product Name\", \"Total Sell Count\"]}>\r\n                <RTableBody body={state.topOrders} />\r\n              </CTable>\r\n            </Card>\r\n          </CCol>\r\n          <CCol sm=\"12\" md=\"12\" lg=\"6\">\r\n            <Card header=\"Most Recent Orders\">\r\n              <CTable\r\n                header={[\"#\", \"Order ID\", \"Product\", \"Quantity\", \"Status\"]}\r\n              >\r\n                \r\n              </CTable>\r\n            </Card>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}