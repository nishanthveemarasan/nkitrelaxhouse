{"ast":null,"code":"import{useEffect}from\"react\";import CModal from\"src/Components/UI/Modal/CModal\";import{useSelector,useDispatch}from\"react-redux\";import{closeSaleModal,initiateCreateOrder,refreshOrderIdData}from\"src/store/sale-slice\";import{FormInput}from\"src/Components/UI/Input/FormInput\";import useFormValidate from\"src/Hooks/input-validation\";import Card from\"src/Components/UI/Card/Card\";import{Col,Row}from\"react-bootstrap\";import CButton from\"src/Components/UI/Button/Button\";import{saleStoreAction}from\"src/store/store\";import AddOrderItem from\"../OrderItem/AddOrderItem\";import FormInputLabel from\"src/Components/UI/Input/FormInputLabel\";import DataList from\"src/Components/UI/DataList/DataList\";import CAlert from\"src/Components/UI/Alert/CAlert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateSaleModal=function CreateSaleModal(){var _useFormValidate=useFormValidate(\"\"),orderId=_useFormValidate.inputValue,setOrderId=_useFormValidate.setInputValue,idChangeHandler=_useFormValidate.inputChangeHandler;var _useFormValidate2=useFormValidate(\"\"),productName=_useFormValidate2.inputValue,setProductname=_useFormValidate2.setInputValue,nameChangeHandler=_useFormValidate2.inputChangeHandler;var _useFormValidate3=useFormValidate(1),quantity=_useFormValidate3.inputValue,setQuantity=_useFormValidate3.setInputValue,quantityChangeHandler=_useFormValidate3.inputChangeHandler;var mapStateToProps=function mapStateToProps(state){return{data:state.saleStore.addSaleModalData,addOrder:state.saleStore.addOrder,refreshORderId:state.saleStore.refreshORderId};};var state=useSelector(mapStateToProps);var dispatch=useDispatch();var modalCloseHandler=function modalCloseHandler(){dispatch(closeSaleModal());};useEffect(function(){setOrderId(state.data.latestOrderId);},[setOrderId,state.data.latestOrderId]);var addMoreToCardHandler=function addMoreToCardHandler(){if(productName.length>0&&+quantity>0){var data={name:productName,quantity:quantity};dispatch(saleStoreAction.addOrderItemCart({data:data}));setProductname(\"\");setQuantity(1);}};var onSubmitHandler=function onSubmitHandler(e){e.preventDefault();var data={orderId:orderId,list:state.addOrder.orderItem};if(data.list.length>0)dispatch(initiateCreateOrder(data));};var onReloadNewOrderIdHandler=function onReloadNewOrderIdHandler(){dispatch(refreshOrderIdData());};return/*#__PURE__*/_jsxs(CModal,{onShow:state.data.isModalOpen,heading:state.data.modalHeading,variant:\"primary\",action:state.data.modalActionButton,onClose:modalCloseHandler,onSubmitHandler:onSubmitHandler,loading:state.addOrder.isLoading,size:\"lg\",children:[state.addOrder.orderCreated&&/*#__PURE__*/_jsx(CAlert,{color:state.addOrder.color,text:state.addOrder.msg}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(FormInputLabel,{type:\"text\",label:\"Order Number\",readOnly:true,value:orderId,change:idChangeHandler,size:\"6\"})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(CButton,{color:\"info\",name:\"Get New Order\",loading:state.refreshORderId,click:onReloadNewOrderIdHandler})})]}),/*#__PURE__*/_jsxs(Card,{header:\"Add Items To Order\",color:\"info\",children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(FormInput,{type:\"text\",label:\"Product Name\",readOnly:false,value:productName,change:nameChangeHandler,size:4,list:\"data\"}),/*#__PURE__*/_jsx(DataList,{body:state.data.productNames,listName:\"data\"}),/*#__PURE__*/_jsx(FormInput,{type:\"number\",label:\"Quantity\",readOnly:false,size:2,value:quantity,change:quantityChangeHandler}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(CButton,{color:\"danger\",name:\"ADD MORE\",click:addMoreToCardHandler,type:\"button\"})})]}),/*#__PURE__*/_jsx(AddOrderItem,{})]})]});};export default CreateSaleModal;","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Sales/Modal/CreateSaleModal.js"],"names":["useEffect","CModal","useSelector","useDispatch","closeSaleModal","initiateCreateOrder","refreshOrderIdData","FormInput","useFormValidate","Card","Col","Row","CButton","saleStoreAction","AddOrderItem","FormInputLabel","DataList","CAlert","CreateSaleModal","orderId","inputValue","setOrderId","setInputValue","idChangeHandler","inputChangeHandler","productName","setProductname","nameChangeHandler","quantity","setQuantity","quantityChangeHandler","mapStateToProps","state","data","saleStore","addSaleModalData","addOrder","refreshORderId","dispatch","modalCloseHandler","latestOrderId","addMoreToCardHandler","length","name","addOrderItemCart","onSubmitHandler","e","preventDefault","list","orderItem","onReloadNewOrderIdHandler","isModalOpen","modalHeading","modalActionButton","isLoading","orderCreated","color","msg","productNames"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  closeSaleModal,\r\n  initiateCreateOrder,\r\n  refreshOrderIdData,\r\n} from \"src/store/sale-slice\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport { saleStoreAction } from \"src/store/store\";\r\nimport AddOrderItem from \"../OrderItem/AddOrderItem\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport DataList from \"src/Components/UI/DataList/DataList\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nconst CreateSaleModal = () => {\r\n  const {\r\n    inputValue: orderId,\r\n    setInputValue: setOrderId,\r\n    inputChangeHandler: idChangeHandler,\r\n  } = useFormValidate(\"\");\r\n  const {\r\n    inputValue: productName,\r\n    setInputValue: setProductname,\r\n    inputChangeHandler: nameChangeHandler,\r\n  } = useFormValidate(\"\");\r\n  const {\r\n    inputValue: quantity,\r\n    setInputValue: setQuantity,\r\n    inputChangeHandler: quantityChangeHandler,\r\n  } = useFormValidate(1);\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      data: state.saleStore.addSaleModalData,\r\n      addOrder: state.saleStore.addOrder,\r\n      refreshORderId: state.saleStore.refreshORderId,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const modalCloseHandler = () => {\r\n    dispatch(closeSaleModal());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOrderId(state.data.latestOrderId);\r\n  }, [setOrderId, state.data.latestOrderId]);\r\n\r\n  const addMoreToCardHandler = () => {\r\n    if (productName.length > 0 && +quantity > 0) {\r\n      const data = {\r\n        name: productName,\r\n        quantity: quantity,\r\n      };\r\n      dispatch(saleStoreAction.addOrderItemCart({ data }));\r\n      setProductname(\"\");\r\n      setQuantity(1);\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      orderId: orderId,\r\n      list: state.addOrder.orderItem,\r\n    };\r\n    if (data.list.length > 0) dispatch(initiateCreateOrder(data));\r\n  };\r\n\r\n  const onReloadNewOrderIdHandler = () => {\r\n    dispatch(refreshOrderIdData());\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.data.isModalOpen}\r\n      heading={state.data.modalHeading}\r\n      variant=\"primary\"\r\n      action={state.data.modalActionButton}\r\n      onClose={modalCloseHandler}\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={state.addOrder.isLoading}\r\n      size=\"lg\"\r\n    >\r\n      {state.addOrder.orderCreated && (\r\n        <CAlert color={state.addOrder.color} text={state.addOrder.msg} />\r\n      )}\r\n      <Row>\r\n        <Col>\r\n          <FormInputLabel\r\n            type=\"text\"\r\n            label=\"Order Number\"\r\n            readOnly={true}\r\n            value={orderId}\r\n            change={idChangeHandler}\r\n            size=\"6\"\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CButton\r\n            color=\"info\"\r\n            name=\"Get New Order\"\r\n            loading={state.refreshORderId}\r\n            click={onReloadNewOrderIdHandler}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Card header=\"Add Items To Order\" color=\"info\">\r\n        <Row>\r\n          <FormInput\r\n            type=\"text\"\r\n            label=\"Product Name\"\r\n            readOnly={false}\r\n            value={productName}\r\n            change={nameChangeHandler}\r\n            size={4}\r\n            list=\"data\"\r\n          />\r\n          <DataList body={state.data.productNames} listName=\"data\" />\r\n\r\n          <FormInput\r\n            type=\"number\"\r\n            label=\"Quantity\"\r\n            readOnly={false}\r\n            size={2}\r\n            value={quantity}\r\n            change={quantityChangeHandler}\r\n          />\r\n          <Col md={3}>\r\n            <CButton\r\n              color=\"danger\"\r\n              name=\"ADD MORE\"\r\n              click={addMoreToCardHandler}\r\n              type=\"button\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <AddOrderItem />\r\n      </Card>\r\n    </CModal>\r\n  );\r\n};\r\nexport default CreateSaleModal;\r\n"]},"metadata":{},"sourceType":"module"}