{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  isPostDataLoaded: false,\n  postData: [],\n  reRunPostComponent: true\n};\nvar postSlice = createSlice({\n  name: \"posts\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isPostDataLoaded = true;\n      state.postData = action.payload.post;\n    }\n  }\n});\nexport default postSlice;\nexport var getPostData = function getPostData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"posts/get-posts\";\n\n    if (param) {\n      ur;\n    }\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/post.slice.js"],"names":["createSlice","initialState","isPostDataLoaded","postData","reRunPostComponent","postSlice","name","reducers","getData","state","action","payload","post","getPostData","param","dispatch","url","ur"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,KADC;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,kBAAkB,EAAE;AAHD,CAArB;AAMA,IAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,OADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACP,gBAAN,GAAyB,IAAzB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAeC,IAAhC;AACD;AAJO;AAHkB,CAAD,CAA7B;AAWA,eAAeP,SAAf;AAEA,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAe;AAAA,MAAdC,KAAc,uEAAN,EAAM;AACtC,SAAO,UAAAC,QAAQ,EAAG;AACd,QAAIC,GAAG,GAAG,iBAAV;;AACA,QAAGF,KAAH,EAAS;AACLG,MAAAA,EAAE;AACL;AACJ,GALD;AAMH,CAPM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isPostDataLoaded: false,\r\n  postData: [],\r\n  reRunPostComponent: true,\r\n};\r\n\r\nconst postSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isPostDataLoaded = true;\r\n      state.postData = action.payload.post;\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice;\r\n\r\nexport const getPostData = (param = \"\") =>{\r\n    return dispatch =>{\r\n        let url = \"posts/get-posts\";\r\n        if(param){\r\n            ur\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}