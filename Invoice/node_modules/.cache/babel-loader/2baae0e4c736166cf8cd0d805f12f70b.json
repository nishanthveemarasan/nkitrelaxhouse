{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Store\\\\Product\\\\SPTableBody.js\",\n    _this = this;\n\nimport { CBadge } from \"@coreui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar SPTableBody = function SPTableBody(props) {\n  var data = props.body;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.body.map(function (row, i) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: row.image_url,\n            style: {\n              width: \"20%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"$\".concat(row.price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getStatus(row.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: convertArray(row.color)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, _this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_c = SPTableBody;\nexport default SPTableBody;\n\nvar getStatus = function getStatus(value) {\n  switch (value) {\n    case \"active\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"success\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, _this);\n\n    case \"draft\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"danger\",\n        children: \"Draft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, _this);\n\n    default:\n      return false;\n  }\n};\n\nvar convertArray = function convertArray(str) {\n  var arr = str.split(\",\");\n  console.log(arr);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SPTableBody\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Store/Product/SPTableBody.js"],"names":["CBadge","SPTableBody","props","data","body","console","log","map","row","i","id","image_url","width","name","price","color","height","getStatus","status","convertArray","value","str","arr","split"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,sBACE;AAAA,cACGD,KAAK,CAACE,IAAN,CAAWG,GAAX,CAAe,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC1B,0BACE;AAAA,gCACE;AAAA,oBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEF,GAAG,CAACG,SAAd;AAAyB,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAFF,eAKE;AAAA,oBAAKJ,GAAG,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,iBALF,eAME;AAAA,+BAASL,GAAG,CAACM,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAOE;AAAA,oBAAKN,GAAG,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,iBAPF,eAQE;AAAA,oBAAKP,GAAG,CAACQ;AAAT;AAAA;AAAA;AAAA;AAAA,iBARF,eASE;AAAA,oBAAKC,SAAS,CAACT,GAAG,CAACU,MAAL;AAAd;AAAA;AAAA;AAAA;AAAA,iBATF,eAUE;AAAA,oBAAKC,YAAY,CAACX,GAAG,CAACO,KAAL;AAAjB;AAAA;AAAA;AAAA;AAAA,iBAVF;AAAA,SAASN,CAAT;AAAA;AAAA;AAAA;AAAA,eADF;AAcD,KAfA;AADH,mBADF;AAoBD,CAvBD;;KAAMR,W;AAwBN,eAAeA,WAAf;;AACA,IAAMgB,SAAS,GAAG,SAAZA,SAAY,CAACG,KAAD,EAAW;AAC3B,UAAQA,KAAR;AACE,SAAK,QAAL;AACE,0BAAO,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACF,SAAK,OAAL;AACE,0BAAO,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACF;AACE,aAAO,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMD,YAAY,GAAG,SAAfA,YAAe,CAACE,GAAD,EAAS;AAC5B,MAAMC,GAAG,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAZ;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD,CAHD","sourcesContent":["import { CBadge } from \"@coreui/react\";\r\n\r\nconst SPTableBody = (props) => {\r\n  const data = props.body;\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>\r\n              <img src={row.image_url} style={{ width: \"20%\" }} />\r\n            </td>\r\n            <td>{row.name}</td>\r\n            <td>{`$${row.price}`}</td>\r\n            <td>{row.color}</td>\r\n            <td>{row.height}</td>\r\n            <td>{getStatus(row.status)}</td>\r\n            <td>{convertArray(row.color)}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default SPTableBody;\r\nconst getStatus = (value) => {\r\n  switch (value) {\r\n    case \"active\":\r\n      return <CBadge color=\"success\">Active</CBadge>;\r\n    case \"draft\":\r\n      return <CBadge color=\"danger\">Draft</CBadge>;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nconst convertArray = (str) => {\r\n  const arr = str.split(\",\");\r\n  console.log(arr);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}