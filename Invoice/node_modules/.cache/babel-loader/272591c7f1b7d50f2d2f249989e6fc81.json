{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { saleStoreAction } from \"./store\";\nvar initialState = {\n  isDataLoaded: false,\n  saleData: [],\n  reRunComponent: true\n};\nvar saleSlice = createSlice({\n  name: \"sale\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataLoaded = true;\n      state.saleData = action.type.data;\n    }\n  }\n});\nexport default saleSlice;\nexport var getSaleData = function getSaleData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"order/get-order-data\";\n    API.get(\"order/get-order-data\").then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(saleStoreAction.getData({\n          data: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/sale-slice.js"],"names":["createSlice","API","saleStoreAction","initialState","isDataLoaded","saleData","reRunComponent","saleSlice","name","reducers","getData","state","action","type","data","getSaleData","param","dispatch","url","get","then","response","http_status","catch","error","console","log","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,KADK;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAArB;AAMA,IAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACP,YAAN,GAAqB,IAArB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,IAAP,CAAYC,IAA7B;AACD;AAJO;AAHkB,CAAD,CAA7B;AAUA,eAAeP,SAAf;AAEA,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AACzC,SAAO,UAACC,QAAD,EAAc;AACjB,QAAIC,GAAG,GAAG,sBAAV;AAEFjB,IAAAA,GAAG,CAACkB,GAAJ,CAAQ,sBAAR,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACP,IAAT,CAAcQ,WAAd,KAA8B,GAAlC,EAAuC;AACrCL,QAAAA,QAAQ,CAACf,eAAe,CAACQ,OAAhB,CAAwB;AAAEI,UAAAA,IAAI,EAAEO,QAAQ,CAACP,IAAT,CAAcA;AAAtB,SAAxB,CAAD,CAAR;AACD;AACF,KALH,EAMGS,KANH,CAMS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KARH;AASD,GAZD;AAaD,CAdM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { saleStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataLoaded: false,\r\n  saleData: [],\r\n  reRunComponent: true,\r\n};\r\n\r\nconst saleSlice = createSlice({\r\n  name: \"sale\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataLoaded = true;\r\n      state.saleData = action.type.data;\r\n    },\r\n  },\r\n});\r\nexport default saleSlice;\r\n\r\nexport const getSaleData = (param = \"\") => {\r\n  return (dispatch) => {\r\n      let url = \"order/get-order-data\";\r\n      \r\n    API.get(\"order/get-order-data\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(saleStoreAction.getData({ data: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}