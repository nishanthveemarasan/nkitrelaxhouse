{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { sendGetAdminApi, sendPostAdminApi } from \"src/service/appService\";\nimport { getUrl } from \"src/service/customService\";\nimport { productStoreAction } from \"./store\";\nvar initialState = {\n  isDataChanged: false,\n  productData: [],\n  reRunData: {\n    isDataChanged: true,\n    queryParam: \"\"\n  },\n  modalActionData: \"\",\n  isLoading: false,\n  modalData: {\n    isModalOpen: false,\n    productId: 0,\n    modalAction: \"\",\n    modalHeading: \"\",\n    variant: \"\"\n  },\n  openModal: false,\n  initialLoad: {\n    loading: false,\n    action: \"\",\n    id: 0\n  },\n  updateData: {\n    isLoading: false,\n    dataUpdated: false,\n    msg: \"\",\n    color: \"\"\n  }\n};\nvar productSlice = createSlice({\n  name: \"products\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataChanged = true;\n      state.productData = action.payload.data;\n    },\n    updateParam: function updateParam(state, action) {\n      state.reRunData = _objectSpread(_objectSpread({}, state.reRunData), {}, {\n        queryParam: action.payload.param\n      });\n    },\n    dataChanged: function dataChanged(state) {\n      state.reRunData = _objectSpread(_objectSpread({}, state.reRunData), {}, {\n        isDataChanged: true\n      });\n    },\n    dataNotChanged: function dataNotChanged(state) {\n      state.reRunData = _objectSpread(_objectSpread({}, state.reRunData), {}, {\n        isDataChanged: false\n      });\n    },\n    modalOpen: function modalOpen(state, action) {\n      state.modalData = {\n        isModalOpen: true,\n        productId: action.payload.id,\n        modalAction: action.payload.action,\n        modalHeading: action.payload.heading,\n        variant: action.payload.variant,\n        data: action.payload.tableData\n      };\n    },\n    modalClose: function modalClose(state) {\n      state.modalData = {\n        isModalOpen: false,\n        productId: 0,\n        modalAction: \"\",\n        modalHeading: \"\"\n      };\n      state.initialLoad = {\n        loading: false,\n        action: \"\",\n        id: 0\n      };\n      state.updateData = {\n        isLoading: false,\n        dataUpdated: false,\n        msg: \"\",\n        color: \"\"\n      };\n    },\n    isDataLoading: function isDataLoading(state) {\n      state.isLoading = true;\n    },\n    dataIsLoaded: function dataIsLoaded(state) {\n      state.isLoading = false;\n    },\n    addProductModal: function addProductModal(state, action) {\n      state.openModal = action.payload.data;\n    },\n    getModal: function getModal(state, action) {\n      state.initialLoad = {\n        loading: action.payload.value,\n        action: action.payload.type,\n        id: action.payload.id\n      };\n    },\n    initiateUpdateData: function initiateUpdateData(state) {\n      state.reRunData = _objectSpread(_objectSpread({}, state.reRunData), {}, {\n        isDataChanged: false\n      });\n      state.updateData = _objectSpread(_objectSpread({}, state.updateData), {}, {\n        isLoading: true,\n        dataUpdated: false\n      });\n    },\n    DataIsUpdated: function DataIsUpdated(state, action) {\n      state.reRunData = _objectSpread(_objectSpread({}, state.reRunData), {}, {\n        isDataChanged: true\n      });\n      state.updateData = _objectSpread(_objectSpread({}, state.updateData), {}, {\n        isLoading: false,\n        dataUpdated: true,\n        msg: action.payload.msg,\n        color: action.payload.color\n      });\n    }\n  }\n});\nexport default productSlice;\nexport var getProductData = function getProductData(data) {\n  return function (dispatch) {\n    var url = getUrl(\"get-all-chairs\", data.param);\n    sendGetAdminApi(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(productStoreAction.getData({\n          data: response.data.data\n        }));\n      }\n    }).catch();\n  };\n};\nexport var getModalData = function getModalData(data) {\n  return function (dispatch) {\n    dispatch(productStoreAction.getModal({\n      id: data.id,\n      value: true,\n      type: data.action\n    }));\n    sendGetAdminApi(\"get-product-details/\".concat(data.id)).then(function (response) {\n      if (response.data.http_status === 200) {\n        var output = {\n          id: data.id,\n          action: data.action,\n          heading: data.action === \"Update\" ? \"Update the Product\" : \"Delete the Product\",\n          variant: data.action === \"Update\" ? \"primary\" : \"danger\",\n          tableData: response.data.data[0]\n        };\n        dispatch(productStoreAction.getModal({\n          id: data.id,\n          value: false,\n          type: data.action\n        }));\n        dispatch(productStoreAction.modalOpen(output));\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var updateProductData = function updateProductData(data) {\n  return function (dispatch) {\n    dispatch(productStoreAction.initiateUpdateData());\n    sendPostAdminApi(\"edit-product-details\", data).then(function (response) {\n      console.log(response.data.data.msg);\n      dispatch(productStoreAction.DataIsUpdated({\n        msg: response.data.data.msg,\n        color: \"success\"\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/product-slice.js"],"names":["createSlice","API","sendGetAdminApi","sendPostAdminApi","getUrl","productStoreAction","initialState","isDataChanged","productData","reRunData","queryParam","modalActionData","isLoading","modalData","isModalOpen","productId","modalAction","modalHeading","variant","openModal","initialLoad","loading","action","id","updateData","dataUpdated","msg","color","productSlice","name","reducers","getData","state","payload","data","updateParam","param","dataChanged","dataNotChanged","modalOpen","heading","tableData","modalClose","isDataLoading","dataIsLoaded","addProductModal","getModal","value","type","initiateUpdateData","DataIsUpdated","getProductData","dispatch","url","then","response","http_status","catch","getModalData","output","error","console","log","updateProductData"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { sendGetAdminApi, sendPostAdminApi } from \"src/service/appService\";\r\nimport { getUrl } from \"src/service/customService\";\r\nimport { productStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  productData: [],\r\n  reRunData: {\r\n    isDataChanged: true,\r\n    queryParam: \"\",\r\n  },\r\n  modalActionData: \"\",\r\n  isLoading: false,\r\n  modalData: {\r\n    isModalOpen: false,\r\n    productId: 0,\r\n    modalAction: \"\",\r\n    modalHeading: \"\",\r\n    variant: \"\",\r\n  },\r\n  openModal: false,\r\n  initialLoad: {\r\n    loading: false,\r\n    action: \"\",\r\n    id: 0,\r\n  },\r\n  updateData: {\r\n    isLoading: false,\r\n    dataUpdated: false,\r\n    msg: \"\",\r\n    color: \"\",\r\n  },\r\n};\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.productData = action.payload.data;\r\n    },\r\n    updateParam(state, action) {\r\n      state.reRunData = {\r\n        ...state.reRunData,\r\n        queryParam: action.payload.param,\r\n      };\r\n    },\r\n    dataChanged(state) {\r\n      state.reRunData = {\r\n        ...state.reRunData,\r\n        isDataChanged: true,\r\n      };\r\n    },\r\n    dataNotChanged(state) {\r\n      state.reRunData = {\r\n        ...state.reRunData,\r\n        isDataChanged: false,\r\n      };\r\n    },\r\n    modalOpen(state, action) {\r\n      state.modalData = {\r\n        isModalOpen: true,\r\n        productId: action.payload.id,\r\n        modalAction: action.payload.action,\r\n        modalHeading: action.payload.heading,\r\n        variant: action.payload.variant,\r\n        data: action.payload.tableData,\r\n      };\r\n    },\r\n    modalClose(state) {\r\n      state.modalData = {\r\n        isModalOpen: false,\r\n        productId: 0,\r\n        modalAction: \"\",\r\n        modalHeading: \"\",\r\n      };\r\n      state.initialLoad = {\r\n        loading: false,\r\n        action: \"\",\r\n        id: 0,\r\n      };\r\n      state.updateData = {\r\n        isLoading: false,\r\n        dataUpdated: false,\r\n        msg: \"\",\r\n        color: \"\",\r\n      };\r\n    },\r\n    isDataLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    dataIsLoaded(state) {\r\n      state.isLoading = false;\r\n    },\r\n    addProductModal(state, action) {\r\n      state.openModal = action.payload.data;\r\n    },\r\n    getModal(state, action) {\r\n      state.initialLoad = {\r\n        loading: action.payload.value,\r\n        action: action.payload.type,\r\n        id: action.payload.id,\r\n      };\r\n    },\r\n    initiateUpdateData(state) {\r\n      state.reRunData = {\r\n        ...state.reRunData,\r\n        isDataChanged: false,\r\n      };\r\n      state.updateData = {\r\n        ...state.updateData,\r\n        isLoading: true,\r\n        dataUpdated: false,\r\n      };\r\n    },\r\n    DataIsUpdated(state, action) {\r\n      state.reRunData = {\r\n        ...state.reRunData,\r\n        isDataChanged: true,\r\n      };\r\n      state.updateData = {\r\n        ...state.updateData,\r\n        isLoading: false,\r\n        dataUpdated: true,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default productSlice;\r\n\r\nexport const getProductData = (data) => {\r\n  return (dispatch) => {\r\n    const url = getUrl(\"get-all-chairs\", data.param);\r\n    sendGetAdminApi(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(productStoreAction.getData({ data: response.data.data }));\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport const getModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      productStoreAction.getModal({\r\n        id: data.id,\r\n        value: true,\r\n        type: data.action,\r\n      })\r\n    );\r\n    sendGetAdminApi(`get-product-details/${data.id}`)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const output = {\r\n            id: data.id,\r\n            action: data.action,\r\n            heading:\r\n              data.action === \"Update\"\r\n                ? \"Update the Product\"\r\n                : \"Delete the Product\",\r\n            variant: data.action === \"Update\" ? \"primary\" : \"danger\",\r\n            tableData: response.data.data[0],\r\n          };\r\n          dispatch(\r\n            productStoreAction.getModal({\r\n              id: data.id,\r\n              value: false,\r\n              type: data.action,\r\n            })\r\n          );\r\n          dispatch(productStoreAction.modalOpen(output));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  \r\n};\r\n\r\nexport const updateProductData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(productStoreAction.initiateUpdateData());\r\n    sendPostAdminApi(\"edit-product-details\", data).then((response) => {\r\n      console.log(response.data.data.msg);\r\n      dispatch(\r\n        productStoreAction.DataIsUpdated({\r\n          msg: response.data.data.msg,\r\n          color: \"success\",\r\n        })\r\n      );\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}