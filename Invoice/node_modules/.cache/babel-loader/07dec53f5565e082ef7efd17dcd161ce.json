{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\ProductModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport API from \"src/axios/axios\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { productStoreAction } from \"src/store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProductModal = function ProductModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(),\n      productName = _useFormValidate.inputValue,\n      setProductName = _useFormValidate.setInputValue,\n      productNameChangeHandler = _useFormValidate.inputChangeHandler,\n      pro = _useFormValidate.reset;\n\n  var _useFormValidate2 = useFormValidate(),\n      productCode = _useFormValidate2.inputValue,\n      setProductCode = _useFormValidate2.setInputValue,\n      productCodeChangeHandler = _useFormValidate2.inputChangeHandler;\n\n  var _useFormValidate3 = useFormValidate(),\n      stock = _useFormValidate3.inputValue,\n      setstock = _useFormValidate3.setInputValue,\n      stockChangeHandler = _useFormValidate3.inputChangeHandler;\n\n  var _useState = useState({\n    isLoading: false,\n    hideForm: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalState = _useState2[0],\n      setModalState = _useState2[1];\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      modalData: state.productStore.modalData,\n      id: state.productStore.modalData.productId,\n      isLoading: state.productStore.isLoading\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(productStoreAction.modalClose());\n  }; //get the product details\n\n\n  useEffect(function () {\n    setModalState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isLoading: true\n      });\n    });\n    API.get(\"get-product-details/\".concat(state.id)).then(function (response) {\n      setModalState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          hideForm: false\n        });\n      });\n\n      if (response.data.http_status === 200) {\n        setProductName(response.data.data[0].itemname);\n        setProductCode(response.data.data[0].itemcode);\n        setstock(+response.data.data[0].count);\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    }); // setModalState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     isLoading: false,\n    //   };\n    // });\n  }, [state.id]);\n\n  var onSubmitHandler = function onSubmitHandler() {};\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.modalData.isModalOpen,\n    onClose: modalCloseHandler,\n    heading: state.modalData.modalHeading,\n    variant: state.modalData.variant,\n    action: state.modalData.modalAction,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    loading: modalState.isLoading,\n    children: [modalState.hideForm && \"loading\", !modalState.hideForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: false,\n        label: \"Product Name\",\n        value: productName,\n        change: productNameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: false,\n        label: \"Product Code\",\n        value: productCode,\n        change: productCodeChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"number\",\n        readOnly: false,\n        label: \"Current Stock\",\n        value: stock,\n        change: stockChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProductModal, \"nD4QpsFZVrEeRRKFY1bSomqSKps=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = ProductModal;\nexport default ProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/ProductModal.js"],"names":["React","useState","useEffect","useSelector","useDispatch","API","FormInput","CModal","useFormValidate","productStoreAction","ProductModal","productName","inputValue","setProductName","setInputValue","productNameChangeHandler","inputChangeHandler","pro","reset","productCode","setProductCode","productCodeChangeHandler","stock","setstock","stockChangeHandler","isLoading","hideForm","modalState","setModalState","mapStateToProps","state","modalData","productStore","id","productId","dispatch","modalCloseHandler","modalClose","prevState","get","then","response","data","http_status","itemname","itemcode","count","catch","error","console","log","message","onSubmitHandler","isModalOpen","modalHeading","variant","modalAction"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\n\r\nconst ProductModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    setInputValue: setProductName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    reset:pro\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    setInputValue: setProductCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stock,\r\n    setInputValue: setstock,\r\n    inputChangeHandler: stockChangeHandler,\r\n  } = useFormValidate();\r\n  const [modalState, setModalState] = useState({\r\n    isLoading: false,\r\n    hideForm: true,\r\n  });\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.productStore.modalData,\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.modalClose());\r\n\r\n  };\r\n  //get the product details\r\n  useEffect(() => {\r\n    setModalState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoading: true,\r\n      };\r\n    });\r\n\r\n    API.get(`get-product-details/${state.id}`)\r\n      .then((response) => {\r\n        setModalState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            hideForm: false,\r\n          };\r\n        });\r\n        if (response.data.http_status === 200) {\r\n          setProductName(response.data.data[0].itemname);\r\n          setProductCode(response.data.data[0].itemcode);\r\n          setstock(+response.data.data[0].count);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n    // setModalState((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     isLoading: false,\r\n    //   };\r\n    // });\r\n  }, [state.id]);\r\n  const onSubmitHandler = () => {};\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalAction}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={modalState.isLoading}\r\n    >\r\n      {modalState.hideForm && \"loading\"}\r\n      {!modalState.hideForm && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Name\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Code\"\r\n            value={productCode}\r\n            change={productCodeChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Current Stock\"\r\n            value={stock}\r\n            change={stockChangeHandler}\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}