{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getUrl } from \"src/service/customService\";\nvar initialState = {\n  tableData: {\n    data: [],\n    isDataLoaded: false\n  },\n  reRunComponent: {\n    isDataChanged: true,\n    queryParam: \"\"\n  }\n};\nvar commentSlice = createSlice({\n  name: \"comments\",\n  initialState: initialState,\n  reducers: {}\n});\nexport default commentSlice;\nexport var getCommentData = function getCommentData(data) {\n  return function (dispatch) {\n    var url = getUrl(\"comments/get-comments\", data.param);\n    console.log(url);\n    sendGetAdminApi(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(postStoreAction.getData({\n          post: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/comment-slice.js"],"names":["createSlice","getUrl","initialState","tableData","data","isDataLoaded","reRunComponent","isDataChanged","queryParam","commentSlice","name","reducers","getCommentData","dispatch","url","param","console","log","sendGetAdminApi","then","response","http_status","postStoreAction","getData","post","catch","error","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,EADG;AAETC,IAAAA,YAAY,EAAE;AAFL,GADQ;AAKnBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,aAAa,EAAE,IADD;AAEdC,IAAAA,UAAU,EAAE;AAFE;AALG,CAArB;AAWA,IAAMC,YAAY,GAAGT,WAAW,CAAC;AAC/BU,EAAAA,IAAI,EAAE,UADyB;AAE/BR,EAAAA,YAAY,EAAZA,YAF+B;AAG/BS,EAAAA,QAAQ,EAAE;AAHqB,CAAD,CAAhC;AAKA,eAAeF,YAAf;AAEA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACR,IAAD,EAAU;AACtC,SAAO,UAACS,QAAD,EAAc;AACnB,QAAMC,GAAG,GAAGb,MAAM,0BAA0BG,IAAI,CAACW,KAA/B,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAI,IAAAA,eAAe,CAACJ,GAAD,CAAf,CACGK,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAAChB,IAAT,CAAciB,WAAd,KAA8B,GAAlC,EAAuC;AACrCR,QAAAA,QAAQ,CAACS,eAAe,CAACC,OAAhB,CAAwB;AAAEC,UAAAA,IAAI,EAAEJ,QAAQ,CAAChB,IAAT,CAAcA;AAAtB,SAAxB,CAAD,CAAR;AACD;AACF,KALH,EAMGqB,KANH,CAMS,UAACC,KAAD,EAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACC,OAAlB;AACD,KARH;AASD,GAZD;AAaD,CAdM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getUrl } from \"src/service/customService\";\r\n\r\nconst initialState = {\r\n  tableData: {\r\n    data: [],\r\n    isDataLoaded: false,\r\n  },\r\n  reRunComponent: {\r\n    isDataChanged: true,\r\n    queryParam: \"\",\r\n  },\r\n};\r\n\r\nconst commentSlice = createSlice({\r\n  name: \"comments\",\r\n  initialState,\r\n  reducers: {},\r\n});\r\nexport default commentSlice;\r\n\r\nexport const getCommentData = (data) => {\r\n  return (dispatch) => {\r\n    const url = getUrl(`comments/get-comments`, data.param);\r\n    console.log(url);\r\n    sendGetAdminApi(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(postStoreAction.getData({ post: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}