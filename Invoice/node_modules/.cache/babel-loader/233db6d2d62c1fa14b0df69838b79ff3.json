{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\ProductModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport API from \"src/axios/axios\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { productStoreAction } from \"src/store/store\";\nimport { Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProductModal = function ProductModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(),\n      productName = _useFormValidate.inputValue,\n      setProductName = _useFormValidate.setInputValue,\n      productNameChangeHandler = _useFormValidate.inputChangeHandler,\n      productNameRestHandler = _useFormValidate.reset;\n\n  var _useFormValidate2 = useFormValidate(),\n      productCode = _useFormValidate2.inputValue,\n      setProductCode = _useFormValidate2.setInputValue,\n      productCodeChangeHandler = _useFormValidate2.inputChangeHandler,\n      productCodeRestHandler = _useFormValidate2.reset;\n\n  var _useFormValidate3 = useFormValidate(),\n      stock = _useFormValidate3.inputValue,\n      setstock = _useFormValidate3.setInputValue,\n      stockChangeHandler = _useFormValidate3.inputChangeHandler,\n      stockRestHandler = _useFormValidate3.reset;\n\n  var _useState = useState({\n    isLoading: false,\n    hideForm: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalState = _useState2[0],\n      setModalState = _useState2[1];\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      modalData: state.productStore.modalData,\n      id: state.productStore.modalData.productId,\n      isLoading: state.productStore.isLoading,\n      initialLoad: state.productStore.initialLoad\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(productStoreAction.modalClose());\n  };\n\n  useEffect(function () {\n    if (state.modalData.isModalOpen && state.initialLoad.action === \"Update\") {\n      setProductCode(state.modalData.data.itemcode);\n      setProductName(state.modalData.data.itemname);\n      setstock(state.modalData.data.count);\n    }\n  }, [state.modalData, state.initialLoad.action, setProductCode, setProductName, setstock]);\n\n  var onSubmitHandler = function onSubmitHandler() {};\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.modalData.isModalOpen,\n    onClose: modalCloseHandler,\n    heading: state.modalData.modalHeading,\n    variant: state.modalData.variant,\n    action: state.modalData.modalAction,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    loading: modalState.isLoading,\n    children: [state.initialLoad.action === \"Delete\" && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: variant,\n      children: [\"This is a \", variant, \" alert with\", \" \", /*#__PURE__*/_jsxDEV(Alert.Link, {\n        href: \"#\",\n        children: \"an example link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, _this), \". Give it a click if you like.\"]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, _this), state.initialLoad.action === \"Update\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        label: \"Product Name\",\n        value: productName,\n        change: productNameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        label: \"Product Code\",\n        value: productCode,\n        change: productCodeChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"number\",\n        readOnly: false,\n        label: \"Current Stock\",\n        value: stock,\n        change: stockChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProductModal, \"WbCBUfoE0yQVtbFdJLRnOC3UCnQ=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = ProductModal;\nexport default ProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/ProductModal.js"],"names":["React","useState","useEffect","useSelector","useDispatch","API","FormInput","CModal","useFormValidate","productStoreAction","Alert","ProductModal","productName","inputValue","setProductName","setInputValue","productNameChangeHandler","inputChangeHandler","productNameRestHandler","reset","productCode","setProductCode","productCodeChangeHandler","productCodeRestHandler","stock","setstock","stockChangeHandler","stockRestHandler","isLoading","hideForm","modalState","setModalState","mapStateToProps","state","modalData","productStore","id","productId","initialLoad","dispatch","modalCloseHandler","modalClose","isModalOpen","action","data","itemcode","itemname","count","onSubmitHandler","modalHeading","variant","modalAction","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nimport { Alert } from \"react-bootstrap\";\r\nconst ProductModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    setInputValue: setProductName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    reset: productNameRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    setInputValue: setProductCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n    reset: productCodeRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stock,\r\n    setInputValue: setstock,\r\n    inputChangeHandler: stockChangeHandler,\r\n    reset: stockRestHandler,\r\n  } = useFormValidate();\r\n  const [modalState, setModalState] = useState({\r\n    isLoading: false,\r\n    hideForm: true,\r\n  });\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.productStore.modalData,\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n      initialLoad: state.productStore.initialLoad,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.modalClose());\r\n  };\r\n  useEffect(() => {\r\n    if (state.modalData.isModalOpen && state.initialLoad.action === \"Update\") {\r\n      setProductCode(state.modalData.data.itemcode);\r\n      setProductName(state.modalData.data.itemname);\r\n      setstock(state.modalData.data.count);\r\n    }\r\n  }, [\r\n    state.modalData,\r\n    state.initialLoad.action,\r\n    setProductCode,\r\n    setProductName,\r\n    setstock,\r\n  ]);\r\n\r\n  const onSubmitHandler = () => {};\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalAction}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={modalState.isLoading}\r\n    >\r\n      {state.initialLoad.action === \"Delete\" && (\r\n        <Alert key={idx} variant={variant}>\r\n          This is a {variant} alert with{\" \"}\r\n          <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a click if\r\n          you like.\r\n        </Alert>\r\n      )}\r\n      {state.initialLoad.action === \"Update\" && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Product Name\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Product Code\"\r\n            value={productCode}\r\n            change={productCodeChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Current Stock\"\r\n            value={stock}\r\n            change={stockChangeHandler}\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}