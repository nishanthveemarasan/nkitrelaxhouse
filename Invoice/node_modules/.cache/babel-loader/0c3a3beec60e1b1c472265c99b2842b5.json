{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { CompareArrowsOutlined } from \"@material-ui/icons\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { registerStoreAction } from \"./store\";\nvar initialState = {\n  isLoading: false,\n  message: {\n    msg: [],\n    color: \"\",\n    status: false,\n    isRegistered: false\n  }\n};\nvar registerSlice = createSlice({\n  name: \"register\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.isLoading = true;\n    },\n    getResponse: function getResponse(state, action) {\n      state.isLoading = false;\n      state.message = _objectSpread(_objectSpread({}, state.message), {}, {\n        msg: action.payload.data,\n        status: action.payload.status,\n        color: action.payload.color,\n        isRegistered: true\n      });\n    }\n  }\n});\nexport default registerSlice;\nexport var registerData = function registerData(data) {\n  return function (dispatch) {\n    dispatch(registerStoreAction.sendRequest());\n    console.log(data);\n    API.post(\"users/create\", data).then(function (response) {\n      console.log(response.data);\n      var array = [response.data.data.msg];\n      dispatch(registerStoreAction.registeredFailedData({\n        data: array,\n        status: true,\n        color: \"success\"\n      }));\n    }).catch(function (error) {\n      console.log('error');\n      console.log(error.response);\n      var array = [];\n\n      for (var key in error.response.data.error) {\n        array.push(error.response.data.error[key][0]);\n      }\n\n      dispatch(registerStoreAction.getResponse({\n        data: array,\n        status: false,\n        color: \"danger\"\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/register-slice.js"],"names":["CompareArrowsOutlined","createSlice","API","registerStoreAction","initialState","isLoading","message","msg","color","status","isRegistered","registerSlice","name","reducers","sendRequest","state","getResponse","action","payload","data","registerData","dispatch","console","log","post","then","response","array","registeredFailedData","catch","error","key","push"],"mappings":";AAAA,SAASA,qBAAT,QAAsC,oBAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,mBAAT,QAAoC,SAApC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,KAAK,EAAE,EAFA;AAGPC,IAAAA,MAAM,EAAE,KAHD;AAIPC,IAAAA,YAAY,EAAE;AAJP;AAFU,CAArB;AAUA,IAAMC,aAAa,GAAGV,WAAW,CAAC;AAChCW,EAAAA,IAAI,EAAE,UAD0B;AAEhCR,EAAAA,YAAY,EAAZA,YAFgC;AAGhCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACW;AACjBA,MAAAA,KAAK,CAACV,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRW,IAAAA,WAJQ,uBAIID,KAJJ,EAIWE,MAJX,EAImB;AACzBF,MAAAA,KAAK,CAACV,SAAN,GAAkB,KAAlB;AACAU,MAAAA,KAAK,CAACT,OAAN,mCACKS,KAAK,CAACT,OADX;AAEEC,QAAAA,GAAG,EAAEU,MAAM,CAACC,OAAP,CAAeC,IAFtB;AAGEV,QAAAA,MAAM,EAAEQ,MAAM,CAACC,OAAP,CAAeT,MAHzB;AAIED,QAAAA,KAAK,EAAES,MAAM,CAACC,OAAP,CAAeV,KAJxB;AAKEE,QAAAA,YAAY,EAAE;AALhB;AAOD;AAbO;AAHsB,CAAD,CAAjC;AAmBA,eAAeC,aAAf;AAEA,OAAO,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAACD,IAAD,EAAU;AACpC,SAAO,UAACE,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAClB,mBAAmB,CAACW,WAApB,EAAD,CAAR;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAjB,IAAAA,GAAG,CAACsB,IAAJ,CAAS,cAAT,EAAyBL,IAAzB,EACGM,IADH,CACQ,UAACC,QAAD,EAAc;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACP,IAArB;AACA,UAAMQ,KAAK,GAAG,CAACD,QAAQ,CAACP,IAAT,CAAcA,IAAd,CAAmBZ,GAApB,CAAd;AACAc,MAAAA,QAAQ,CACNlB,mBAAmB,CAACyB,oBAApB,CAAyC;AACvCT,QAAAA,IAAI,EAAEQ,KADiC;AAEvClB,QAAAA,MAAM,EAAE,IAF+B;AAGvCD,QAAAA,KAAK,EAAE;AAHgC,OAAzC,CADM,CAAR;AAOD,KAXH,EAYGqB,KAZH,CAYS,UAACC,KAAD,EAAW;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACJ,QAAlB;AACA,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAII,GAAT,IAAgBD,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBW,KAApC,EAA2C;AACzCH,QAAAA,KAAK,CAACK,IAAN,CAAWF,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBW,KAApB,CAA0BC,GAA1B,EAA+B,CAA/B,CAAX;AACD;;AACDV,MAAAA,QAAQ,CACNlB,mBAAmB,CAACa,WAApB,CAAgC;AAC9BG,QAAAA,IAAI,EAAEQ,KADwB;AAE9BlB,QAAAA,MAAM,EAAE,KAFsB;AAG9BD,QAAAA,KAAK,EAAE;AAHuB,OAAhC,CADM,CAAR;AAOD,KA1BH;AA2BD,GA9BD;AA+BD,CAhCM","sourcesContent":["import { CompareArrowsOutlined } from \"@material-ui/icons\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { registerStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  message: {\r\n    msg: [],\r\n    color: \"\",\r\n    status: false,\r\n    isRegistered: false,\r\n  },\r\n};\r\n\r\nconst registerSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.isLoading = true;\r\n    },\r\n    getResponse(state, action) {\r\n      state.isLoading = false;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: action.payload.data,\r\n        status: action.payload.status,\r\n        color: action.payload.color,\r\n        isRegistered: true,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default registerSlice;\r\n\r\nexport const registerData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(registerStoreAction.sendRequest());\r\n    console.log(data);\r\n    API.post(\"users/create\", data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const array = [response.data.data.msg];\r\n        dispatch(\r\n          registerStoreAction.registeredFailedData({\r\n            data: array,\r\n            status: true,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log('error');\r\n        console.log(error.response);\r\n        let array = [];\r\n        for (let key in error.response.data.error) {\r\n          array.push(error.response.data.error[key][0]);\r\n        }\r\n        dispatch(\r\n          registerStoreAction.getResponse({\r\n            data: array,\r\n            status: false,\r\n            color: \"danger\",\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}