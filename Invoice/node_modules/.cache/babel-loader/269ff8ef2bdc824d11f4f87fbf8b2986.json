{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { userStoreAction } from \"./store\";\nvar initialState = {\n  isUserDataLoaded: false,\n  userData: [],\n  reRunComponent: true,\n  userModalData: {\n    userRoles: [\"Admin\", \"User\"],\n    userId: 0,\n    actionType: \"\",\n    isModalOpen: false,\n    modalHeading: \"\",\n    modalAction: \"\",\n    variant: \"\"\n  },\n  updateUserData: {\n    isLoading: false,\n    isDataUpdated: f\n  }\n};\nvar userSlice = createSlice({\n  name: \"users\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isUserDataLoaded = true;\n      state.userData = action.payload.user;\n    },\n    openUserModal: function openUserModal(state, action) {\n      state.userModalData = _objectSpread(_objectSpread({}, state.userModalData), {}, {\n        isModalOpen: true,\n        userId: action.payload.id,\n        actionType: action.payload.actionType,\n        modalHeading: action.payload.heading,\n        variant: action.payload.variant,\n        modalAction: action.payload.modalAction\n      });\n      console.log(state.userModalData);\n    }\n  }\n});\nexport default userSlice;\nexport var getUserData = function getUserData(param) {\n  return function (dispatch) {\n    var url = \"users/get-users\";\n\n    if (param) {\n      url = \"users/get-users?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(userStoreAction.getData({\n          user: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var getUserModalData = function getUserModalData(data) {\n  return function (dispatch) {\n    dispatch(userStoreAction.openUserModal({\n      id: data.id,\n      actionType: data.action,\n      modalAction: data.action === \"assign\" ? \"Assign Role\" : \"Disable\",\n      heading: data.action === \"assign\" ? \"Assign Role to the User\" : \"Enable/Disable the User\",\n      variant: data.action === \"assign\" ? \"primary\" : \"danger\"\n    }));\n  };\n};\nexport var editUserRole = function editUserRole(data) {\n  return function (dispatch) {\n    console.log(data);\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/user-slice.js"],"names":["createSlice","API","userStoreAction","initialState","isUserDataLoaded","userData","reRunComponent","userModalData","userRoles","userId","actionType","isModalOpen","modalHeading","modalAction","variant","updateUserData","isLoading","isDataUpdated","f","userSlice","name","reducers","getData","state","action","payload","user","openUserModal","id","heading","console","log","getUserData","param","dispatch","url","get","then","response","data","http_status","catch","error","message","getUserModalData","editUserRole"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { userStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isUserDataLoaded: false,\r\n  userData: [],\r\n  reRunComponent: true,\r\n  userModalData: {\r\n    userRoles: [\"Admin\", \"User\"],\r\n    userId: 0,\r\n    actionType: \"\",\r\n    isModalOpen: false,\r\n    modalHeading: \"\",\r\n    modalAction: \"\",\r\n    variant: \"\",\r\n  },\r\n  updateUserData:{\r\n    isLoading:false,\r\n    isDataUpdated:f\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isUserDataLoaded = true;\r\n      state.userData = action.payload.user;\r\n    },\r\n    openUserModal(state, action) {\r\n      state.userModalData = {\r\n        ...state.userModalData,\r\n        isModalOpen: true,\r\n        userId: action.payload.id,\r\n        actionType: action.payload.actionType,\r\n        modalHeading: action.payload.heading,\r\n        variant: action.payload.variant,\r\n        modalAction: action.payload.modalAction,\r\n      };\r\n      console.log(state.userModalData);\r\n    },\r\n  },\r\n});\r\nexport default userSlice;\r\n\r\nexport const getUserData = (param) => {\r\n  return (dispatch) => {\r\n    let url = \"users/get-users\";\r\n    if (param) {\r\n      url = `users/get-users?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(userStoreAction.getData({ user: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      userStoreAction.openUserModal({\r\n        id: data.id,\r\n        actionType: data.action,\r\n        modalAction: data.action === \"assign\" ? \"Assign Role\" : \"Disable\",\r\n        heading:\r\n          data.action === \"assign\"\r\n            ? \"Assign Role to the User\"\r\n            : \"Enable/Disable the User\",\r\n        variant: data.action === \"assign\" ? \"primary\" : \"danger\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const editUserRole = (data) => {\r\n  return (dispatch) => {\r\n    console.log(data);\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}