{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Users\\\\UserDetail\\\\PasswordReset.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport { Form } from \"react-bootstrap\";\nimport CButton from \"src/Components/UI/Button/Button\";\nimport Card from \"src/Components/UI/Card/Card\";\nimport FormGroup from \"src/Components/UI/Input/FormGroup\";\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\nimport { generateRandomPassword } from \"src/service/customService\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PasswordReset = function PasswordReset(props) {\n  _s();\n\n  var data = props.body;\n\n  var _useFormValidate = useFormValidate(),\n      password = _useFormValidate.inputValue,\n      setPassword = _useFormValidate.setInputValue,\n      passwordChangeHandler = _useFormValidate.inputChangeHandler;\n\n  var _useFormValidate2 = useFormValidate(),\n      password_confirmation = _useFormValidate2.inputValue,\n      passwordConfirmationChangeHandler = _useFormValidate2.inputChangeHandler;\n\n  var _useState = useState(\"view\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      view = _useState2[0],\n      setView = _useState2[1];\n\n  var _useState3 = useState(\"password\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState({\n    msg: \"\",\n    dataReceived: false,\n    color: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      response = _useState8[0],\n      setResponse = _useState8[1];\n\n  var generateRandomPasswordHandler = function generateRandomPasswordHandler() {\n    var password = generateRandomPassword(15);\n    setPassword(password);\n  };\n\n  var onViewHandler = function onViewHandler() {\n    if (view === \"view\") {\n      setView(\"hide\");\n      setType(\"text\");\n    } else if (view === \"hide\") {\n      setView(\"view\");\n      setType(\"password\");\n    }\n  };\n\n  var onResetPasswordHandler = function onResetPasswordHandler(e) {\n    e.preventDefault();\n    var data = {\n      password: password,\n      password_confirmation: password_confirmation\n    };\n\n    if (password === password_confirmation) {\n      console.log(data);\n      setLoading(true);\n      setResponse(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          dataReceived: false\n        });\n      });\n    } else {\n      setResponse(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          dataReceived: true,\n          msg: \"Password does not match!!\",\n          color: \"danger\"\n        });\n      });\n      sendPostAdminApi(\"users/update-a-user\", data).then(function (response) {\n        setResponse(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            dataReceived: true,\n            msg: response.data.data.msg,\n            color: \"success\"\n          });\n        });\n        setLoading(false);\n      }).catch(function (error) {\n        console.log(error.response);\n        setLoading(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    color: \"primary\",\n    header: \"Change Password\",\n    children: [response.dataReceived && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: response.color,\n      text: response.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onResetPasswordHandler,\n      children: [/*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          placeholder: \"New Password\",\n          type: type,\n          group: view,\n          md: 8,\n          sm: 12,\n          value: password,\n          change: passwordChangeHandler,\n          viewHandler: onViewHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          md: 4,\n          sm: 12,\n          className: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"light\",\n            width: \"30%\",\n            type: \"button\",\n            loading: false,\n            name: \"generate\",\n            block: true,\n            click: generateRandomPasswordHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(FormInputLabel, {\n          label: false,\n          type: type,\n          readOnly: false,\n          md: 8,\n          sm: 12,\n          placeHolder: \"Confirm Password\",\n          value: password_confirmation,\n          change: passwordConfirmationChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n        children: /*#__PURE__*/_jsxDEV(CCol, {\n          md: 12,\n          sm: 12,\n          className: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"success\",\n            width: \"30%\",\n            type: \"submit\",\n            loading: loading,\n            name: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PasswordReset, \"5w/gWVinGAtRjN4tNC4sSoOYMCY=\", false, function () {\n  return [useFormValidate, useFormValidate];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Users/UserDetail/PasswordReset.js"],"names":["useState","CCol","CRow","Form","CButton","Card","FormGroup","FormInputLabel","generateRandomPassword","useFormValidate","CAlert","PasswordReset","props","data","body","password","inputValue","setPassword","setInputValue","passwordChangeHandler","inputChangeHandler","password_confirmation","passwordConfirmationChangeHandler","view","setView","type","setType","loading","setLoading","msg","dataReceived","color","response","setResponse","generateRandomPasswordHandler","onViewHandler","onResetPasswordHandler","e","preventDefault","console","log","prevState","sendPostAdminApi","then","catch","error"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,eAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAC/B,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAnB;;AACA,yBAIIL,eAAe,EAJnB;AAAA,MACcM,QADd,oBACEC,UADF;AAAA,MAEiBC,WAFjB,oBAEEC,aAFF;AAAA,MAGsBC,qBAHtB,oBAGEC,kBAHF;;AAKA,0BAGIX,eAAe,EAHnB;AAAA,MACcY,qBADd,qBACEL,UADF;AAAA,MAEsBM,iCAFtB,qBAEEF,kBAFF;;AAIA,kBAAwBpB,QAAQ,CAAC,MAAD,CAAhC;AAAA;AAAA,MAAOuB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBxB,QAAQ,CAAC,UAAD,CAAhC;AAAA;AAAA,MAAOyB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8B1B,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAO2B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgC5B,QAAQ,CAAC;AACvC6B,IAAAA,GAAG,EAAE,EADkC;AAEvCC,IAAAA,YAAY,EAAE,KAFyB;AAGvCC,IAAAA,KAAK,EAAE;AAHgC,GAAD,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAKA,MAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,GAAM;AAC1C,QAAMnB,QAAQ,GAAGP,sBAAsB,CAAC,EAAD,CAAvC;AACAS,IAAAA,WAAW,CAACF,QAAD,CAAX;AACD,GAHD;;AAKA,MAAMoB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIZ,IAAI,KAAK,MAAb,EAAqB;AACnBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAE,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD,KAHD,MAGO,IAAIH,IAAI,KAAK,MAAb,EAAqB;AAC1BC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAE,MAAAA,OAAO,CAAC,UAAD,CAAP;AACD;AACF,GARD;;AAUA,MAAMU,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,CAAD,EAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAMzB,IAAI,GAAG;AACXE,MAAAA,QAAQ,EAARA,QADW;AAEXM,MAAAA,qBAAqB,EAArBA;AAFW,KAAb;;AAIA,QAAIN,QAAQ,KAAKM,qBAAjB,EAAwC;AACtCkB,MAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;AACAe,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,MAAAA,WAAW,CAAC,UAACQ,SAAD,EAAe;AACzB,+CACKA,SADL;AAEEX,UAAAA,YAAY,EAAE;AAFhB;AAID,OALU,CAAX;AAMD,KATD,MASO;AACLG,MAAAA,WAAW,CAAC,UAACQ,SAAD,EAAe;AACzB,+CACKA,SADL;AAEEX,UAAAA,YAAY,EAAE,IAFhB;AAGED,UAAAA,GAAG,EAAE,2BAHP;AAIEE,UAAAA,KAAK,EAAE;AAJT;AAMD,OAPU,CAAX;AAQAW,MAAAA,gBAAgB,CAAC,qBAAD,EAAwB7B,IAAxB,CAAhB,CACG8B,IADH,CACQ,UAACX,QAAD,EAAc;AAClBC,QAAAA,WAAW,CAAC,UAACQ,SAAD,EAAe;AACzB,iDACKA,SADL;AAEEX,YAAAA,YAAY,EAAE,IAFhB;AAGED,YAAAA,GAAG,EAAEG,QAAQ,CAACnB,IAAT,CAAcA,IAAd,CAAmBgB,GAH1B;AAIEE,YAAAA,KAAK,EAAE;AAJT;AAMD,SAPU,CAAX;AAQAH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAXH,EAYGgB,KAZH,CAYS,UAACC,KAAD,EAAW;AAChBN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACb,QAAlB;AACAJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAfH;AAgBD;AACF,GAzCD;;AA0CA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,MAAM,EAAC,iBAA7B;AAAA,eACGI,QAAQ,CAACF,YAAT,iBACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEE,QAAQ,CAACD,KAAxB;AAA+B,MAAA,IAAI,EAAEC,QAAQ,CAACH;AAA9C;AAAA;AAAA;AAAA;AAAA,aAFJ,eAIE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEO,sBAAhB;AAAA,8BACE,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,WAAW,EAAC,cADd;AAEE,UAAA,IAAI,EAAEX,IAFR;AAGE,UAAA,KAAK,EAAEF,IAHT;AAIE,UAAA,EAAE,EAAE,CAJN;AAKE,UAAA,EAAE,EAAE,EALN;AAME,UAAA,KAAK,EAAER,QANT;AAOE,UAAA,MAAM,EAAEI,qBAPV;AAQE,UAAA,WAAW,EAAEgB;AARf;AAAA;AAAA;AAAA;AAAA,iBADF,eAWE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAa,UAAA,EAAE,EAAE,EAAjB;AAAqB,UAAA,SAAS,EAAC,YAA/B;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,KAAK,EAAC,OADR;AAEE,YAAA,KAAK,EAAC,KAFR;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,OAAO,EAAE,KAJX;AAKE,YAAA,IAAI,EAAC,UALP;AAME,YAAA,KAAK,EAAE,IANT;AAOE,YAAA,KAAK,EAAED;AAPT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAwBE,QAAC,IAAD;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,KAAK,EAAE,KADT;AAEE,UAAA,IAAI,EAAET,IAFR;AAGE,UAAA,QAAQ,EAAE,KAHZ;AAIE,UAAA,EAAE,EAAE,CAJN;AAKE,UAAA,EAAE,EAAE,EALN;AAME,UAAA,WAAW,EAAC,kBANd;AAOE,UAAA,KAAK,EAAEJ,qBAPT;AAQE,UAAA,MAAM,EAAEC;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAxBF,eAoCE,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,EAAV;AAAc,UAAA,EAAE,EAAE,EAAlB;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,KAAK,EAAC,KAFR;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,OAAO,EAAEK,OAJX;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eApCF;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAuDD,CAnID;;GAAMhB,a;UAMAF,e,EAIAA,e;;;KAVAE,a;AAqIN,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport FormGroup from \"src/Components/UI/Input/FormGroup\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport { generateRandomPassword } from \"src/service/customService\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nconst PasswordReset = (props) => {\r\n  const data = props.body;\r\n  const {\r\n    inputValue: password,\r\n    setInputValue: setPassword,\r\n    inputChangeHandler: passwordChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: password_confirmation,\r\n    inputChangeHandler: passwordConfirmationChangeHandler,\r\n  } = useFormValidate();\r\n  const [view, setView] = useState(\"view\");\r\n  const [type, setType] = useState(\"password\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    msg: \"\",\r\n    dataReceived: false,\r\n    color: \"\",\r\n  });\r\n  const generateRandomPasswordHandler = () => {\r\n    const password = generateRandomPassword(15);\r\n    setPassword(password);\r\n  };\r\n\r\n  const onViewHandler = () => {\r\n    if (view === \"view\") {\r\n      setView(\"hide\");\r\n      setType(\"text\");\r\n    } else if (view === \"hide\") {\r\n      setView(\"view\");\r\n      setType(\"password\");\r\n    }\r\n  };\r\n\r\n  const onResetPasswordHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      password,\r\n      password_confirmation,\r\n    };\r\n    if (password === password_confirmation) {\r\n      console.log(data);\r\n      setLoading(true);\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: false,\r\n        };\r\n      });\r\n    } else {\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: true,\r\n          msg: \"Password does not match!!\",\r\n          color: \"danger\",\r\n        };\r\n      });\r\n      sendPostAdminApi(\"users/update-a-user\", data)\r\n        .then((response) => {\r\n          setResponse((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              dataReceived: true,\r\n              msg: response.data.data.msg,\r\n              color: \"success\",\r\n            };\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <Card color=\"primary\" header=\"Change Password\">\r\n      {response.dataReceived && (\r\n        <CAlert color={response.color} text={response.msg} />\r\n      )}\r\n      <Form onSubmit={onResetPasswordHandler}>\r\n        <CRow>\r\n          <FormGroup\r\n            placeholder=\"New Password\"\r\n            type={type}\r\n            group={view}\r\n            md={8}\r\n            sm={12}\r\n            value={password}\r\n            change={passwordChangeHandler}\r\n            viewHandler={onViewHandler}\r\n          />\r\n          <CCol md={4} sm={12} className=\"text-right\">\r\n            <CButton\r\n              color=\"light\"\r\n              width=\"30%\"\r\n              type=\"button\"\r\n              loading={false}\r\n              name=\"generate\"\r\n              block={true}\r\n              click={generateRandomPasswordHandler}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label={false}\r\n            type={type}\r\n            readOnly={false}\r\n            md={8}\r\n            sm={12}\r\n            placeHolder=\"Confirm Password\"\r\n            value={password_confirmation}\r\n            change={passwordConfirmationChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <CCol md={12} sm={12} className=\"text-right\">\r\n            <CButton\r\n              color=\"success\"\r\n              width=\"30%\"\r\n              type=\"submit\"\r\n              loading={loading}\r\n              name=\"Reset\"\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"]},"metadata":{},"sourceType":"module"}