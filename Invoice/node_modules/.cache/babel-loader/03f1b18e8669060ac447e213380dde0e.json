{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { userStoreAction } from \"./store\";\nvar initialState = {\n  isUserDataLoaded: false,\n  userData: [],\n  reRunComponent: true,\n  userModalData: {\n    isl: isl\n  }\n};\nvar userSlice = createSlice({\n  name: \"users\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isUserDataLoaded = true;\n      state.userData = action.payload.user;\n    }\n  }\n});\nexport default userSlice;\nexport var getUserData = function getUserData(param) {\n  return function (dispatch) {\n    var url = \"users/get-users\";\n\n    if (param) {\n      url = \"users/get-users?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(userStoreAction.getData({\n          user: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/user-slice.js"],"names":["createSlice","API","userStoreAction","initialState","isUserDataLoaded","userData","reRunComponent","userModalData","isl","userSlice","name","reducers","getData","state","action","payload","user","getUserData","param","dispatch","url","get","then","response","data","http_status","catch","error","console","log","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,KADC;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,cAAc,EAAE,IAHG;AAInBC,EAAAA,aAAa,EAAC;AACZC,IAAAA,GAAG,EAAHA;AADY;AAJK,CAArB;AASA,IAAMC,SAAS,GAAGT,WAAW,CAAC;AAC5BU,EAAAA,IAAI,EAAE,OADsB;AAE5BP,EAAAA,YAAY,EAAZA,YAF4B;AAG5BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACT,gBAAN,GAAyB,IAAzB;AACAS,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAP,CAAeC,IAAhC;AACD;AAJO;AAHkB,CAAD,CAA7B;AAUA,eAAeP,SAAf;AAEA,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AACpC,SAAO,UAACC,QAAD,EAAc;AACnB,QAAIC,GAAG,GAAG,iBAAV;;AACA,QAAIF,KAAJ,EAAW;AACTE,MAAAA,GAAG,6BAAsBF,KAAtB,CAAH;AACD;;AACDjB,IAAAA,GAAG,CAACoB,GAAJ,CAAQD,GAAR,EACGE,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAd,KAA8B,GAAlC,EAAuC;AACrCN,QAAAA,QAAQ,CAACjB,eAAe,CAACU,OAAhB,CAAwB;AAAEI,UAAAA,IAAI,EAAEO,QAAQ,CAACC,IAAT,CAAcA;AAAtB,SAAxB,CAAD,CAAR;AACD;AACF,KALH,EAMGE,KANH,CAMS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KARH;AASD,GAdD;AAeD,CAhBM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { userStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isUserDataLoaded: false,\r\n  userData: [],\r\n  reRunComponent: true,\r\n  userModalData:{\r\n    isl\r\n  }\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isUserDataLoaded = true;\r\n      state.userData = action.payload.user;\r\n    },\r\n  },\r\n});\r\nexport default userSlice;\r\n\r\nexport const getUserData = (param) => {\r\n  return (dispatch) => {\r\n    let url = \"users/get-users\";\r\n    if (param) {\r\n      url = `users/get-users?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(userStoreAction.getData({ user: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}