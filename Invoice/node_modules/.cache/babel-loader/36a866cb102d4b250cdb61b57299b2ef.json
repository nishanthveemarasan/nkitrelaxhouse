{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\CTableBody.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDate } from \"src/custom-functions\";\nimport Icon from \"src/Components/UI/Icon/Icon\";\nimport classes from \"./Product.module.css\";\nimport ToolTip from \"src/Components/UI/Tooltip/ToolTip\";\nimport { productStoreAction } from \"src/store/store\";\nimport { getModalData } from \"src/store/product-slice\";\nimport { Spinner } from \"react-bootstrap\";\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar CTableBody = function CTableBody(props) {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      initialLoad: state.productStore.initialLoad\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var viewHandler = function viewHandler(id) {\n    var data = {\n      id: id,\n      action: \"Update\"\n    };\n    dispatch(getModalData(data));\n  };\n\n  var deleteHandler = function deleteHandler(id) {\n    var data = {\n      id: id,\n      action: \"Delete\",\n      heading: \"Delete the Product\",\n      variant: \"danger\"\n    };\n    dispatch(productStoreAction.modalOpen(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.body.map(function (row, i) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.itemname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.itemcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getDate(row.updated_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Update\",\n            class: classes.view,\n            name: \"cil-align-center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(ToolTip, {\n            value: \"Update\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              class: classes.view,\n              name: \"cil-align-center\",\n              action: viewHandler.bind(null, row.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, _this), \"|\", /*#__PURE__*/_jsxDEV(ToolTip, {\n            value: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              class: classes.delete,\n              name: \"cil-trash\",\n              action: deleteHandler.bind(null, row.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(CTableBody, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CTableBody;\nexport default CTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CTableBody\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/CTableBody.js"],"names":["useSelector","useDispatch","getDate","Icon","classes","ToolTip","productStoreAction","getModalData","Spinner","ActionButton","CTableBody","props","mapStateToProps","state","initialLoad","productStore","dispatch","viewHandler","id","data","action","deleteHandler","heading","variant","modalOpen","body","map","row","i","itemname","itemcode","count","updated_at","view","bind","delete"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport Icon from \"src/Components/UI/Icon/Icon\";\r\nimport classes from \"./Product.module.css\";\r\nimport ToolTip from \"src/Components/UI/Tooltip/ToolTip\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nimport { getModalData } from \"src/store/product-slice\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\r\nconst CTableBody = (props) => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      initialLoad: state.productStore.initialLoad,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const viewHandler = (id) => {\r\n    const data = {\r\n      id,\r\n      action: \"Update\",\r\n    };\r\n    dispatch(getModalData(data));\r\n  };\r\n  const deleteHandler = (id) => {\r\n    const data = {\r\n      id,\r\n      action: \"Delete\",\r\n      heading: \"Delete the Product\",\r\n      variant: \"danger\",\r\n    };\r\n    dispatch(productStoreAction.modalOpen(data));\r\n  };\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>{row.itemname}</td>\r\n            <td>{row.itemcode}</td>\r\n            <td>{row.count}</td>\r\n            <td>{getDate(row.updated_at)}</td>\r\n            <td>\r\n              <ActionButton value=\"Update\" class={classes.view} name=\"cil-align-center\" />\r\n              <ToolTip value=\"Update\">\r\n                <Icon\r\n                  class={classes.view}\r\n                  name=\"cil-align-center\"\r\n                  action={viewHandler.bind(null, row.id)}\r\n                />\r\n              </ToolTip>\r\n              |\r\n              <ToolTip value=\"Delete\">\r\n                <Icon\r\n                  class={classes.delete}\r\n                  name=\"cil-trash\"\r\n                  action={deleteHandler.bind(null, row.id)}\r\n                />\r\n              </ToolTip>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default CTableBody;\r\n"]},"metadata":{},"sourceType":"module"}