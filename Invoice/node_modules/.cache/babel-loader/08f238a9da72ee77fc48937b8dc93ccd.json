{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { getApi } from \"src/service/appService\";\nimport { getUrl } from \"src/service/customService\";\nimport { shopStoreAction } from \"./store\";\nvar initialState = {\n  shop: {\n    product: [],\n    isDataReceived: false,\n    reRunComponent: true,\n    param: \"\"\n  }\n};\nvar shopSlice = createSlice({\n  name: \"shop\",\n  initialState: initialState,\n  reducers: _defineProperty({\n    sendRequest: function sendRequest(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: false\n      });\n    },\n    getStoreProduct: function getStoreProduct(state, action) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        product: action.payload.data,\n        param: \"\"\n      });\n    },\n    getResponse: function getResponse(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: true\n      });\n    }\n  }, \"getResponse\", function getResponse(state) {\n    state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n      isDataReceived: true\n    });\n  })\n});\nexport default shopSlice;\nexport var getStoreProductData = function getStoreProductData(param) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var url, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(shopStoreAction.sendRequest());\n              _context.prev = 1;\n              url = getUrl(\"store/get-products\", param);\n              _context.next = 5;\n              return getApi(url);\n\n            case 5:\n              response = _context.sent;\n              dispatch(shopStoreAction.getStoreProduct({\n                data: response.data.data\n              }));\n              dispatch(shopStoreAction.getResponse());\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0.response);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/shop-slice.js"],"names":["createSlice","getApi","getUrl","shopStoreAction","initialState","shop","product","isDataReceived","reRunComponent","param","shopSlice","name","reducers","sendRequest","state","getStoreProduct","action","payload","data","getResponse","getStoreProductData","dispatch","url","response","console","log"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,cAAc,EAAE,KAFZ;AAGJC,IAAAA,cAAc,EAAE,IAHZ;AAIJC,IAAAA,KAAK,EAAE;AAJH;AADa,CAArB;AASA,IAAMC,SAAS,GAAGV,WAAW,CAAC;AAC5BW,EAAAA,IAAI,EAAE,MADsB;AAE5BP,EAAAA,YAAY,EAAZA,YAF4B;AAG5BQ,EAAAA,QAAQ;AACNC,IAAAA,WADM,uBACMC,KADN,EACa;AACjBA,MAAAA,KAAK,CAACT,IAAN,mCACKS,KAAK,CAACT,IADX;AAEEE,QAAAA,cAAc,EAAE;AAFlB;AAID,KANK;AAONQ,IAAAA,eAPM,2BAOUD,KAPV,EAOiBE,MAPjB,EAOyB;AAC7BF,MAAAA,KAAK,CAACT,IAAN,mCACKS,KAAK,CAACT,IADX;AAEEC,QAAAA,OAAO,EAAEU,MAAM,CAACC,OAAP,CAAeC,IAF1B;AAGET,QAAAA,KAAK,EAAE;AAHT;AAKD,KAbK;AAcNU,IAAAA,WAdM,uBAcML,KAdN,EAca;AACjBA,MAAAA,KAAK,CAACT,IAAN,mCACKS,KAAK,CAACT,IADX;AAEEE,QAAAA,cAAc,EAAE;AAFlB;AAID;AAnBK,yCAoBMO,KApBN,EAoBa;AACfA,IAAAA,KAAK,CAACT,IAAN,mCACKS,KAAK,CAACT,IADX;AAEEE,MAAAA,cAAc,EAAE;AAFlB;AAID,GAzBG;AAHoB,CAAD,CAA7B;AA+BA,eAAeG,SAAf;AAEA,OAAO,IAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,KAAD,EAAW;AAC5C;AAAA,wEAAO,iBAAOY,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAAClB,eAAe,CAACU,WAAhB,EAAD,CAAR;AADK;AAGGS,cAAAA,GAHH,GAGSpB,MAAM,uBAAuBO,KAAvB,CAHf;AAAA;AAAA,qBAIoBR,MAAM,CAACqB,GAAD,CAJ1B;;AAAA;AAIGC,cAAAA,QAJH;AAKHF,cAAAA,QAAQ,CACNlB,eAAe,CAACY,eAAhB,CAAgC;AAC9BG,gBAAAA,IAAI,EAAEK,QAAQ,CAACL,IAAT,CAAcA;AADU,eAAhC,CADM,CAAR;AAKAG,cAAAA,QAAQ,CAAClB,eAAe,CAACgB,WAAhB,EAAD,CAAR;AAVG;AAAA;;AAAA;AAAA;AAAA;AAYHK,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAMF,QAAlB;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAeD,CAhBM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getApi } from \"src/service/appService\";\r\nimport { getUrl } from \"src/service/customService\";\r\nimport { shopStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  shop: {\r\n    product: [],\r\n    isDataReceived: false,\r\n    reRunComponent: true,\r\n    param: \"\",\r\n  },\r\n};\r\n\r\nconst shopSlice = createSlice({\r\n  name: \"shop\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: false,\r\n      };\r\n    },\r\n    getStoreProduct(state, action) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        product: action.payload.data,\r\n        param: \"\",\r\n      };\r\n    },\r\n    getResponse(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: true,\r\n      };\r\n    },\r\n    getResponse(state) {\r\n        state.shop = {\r\n          ...state.shop,\r\n          isDataReceived: true,\r\n        };\r\n      },\r\n  },\r\n});\r\nexport default shopSlice;\r\n\r\nexport const getStoreProductData = (param) => {\r\n  return async (dispatch) => {\r\n    dispatch(shopStoreAction.sendRequest());\r\n    try {\r\n      const url = getUrl(`store/get-products`, param);\r\n      const response = await getApi(url);\r\n      dispatch(\r\n        shopStoreAction.getStoreProduct({\r\n          data: response.data.data,\r\n        })\r\n      );\r\n      dispatch(shopStoreAction.getResponse());\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}