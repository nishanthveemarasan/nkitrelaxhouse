{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { productStoreAction } from \"./store\";\nvar initialState = {\n  isDataChanged: false,\n  productData: []\n};\nvar productSlice = createSlice({\n  name: \"products\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataChanged = true;\n      state.productData = action.payload.data;\n    }\n  }\n});\nexport default productSlice;\nexport var getProductData = function getProductData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"get-all-chairs\";\n\n    if (param) {\n      url = \"get-all-chairs?\".concat(param);\n    }\n\n    alert(url);\n    API.get(\"get-all-chairs\").then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(productStoreAction.getData({\n          data: response.data.data\n        }));\n      }\n    }).catch();\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/product-slice.js"],"names":["createSlice","API","productStoreAction","initialState","isDataChanged","productData","productSlice","name","reducers","getData","state","action","payload","data","getProductData","param","dispatch","url","alert","get","then","response","http_status","catch"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,kBAAT,QAAmC,SAAnC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,IAAMC,YAAY,GAAGN,WAAW,CAAC;AAC/BO,EAAAA,IAAI,EAAE,UADyB;AAE/BJ,EAAAA,YAAY,EAAZA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACN,aAAN,GAAsB,IAAtB;AACAM,MAAAA,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAAP,CAAeC,IAAnC;AACD;AAJO;AAHqB,CAAD,CAAhC;AAUA,eAAeP,YAAf;AAEA,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAC5C,SAAO,UAACC,QAAD,EAAc;AACnB,QAAIC,GAAG,GAAG,gBAAV;;AACA,QAAIF,KAAJ,EAAW;AACTE,MAAAA,GAAG,4BAAqBF,KAArB,CAAH;AACD;;AACDG,IAAAA,KAAK,CAACD,GAAD,CAAL;AACAhB,IAAAA,GAAG,CAACkB,GAAJ,CAAQ,gBAAR,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACR,IAAT,CAAcS,WAAd,KAA8B,GAAlC,EAAuC;AACrCN,QAAAA,QAAQ,CAACd,kBAAkB,CAACO,OAAnB,CAA2B;AAAEI,UAAAA,IAAI,EAAEQ,QAAQ,CAACR,IAAT,CAAcA;AAAtB,SAA3B,CAAD,CAAR;AACD;AACF,KALH,EAMGU,KANH;AAOD,GAbD;AAcD,CAfM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { productStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  productData: [],\r\n};\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.productData = action.payload.data;\r\n    },\r\n  },\r\n});\r\nexport default productSlice;\r\n\r\nexport const getProductData = (param = \"\") => {\r\n  return (dispatch) => {\r\n    let url = \"get-all-chairs\";\r\n    if (param) {\r\n      url = `get-all-chairs?${param}`;\r\n    }\r\n    alert(url);\r\n    API.get(\"get-all-chairs\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(productStoreAction.getData({ data: response.data.data }));\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}