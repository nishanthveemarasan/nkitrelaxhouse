{"ast":null,"code":"import _objectSpread from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createSlice}from\"@reduxjs/toolkit\";import API from\"src/axios/axios\";import{sendPostApi}from\"src/service/appService\";import{registerStoreAction}from\"./store\";var initialState={isLoading:false,message:{msg:[],color:\"\",status:false,isRegistered:false}};var registerSlice=createSlice({name:\"register\",initialState:initialState,reducers:{sendRequest:function sendRequest(state){state.isLoading=true;},getResponse:function getResponse(state,action){state.isLoading=false;state.message=_objectSpread(_objectSpread({},state.message),{},{msg:action.payload.data,status:action.payload.status,color:action.payload.color,isRegistered:true});}}});export default registerSlice;export var registerData=function registerData(data){return function(dispatch){dispatch(registerStoreAction.sendRequest());sendPostApi(\"users/create\",data).then(function(response){var array=[response.data.data.msg];dispatch(registerStoreAction.getResponse({data:array,status:true,color:\"success\"}));}).catch(function(error){var array=[];for(var key in error.response.data.error){array.push(error.response.data.error[key][0]);}dispatch(registerStoreAction.getResponse({data:array,status:false,color:\"danger\"}));});};};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/register-slice.js"],"names":["createSlice","API","sendPostApi","registerStoreAction","initialState","isLoading","message","msg","color","status","isRegistered","registerSlice","name","reducers","sendRequest","state","getResponse","action","payload","data","registerData","dispatch","then","response","array","catch","error","key","push"],"mappings":"gKAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,mBAAT,KAAoC,SAApC,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,KADQ,CAEnBC,OAAO,CAAE,CACPC,GAAG,CAAE,EADE,CAEPC,KAAK,CAAE,EAFA,CAGPC,MAAM,CAAE,KAHD,CAIPC,YAAY,CAAE,KAJP,CAFU,CAArB,CAUA,GAAMC,CAAAA,aAAa,CAAGX,WAAW,CAAC,CAChCY,IAAI,CAAE,UAD0B,CAEhCR,YAAY,CAAZA,YAFgC,CAGhCS,QAAQ,CAAE,CACRC,WADQ,sBACIC,KADJ,CACW,CACjBA,KAAK,CAACV,SAAN,CAAkB,IAAlB,CACD,CAHO,CAIRW,WAJQ,sBAIID,KAJJ,CAIWE,MAJX,CAImB,CACzBF,KAAK,CAACV,SAAN,CAAkB,KAAlB,CACAU,KAAK,CAACT,OAAN,gCACKS,KAAK,CAACT,OADX,MAEEC,GAAG,CAAEU,MAAM,CAACC,OAAP,CAAeC,IAFtB,CAGEV,MAAM,CAAEQ,MAAM,CAACC,OAAP,CAAeT,MAHzB,CAIED,KAAK,CAAES,MAAM,CAACC,OAAP,CAAeV,KAJxB,CAKEE,YAAY,CAAE,IALhB,GAOD,CAbO,CAHsB,CAAD,CAAjC,CAmBA,cAAeC,CAAAA,aAAf,CAEA,MAAO,IAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,IAAD,CAAU,CACpC,MAAO,UAACE,QAAD,CAAc,CACnBA,QAAQ,CAAClB,mBAAmB,CAACW,WAApB,EAAD,CAAR,CACAZ,WAAW,CAAC,cAAD,CAAiBiB,IAAjB,CAAX,CACGG,IADH,CACQ,SAACC,QAAD,CAAc,CAClB,GAAMC,CAAAA,KAAK,CAAG,CAACD,QAAQ,CAACJ,IAAT,CAAcA,IAAd,CAAmBZ,GAApB,CAAd,CACAc,QAAQ,CACNlB,mBAAmB,CAACa,WAApB,CAAgC,CAC9BG,IAAI,CAAEK,KADwB,CAE9Bf,MAAM,CAAE,IAFsB,CAG9BD,KAAK,CAAE,SAHuB,CAAhC,CADM,CAAR,CAOD,CAVH,EAWGiB,KAXH,CAWS,SAACC,KAAD,CAAW,CAChB,GAAIF,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIG,CAAAA,GAAT,GAAgBD,CAAAA,KAAK,CAACH,QAAN,CAAeJ,IAAf,CAAoBO,KAApC,CAA2C,CACzCF,KAAK,CAACI,IAAN,CAAWF,KAAK,CAACH,QAAN,CAAeJ,IAAf,CAAoBO,KAApB,CAA0BC,GAA1B,EAA+B,CAA/B,CAAX,EACD,CACDN,QAAQ,CACNlB,mBAAmB,CAACa,WAApB,CAAgC,CAC9BG,IAAI,CAAEK,KADwB,CAE9Bf,MAAM,CAAE,KAFsB,CAG9BD,KAAK,CAAE,QAHuB,CAAhC,CADM,CAAR,CAOD,CAvBH,EAwBD,CA1BD,CA2BD,CA5BM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { sendPostApi } from \"src/service/appService\";\r\nimport { registerStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  message: {\r\n    msg: [],\r\n    color: \"\",\r\n    status: false,\r\n    isRegistered: false,\r\n  },\r\n};\r\n\r\nconst registerSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.isLoading = true;\r\n    },\r\n    getResponse(state, action) {\r\n      state.isLoading = false;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: action.payload.data,\r\n        status: action.payload.status,\r\n        color: action.payload.color,\r\n        isRegistered: true,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default registerSlice;\r\n\r\nexport const registerData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(registerStoreAction.sendRequest());\r\n    sendPostApi(\"users/create\", data)\r\n      .then((response) => {\r\n        const array = [response.data.data.msg];\r\n        dispatch(\r\n          registerStoreAction.getResponse({\r\n            data: array,\r\n            status: true,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        let array = [];\r\n        for (let key in error.response.data.error) {\r\n          array.push(error.response.data.error[key][0]);\r\n        }\r\n        dispatch(\r\n          registerStoreAction.getResponse({\r\n            data: array,\r\n            status: false,\r\n            color: \"danger\",\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}