{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { dashboardStoreAction } from \"./store\";\nvar initialState = {\n  isDataChanged: false,\n  widget: [{\n    users: \"0\"\n  }, {\n    posts: \"0\"\n  }, {\n    comments: \"0\"\n  }, {\n    product: \"0\"\n  }],\n  topOrders: [],\n  recentOrders: []\n};\nvar dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState: initialState,\n  reducers: {\n    getWidgetData: function getWidgetData(state, action) {\n      state.isDataChanged = true;\n      state.widget = [{\n        users: action.payload.users.toString()\n      }, {\n        posts: action.payload.posts.toString()\n      }, {\n        comments: action.payload.comments.toString()\n      }, {\n        product: action.payload.totalProducts.toString()\n      }];\n      state.topOrders = action.payload.topOrders;\n      state.recentOrders;\n    }\n  }\n});\nexport default dashboardSlice;\nexport var getWidgetData = function getWidgetData() {\n  return function (dispatch) {\n    API.get(\"get-dashboard-data\").then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(dashboardStoreAction.getWidgetData(response.data.data));\n      }\n\n      console.log(response.data.data);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/dashboard-slice.js"],"names":["createSlice","API","dashboardStoreAction","initialState","isDataChanged","widget","users","posts","comments","product","topOrders","recentOrders","dashboardSlice","name","reducers","getWidgetData","state","action","payload","toString","totalProducts","dispatch","get","then","response","data","http_status","console","log","catch","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAiB;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAjB,EAAiC;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAjC,EAAoD;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAApD,CAFW;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAArB;AAOA,IAAMC,cAAc,GAAGZ,WAAW,CAAC;AACjCa,EAAAA,IAAI,EAAE,WAD2B;AAEjCV,EAAAA,YAAY,EAAZA,YAFiC;AAGjCW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aADQ,yBACMC,KADN,EACaC,MADb,EACqB;AAC3BD,MAAAA,KAAK,CAACZ,aAAN,GAAsB,IAAtB;AACAY,MAAAA,KAAK,CAACX,MAAN,GAAe,CACb;AAAEC,QAAAA,KAAK,EAAEW,MAAM,CAACC,OAAP,CAAeZ,KAAf,CAAqBa,QAArB;AAAT,OADa,EAEb;AAAEZ,QAAAA,KAAK,EAAEU,MAAM,CAACC,OAAP,CAAeX,KAAf,CAAqBY,QAArB;AAAT,OAFa,EAGb;AAAEX,QAAAA,QAAQ,EAAES,MAAM,CAACC,OAAP,CAAeV,QAAf,CAAwBW,QAAxB;AAAZ,OAHa,EAIb;AAAEV,QAAAA,OAAO,EAAEQ,MAAM,CAACC,OAAP,CAAeE,aAAf,CAA6BD,QAA7B;AAAX,OAJa,CAAf;AAMAH,MAAAA,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAP,CAAeR,SAAjC;AACAM,MAAAA,KAAK,CAACL,YAAN;AACD;AAXO;AAHuB,CAAD,CAAlC;AAkBA,eAAeC,cAAf;AAEA,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,UAACM,QAAD,EAAc;AACnBpB,IAAAA,GAAG,CAACqB,GAAJ,CAAQ,oBAAR,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAd,KAA8B,GAAlC,EAAuC;AACrCL,QAAAA,QAAQ,CAACnB,oBAAoB,CAACa,aAArB,CAAmCS,QAAQ,CAACC,IAAT,CAAcA,IAAjD,CAAD,CAAR;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcA,IAA1B;AACD,KANH,EAOGI,KAPH,CAOS,UAACC,KAAD;AAAA,aAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAX;AAAA,KAPT;AAQD,GATD;AAUD,CAXM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { dashboardStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  widget: [{ users: \"0\" }, { posts: \"0\" }, { comments: \"0\" }, { product: \"0\" }],\r\n  topOrders: [],\r\n  recentOrders: [],\r\n};\r\n\r\nconst dashboardSlice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState,\r\n  reducers: {\r\n    getWidgetData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.widget = [\r\n        { users: action.payload.users.toString() },\r\n        { posts: action.payload.posts.toString() },\r\n        { comments: action.payload.comments.toString() },\r\n        { product: action.payload.totalProducts.toString() },\r\n      ];\r\n      state.topOrders = action.payload.topOrders;\r\n      state.recentOrders\r\n    },\r\n  },\r\n});\r\n\r\nexport default dashboardSlice;\r\n\r\nexport const getWidgetData = () => {\r\n  return (dispatch) => {\r\n    API.get(\"get-dashboard-data\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(dashboardStoreAction.getWidgetData(response.data.data));\r\n        }\r\n        console.log(response.data.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}