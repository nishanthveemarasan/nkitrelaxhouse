{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Users\\\\AllUsers\\\\AllUsers.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport CTable from \"src/Components/UI/Table/CTable\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport { userStoreAction } from \"src/store/store\";\nimport { getUserData } from \"src/store/user-slice\";\nimport UserEditModal from \"../Modal/UserEditModal\";\nimport UserTableBody from \"./UserTableBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AllUsers = function AllUsers() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isUserDataLoaded: state.userStore.isUserDataLoaded,\n      userData: state.userStore.userData,\n      reRunComponent: state.userStore.reRunComponent\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRunComponent.isDataChanged) {\n      var data = {\n        param: state.reRunComponent.queryParam\n      };\n      dispatch(getUserData(data));\n    }\n  }, [state.reRunComponent.isDataChanged, state.reRunComponent.queryParam, dispatch]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    if (url) {\n      var param = url.split(\"?\")[1];\n      dispatch(userStoreAction.updateParam({\n        param: param\n      }));\n      var data = {\n        param: param\n      };\n      dispatch(getUserData(param));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserEditModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this), !state.isUserDataLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, _this), state.isUserDataLoaded && /*#__PURE__*/_jsxDEV(CTable, {\n      header: [\"#\", \"First Name\", \"Email\", \"Job Title\", \"Phone Number\", \"Role\", \"Posts\", \"Comments\", \"Status\", \"Action\"],\n      children: /*#__PURE__*/_jsxDEV(UserTableBody, {\n        body: state.userData.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, _this), state.isUserDataLoaded && /*#__PURE__*/_jsxDEV(Pagination, {\n      body: state.userData,\n      change: pageChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AllUsers, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AllUsers;\nexport default AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Users/AllUsers/AllUsers.js"],"names":["useEffect","useSelector","useDispatch","Loader","CTable","Pagination","userStoreAction","getUserData","UserEditModal","UserTableBody","AllUsers","mapStateToProps","state","isUserDataLoaded","userStore","userData","reRunComponent","dispatch","isDataChanged","data","param","queryParam","pageChangeHandler","url","split","updateParam"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,gBAAgB,EAAED,KAAK,CAACE,SAAN,CAAgBD,gBAD7B;AAELE,MAAAA,QAAQ,EAAEH,KAAK,CAACE,SAAN,CAAgBC,QAFrB;AAGLC,MAAAA,cAAc,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AAH3B,KAAP;AAKD,GAND;;AAOA,MAAMJ,KAAK,GAAGX,WAAW,CAACU,eAAD,CAAzB;AAEA,MAAMM,QAAQ,GAAGf,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,KAAK,CAACI,cAAN,CAAqBE,aAAzB,EAAwC;AACtC,UAAMC,IAAI,GAAG;AACXC,QAAAA,KAAK,EAAER,KAAK,CAACI,cAAN,CAAqBK;AADjB,OAAb;AAGAJ,MAAAA,QAAQ,CAACV,WAAW,CAACY,IAAD,CAAZ,CAAR;AACD;AACF,GAPQ,EAON,CACDP,KAAK,CAACI,cAAN,CAAqBE,aADpB,EAEDN,KAAK,CAACI,cAAN,CAAqBK,UAFpB,EAGDJ,QAHC,CAPM,CAAT;;AAYA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AACjC,QAAIA,GAAJ,EAAS;AACP,UAAMH,KAAK,GAAGG,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAd;AACAP,MAAAA,QAAQ,CAACX,eAAe,CAACmB,WAAhB,CAA4B;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAA5B,CAAD,CAAR;AACA,UAAMD,IAAI,GAAG;AACXC,QAAAA,KAAK,EAALA;AADW,OAAb;AAGAH,MAAAA,QAAQ,CAACV,WAAW,CAACa,KAAD,CAAZ,CAAR;AACD;AACF,GATD;;AAUA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aADF,EAEG,CAACR,KAAK,CAACC,gBAAP,iBAA2B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAF9B,EAGGD,KAAK,CAACC,gBAAN,iBACC,QAAC,MAAD;AACE,MAAA,MAAM,EAAE,CACN,GADM,EAEN,YAFM,EAGN,OAHM,EAIN,WAJM,EAKN,cALM,EAMN,MANM,EAON,OAPM,EAQN,UARM,EAUN,QAVM,EAWN,QAXM,CADV;AAAA,6BAeE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAED,KAAK,CAACG,QAAN,CAAeI;AAApC;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,aAJJ,EAsBGP,KAAK,CAACC,gBAAN,iBACC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,KAAK,CAACG,QAAxB;AAAkC,MAAA,MAAM,EAAEO;AAA1C;AAAA;AAAA;AAAA;AAAA,aAvBJ;AAAA,kBADF;AA4BD,CA7DD;;GAAMZ,Q;UAQUT,W,EAEGC,W;;;KAVbQ,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport CTable from \"src/Components/UI/Table/CTable\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { userStoreAction } from \"src/store/store\";\r\nimport { getUserData } from \"src/store/user-slice\";\r\nimport UserEditModal from \"../Modal/UserEditModal\";\r\nimport UserTableBody from \"./UserTableBody\";\r\nconst AllUsers = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isUserDataLoaded: state.userStore.isUserDataLoaded,\r\n      userData: state.userStore.userData,\r\n      reRunComponent: state.userStore.reRunComponent,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunComponent.isDataChanged) {\r\n      const data = {\r\n        param: state.reRunComponent.queryParam,\r\n      };\r\n      dispatch(getUserData(data));\r\n    }\r\n  }, [\r\n    state.reRunComponent.isDataChanged,\r\n    state.reRunComponent.queryParam,\r\n    dispatch,\r\n  ]);\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const param = url.split(\"?\")[1];\r\n      dispatch(userStoreAction.updateParam({ param }));\r\n      const data = {\r\n        param,\r\n      };\r\n      dispatch(getUserData(param));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <UserEditModal />\r\n      {!state.isUserDataLoaded && <Loader />}\r\n      {state.isUserDataLoaded && (\r\n        <CTable\r\n          header={[\r\n            \"#\",\r\n            \"First Name\",\r\n            \"Email\",\r\n            \"Job Title\",\r\n            \"Phone Number\",\r\n            \"Role\",\r\n            \"Posts\",\r\n            \"Comments\",\r\n            \r\n            \"Status\",\r\n            \"Action\",\r\n          ]}\r\n        >\r\n          <UserTableBody body={state.userData.data} />\r\n        </CTable>\r\n      )}\r\n      {state.isUserDataLoaded && (\r\n        <Pagination body={state.userData} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AllUsers;\r\n"]},"metadata":{},"sourceType":"module"}