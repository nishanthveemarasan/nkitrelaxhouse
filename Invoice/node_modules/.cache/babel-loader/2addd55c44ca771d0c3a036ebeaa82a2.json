{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Store\\\\Order\\\\StoreOrder.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getStoreOrderData } from \"src/store/shop-slice\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport CTable from \"src/Components/Table/CTable\";\nimport OTableBody from \"./Table/OTableBody\";\nimport { shopStoreAction } from \"src/store/store\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar StoreOrder = function StoreOrder() {\n  _s();\n\n  var history = useHistory();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      orderData: state.shopStore.order,\n      reRunComponent: state.shopStore.reRunComponent.isDataChanged\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRunComponent) {\n      dispatch(getStoreOrderData(state.orderData.param, state.orderData.status, state.orderData.method));\n    }\n  }, [state.reRunComponent, dispatch]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    if (url) {\n      var param = url.split(\"?\")[1];\n      dispatch(shopStoreAction.updateOrderParam({\n        param: param\n      }));\n      dispatch(getStoreOrderData(param, state.orderData.status, state.orderData.method));\n    }\n  };\n\n  var onEditOrderHandler = function onEditOrderHandler(id) {\n    var data = state.orderData.data.data[id];\n    dispatch(shopStoreAction.getSingleOrder({\n      data: data\n    }));\n    history.push(\"/admin/store/order-edit\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!state.orderData.isDataReceived && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 43\n    }, _this), state.orderData.isDataReceived && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-whi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(CTable, {\n        header: [\"#\", \"order_id\", \"Customer\", \"Total Amount\", \"Payment Status\", \"Pay Method\", \"Order Date\", \"Action\"],\n        children: /*#__PURE__*/_jsxDEV(OTableBody, {\n          body: state.orderData.data.data,\n          action: onEditOrderHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true), state.orderData.isDataReceived && /*#__PURE__*/_jsxDEV(Pagination, {\n      body: state.orderData.data,\n      change: pageChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(StoreOrder, \"0JvedhByRcoPaIo0Fl0rFKpjv8k=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c = StoreOrder;\nexport default StoreOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreOrder\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Store/Order/StoreOrder.js"],"names":["useSelector","useDispatch","useEffect","getStoreOrderData","Loader","CTable","OTableBody","shopStoreAction","Pagination","useHistory","StoreOrder","history","mapStateToProps","state","orderData","shopStore","order","reRunComponent","isDataChanged","dispatch","param","status","method","pageChangeHandler","url","split","updateOrderParam","onEditOrderHandler","id","data","getSingleOrder","push","isDataReceived"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getStoreOrderData } from \"src/store/shop-slice\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport CTable from \"src/Components/Table/CTable\";\r\nimport OTableBody from \"./Table/OTableBody\";\r\nimport { shopStoreAction } from \"src/store/store\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { useHistory } from \"react-router\";\r\nconst StoreOrder = () => {\r\n  const history = useHistory();\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      orderData: state.shopStore.order,\r\n      reRunComponent: state.shopStore.reRunComponent.isDataChanged,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunComponent) {\r\n      dispatch(\r\n        getStoreOrderData(\r\n          state.orderData.param,\r\n          state.orderData.status,\r\n          state.orderData.method\r\n        )\r\n      );\r\n    }\r\n  }, [state.reRunComponent, dispatch]);\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const param = url.split(\"?\")[1];\r\n      dispatch(shopStoreAction.updateOrderParam({ param }));\r\n      dispatch(\r\n        getStoreOrderData(param, state.orderData.status, state.orderData.method)\r\n      );\r\n    }\r\n  };\r\n  const onEditOrderHandler = (id) => {\r\n    const data = state.orderData.data.data[id];\r\n    dispatch(shopStoreAction.getSingleOrder({ data }));\r\n    history.push(\"/admin/store/order-edit\");\r\n  };\r\n  return (\r\n    <>\r\n      {!state.orderData.isDataReceived && <Loader />}\r\n      {state.orderData.isDataReceived && (\r\n        <>\r\n          <div className=\"bg-whi\"></div>\r\n          <CTable\r\n            header={[\r\n              \"#\",\r\n              \"order_id\",\r\n              \"Customer\",\r\n              \"Total Amount\",\r\n              \"Payment Status\",\r\n              \"Pay Method\",\r\n              \"Order Date\",\r\n              \"Action\",\r\n            ]}\r\n          >\r\n            <OTableBody\r\n              body={state.orderData.data.data}\r\n              action={onEditOrderHandler}\r\n            />\r\n          </CTable>\r\n        </>\r\n      )}\r\n      {state.orderData.isDataReceived && (\r\n        <Pagination body={state.orderData.data} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default StoreOrder;\r\n"]},"metadata":{},"sourceType":"module"}