{"ast":null,"code":"import _objectSpread from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createSlice}from\"@reduxjs/toolkit\";import{sendGetAdminApi,sendPostApi}from\"src/service/appService\";import{loginStoreAction}from\"./store\";var initialState={isLoading:false,loggedInData:{userName:\"\",name:\"\",token:null,role_id:0,isDataReceived:false},message:{msg:\"\",color:\"\",isLoggedIn:false},admin:false};var loginSlice=createSlice({name:\"login\",initialState:initialState,reducers:{logout:function logout(state){state.loggedInData={userName:\"\",name:\"\",token:null,role_id:0};state.message={msg:\"\",color:\"\",isLoggedIn:false};},sendLoginRequest:function sendLoginRequest(state){state.isLoading=true;state.message=_objectSpread(_objectSpread({},state.message),{},{msg:\"Authenticating......\",color:\"success\",isLoggedIn:true});},getLoginErrorResponse:function getLoginErrorResponse(state,action){state.isLoading=false;state.message=_objectSpread(_objectSpread({},state.message),{},{msg:action.payload.msg,color:action.payload.color,isLoggedIn:true});},getLoginSuccessResponse:function getLoginSuccessResponse(state,action){state.isLoading=false;state.message=_objectSpread(_objectSpread({},state.message),{},{msg:action.payload.msg,color:action.payload.color,isLoggedIn:true});state.loggedInData=_objectSpread(_objectSpread({},state.loggedInData),{},{name:action.payload.name});},updateToken:function updateToken(state,action){state.loggedInData=_objectSpread(_objectSpread({},state.loggedInData),{},{token:action.payload.token});},checkUserLoggedIn:function checkUserLoggedIn(state,action){state.loggedInData=_objectSpread(_objectSpread({},state.loggedInData),{},{name:action.payload.name,role_id:action.payload.role_id,isDataReceived:true});console.log(state.loggedInData);}}});export default loginSlice;export var LoginRequest=function LoginRequest(data,history){return function(dispatch){dispatch(loginStoreAction.sendLoginRequest());sendPostApi(\"user/login\",data).then(function(response){localStorage.setItem(\"token\",response.data.data.token);dispatch(loginStoreAction.getLoginSuccessResponse({msg:\"Authentication Successfull:Rediracting to Admin Panel!!\",color:\"success\",name:response.data.data.name}));setTimeout(function(){dispatch(loginStoreAction.updateToken({token:response.data.data.token}));history.replace(\"/admin\");},2000);}).catch(function(error){dispatch(loginStoreAction.getLoginErrorResponse({msg:error.response.data.error,color:\"danger\"}));});};};export var logout=function logout(){return function(dispatch){localStorage.removeItem(\"token\");dispatch(loginStoreAction.logout());};};export var checkUser=function checkUser(history){return function(dispatch){sendGetAdminApi(\"users/get-a-user\").then(function(response){dispatch(loginStoreAction.checkUserLoggedIn({name:response.data.data.name,role_id:response.data.data.roles}));}).catch(function(error){history.push(\"/\");});};};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/login-store.js"],"names":["createSlice","sendGetAdminApi","sendPostApi","loginStoreAction","initialState","isLoading","loggedInData","userName","name","token","role_id","isDataReceived","message","msg","color","isLoggedIn","admin","loginSlice","reducers","logout","state","sendLoginRequest","getLoginErrorResponse","action","payload","getLoginSuccessResponse","updateToken","checkUserLoggedIn","console","log","LoginRequest","data","history","dispatch","then","response","localStorage","setItem","setTimeout","replace","catch","error","removeItem","checkUser","roles","push"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { sendGetAdminApi, sendPostApi } from \"src/service/appService\";\r\nimport { loginStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  loggedInData: {\r\n    userName: \"\",\r\n    name: \"\",\r\n    token: null,\r\n    role_id: 0,\r\n    isDataReceived: false,\r\n  },\r\n  message: {\r\n    msg: \"\",\r\n    color: \"\",\r\n    isLoggedIn: false,\r\n  },\r\n  admin: false,\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    logout(state) {\r\n      state.loggedInData = {\r\n        userName: \"\",\r\n        name: \"\",\r\n        token: null,\r\n        role_id: 0,\r\n      };\r\n      state.message = {\r\n        msg: \"\",\r\n        color: \"\",\r\n        isLoggedIn: false,\r\n      };\r\n    },\r\n    sendLoginRequest(state) {\r\n      state.isLoading = true;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: \"Authenticating......\",\r\n        color: \"success\",\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n\r\n    getLoginErrorResponse(state, action) {\r\n      state.isLoading = false;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n        isLoggedIn: true,\r\n      };\r\n    },\r\n    getLoginSuccessResponse(state, action) {\r\n      state.isLoading = false;\r\n      state.message = {\r\n        ...state.message,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n        isLoggedIn: true,\r\n      };\r\n      state.loggedInData = {\r\n        ...state.loggedInData,\r\n        name: action.payload.name,\r\n      };\r\n    },\r\n    updateToken(state, action) {\r\n      state.loggedInData = {\r\n        ...state.loggedInData,\r\n        token: action.payload.token,\r\n      };\r\n    },\r\n    checkUserLoggedIn(state, action) {\r\n      state.loggedInData = {\r\n        ...state.loggedInData,\r\n        name: action.payload.name,\r\n        role_id: action.payload.role_id,\r\n        isDataReceived: true,\r\n      };\r\n      console.log(state.loggedInData);\r\n    },\r\n  },\r\n});\r\nexport default loginSlice;\r\n\r\nexport const LoginRequest = (data, history) => {\r\n  return (dispatch) => {\r\n    dispatch(loginStoreAction.sendLoginRequest());\r\n\r\n    sendPostApi(\"user/login\", data)\r\n      .then((response) => {\r\n        localStorage.setItem(\"token\", response.data.data.token);\r\n        dispatch(\r\n          loginStoreAction.getLoginSuccessResponse({\r\n            msg: \"Authentication Successfull:Rediracting to Admin Panel!!\",\r\n            color: \"success\",\r\n            name: response.data.data.name,\r\n          })\r\n        );\r\n        setTimeout(() => {\r\n          dispatch(\r\n            loginStoreAction.updateToken({\r\n              token: response.data.data.token,\r\n            })\r\n          );\r\n          history.replace(\"/admin\");\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          loginStoreAction.getLoginErrorResponse({\r\n            msg: error.response.data.error,\r\n            color: \"danger\",\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch(loginStoreAction.logout());\r\n  };\r\n};\r\n\r\nexport const checkUser = (history) => {\r\n  return (dispatch) => {\r\n    sendGetAdminApi(\"users/get-a-user\")\r\n      .then((response) => {\r\n        dispatch(\r\n          loginStoreAction.checkUserLoggedIn({\r\n            name: response.data.data.name,\r\n            role_id: response.data.data.roles,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}