{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\CTableBody.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDate } from \"src/custom-functions\";\nimport classes from \"./Product.module.css\";\nimport { productStoreAction } from \"src/store/store\";\nimport { getModalData } from \"src/store/product-slice\";\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\nimport CSpinner from \"src/Components/UI/Spinner/CSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar CTableBody = function CTableBody(props) {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      initialLoad: state.productStore.initialLoad\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var viewHandler = function viewHandler(id) {\n    var data = {\n      id: id,\n      action: \"Update\"\n    };\n    dispatch(getModalData(data));\n  };\n\n  var deleteHandler = function deleteHandler(id) {\n    var data = {\n      id: id,\n      action: \"Update\"\n    };\n    dispatch(productStoreAction.modalOpen(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.body.map(function (row, i) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.itemname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.itemcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getDate(row.updated_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [state.initialLoad.id === row.id && state.initialLoad.action === \"Update\" && (state.initialLoad.loading ? /*#__PURE__*/_jsxDEV(CSpinner, {\n            class: classes.view,\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, _this) : /*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Update\",\n            class: classes.view,\n            name: \"cil-align-center\",\n            action: viewHandler.bind(null, row.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, _this)), state.initialLoad.id !== row.id && /*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Update\",\n            class: classes.view,\n            name: \"cil-align-center\",\n            action: viewHandler.bind(null, row.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, _this), \"|\", /*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Delete\",\n            class: classes.delete,\n            name: \"cil-trash\",\n            action: deleteHandler.bind(null, row.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(CTableBody, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CTableBody;\nexport default CTableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CTableBody\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/CTableBody.js"],"names":["useSelector","useDispatch","getDate","classes","productStoreAction","getModalData","ActionButton","CSpinner","CTableBody","props","mapStateToProps","state","initialLoad","productStore","dispatch","viewHandler","id","data","action","deleteHandler","modalOpen","body","map","row","i","itemname","itemcode","count","updated_at","loading","view","bind","delete"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport classes from \"./Product.module.css\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nimport { getModalData } from \"src/store/product-slice\";\r\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\r\nimport CSpinner from \"src/Components/UI/Spinner/CSpinner\";\r\nconst CTableBody = (props) => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      initialLoad: state.productStore.initialLoad,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const viewHandler = (id) => {\r\n    const data = {\r\n      id,\r\n      action: \"Update\",\r\n    };\r\n    dispatch(getModalData(data));\r\n  };\r\n  const deleteHandler = (id) => {\r\n    const data = {\r\n      id,\r\n      action: \"Update\",\r\n    };\r\n    dispatch(productStoreAction.modalOpen(data));\r\n  };\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>{row.itemname}</td>\r\n            <td>{row.itemcode}</td>\r\n            <td>{row.count}</td>\r\n            <td>{getDate(row.updated_at)}</td>\r\n            <td>\r\n              {state.initialLoad.id === row.id &&\r\n                state.initialLoad.action === \"Update\" &&\r\n                (state.initialLoad.loading ? (\r\n                  <CSpinner class={classes.view} size=\"sm\" />\r\n                ) : (\r\n                  <ActionButton\r\n                    value=\"Update\"\r\n                    class={classes.view}\r\n                    name=\"cil-align-center\"\r\n                    action={viewHandler.bind(null, row.id)}\r\n                  />\r\n                ))}\r\n              {state.initialLoad.id !== row.id && (\r\n                <ActionButton\r\n                  value=\"Update\"\r\n                  class={classes.view}\r\n                  name=\"cil-align-center\"\r\n                  action={viewHandler.bind(null, row.id)}\r\n                />\r\n              )}\r\n              |\r\n              <ActionButton\r\n                value=\"Delete\"\r\n                class={classes.delete}\r\n                name=\"cil-trash\"\r\n                action={deleteHandler.bind(null, row.id)}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default CTableBody;\r\n"]},"metadata":{},"sourceType":"module"}