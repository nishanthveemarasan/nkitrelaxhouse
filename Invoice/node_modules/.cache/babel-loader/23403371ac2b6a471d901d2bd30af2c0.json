{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nvar initialState = {\n  isDataLoaded: false,\n  saleData: [],\n  reRunComponent: true\n};\nvar saleSlice = createSlice({\n  name: \"sale\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataLoaded = true;\n      saleData;\n    }\n  }\n});\nexport default saleSlice;\nexport var getSaleData = function getSaleData() {\n  return function (dispatch) {\n    API.get(\"order/get-order-data\").then(function (response) {\n      if (response.data.http_status === 200) {\n        console.log(response.data.data);\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/sale-slice.js"],"names":["createSlice","API","initialState","isDataLoaded","saleData","reRunComponent","saleSlice","name","reducers","getData","state","action","getSaleData","dispatch","get","then","response","data","http_status","console","log","catch","error","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,KADK;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAArB;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACPC,IAAAA,OADO,mBACCC,KADD,EACSC,MADT,EACgB;AACnBD,MAAAA,KAAK,CAACP,YAAN,GAAqB,IAArB;AACAC,MAAAA,QAAQ;AACX;AAJM;AAHkB,CAAD,CAA7B;AAUA,eAAeE,SAAf;AAEA,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B,SAAO,UAACC,QAAD,EAAc;AACnBZ,IAAAA,GAAG,CAACa,GAAJ,CAAQ,sBAAR,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAd,KAA8B,GAAlC,EAAuC;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcA,IAA1B;AACD;AACF,KALH,EAMGI,KANH,CAMS,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,OAAlB;AACD,KARH;AASD,GAVD;AAWD,CAZM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\n\r\nconst initialState = {\r\n  isDataLoaded: false,\r\n  saleData: [],\r\n  reRunComponent: true,\r\n};\r\n\r\nconst saleSlice = createSlice({\r\n  name: \"sale\",\r\n  initialState,\r\n  reducers: {\r\n     getData(state , action){\r\n         state.isDataLoaded = true;\r\n         saleData\r\n     }\r\n  },\r\n});\r\nexport default saleSlice;\r\n\r\nexport const getSaleData = () => {\r\n  return (dispatch) => {\r\n    API.get(\"order/get-order-data\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          console.log(response.data.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}