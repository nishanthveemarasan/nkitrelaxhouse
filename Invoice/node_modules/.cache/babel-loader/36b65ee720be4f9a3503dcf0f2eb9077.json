{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Store\\\\Store.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { CButtonToolbar, CCol, CRow } from \"@coreui/react\";\nimport { Form } from \"react-bootstrap\";\nimport CButton from \"src/Components/UI/Button/Button\";\nimport classes from \"./Store.module.css\";\nimport SFormSelect from \"./UI/FormSelect\";\nimport FormInput from \"./UI/FormInput\";\nimport { required } from \"./UI/validator/Validator\";\nimport { sendPostAdminApi, sendPostApi } from \"src/service/appService\";\nimport SAlert from \"./UI/Alert/Alert\";\nimport SButtonGroup from \"./UI/SButtonGroup/SButtonGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Store = function Store() {\n  _s();\n\n  var _useState = useState({\n    msg: \"\",\n    status: \"\",\n    show: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      alert = _useState2[0],\n      setAlert = _useState2[1];\n\n  var _useState3 = useState({\n    color: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      change = _useState4[0],\n      setChange = _useState4[1];\n\n  var _useState5 = useState({\n    color: {\n      value: \"\"\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formData = _useState6[0],\n      setFormData = _useState6[1];\n\n  var onInputChangeHandler = function onInputChangeHandler(event, input) {\n    var value;\n\n    if (input === \"color\") {\n      value = event.target.value;\n      console.log(value);\n      var array = change.color.slice();\n\n      if (!array.includes(value)) {\n        array.push(value);\n        setChange(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, input, array));\n        });\n      }\n\n      setFormData(function (prevState) {\n        var updateForm = _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, input, _objectSpread(_objectSpread({}, prevState[input]), {}, {\n          value: value,\n          colorArray: array\n        })));\n\n        return updateForm;\n      });\n      console.log(formData.color);\n    }\n  }; // const onInputChangeHandler = (event, input) => {\n  //   let value;\n  //   let url = \"\";\n  //   let data;\n  //   if (input === \"price\") {\n  //     value = Number.parseFloat(event.target.value);\n  //   } else if (input === \"image\") {\n  //     url = URL.createObjectURL(event.target.files[0]);\n  //     value = event.target.files[0];\n  //   } else {\n  //     value = event.target.value;\n  //   }\n  //   setFormData((prevState) => {\n  //     let isValid = true;\n  //     const updatedForm = {\n  //       ...prevState,\n  //       [input]: {\n  //         ...prevState[input],\n  //         value: value,\n  //         valid: isValid,\n  //         src: url,\n  //       },\n  //     };\n  //     return updatedForm;\n  //   });\n  // };\n\n\n  var onSubmitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // var product = new FormData();\n              // product.append(\"name\", formData.name.value);\n              // product.append(\"price\", formData.price.value);\n              // product.append(\"file\", formData.image.value);\n              // product.append(\"color\", formData.color.value);\n              // product.append(\"status\", formData.status.value);\n              // product.append(\"quantity\", formData.quantity.value);\n              // try {\n              //   const response = await sendPostAdminApi(\"store/add-product\", product);\n              //   setAlert((prevState) => {\n              //     return {\n              //       ...prevState,\n              //       msg: response.data.data.msg,\n              //       status: \"success\",\n              //       show: true,\n              //     };\n              //   });\n              //   setFormData((prevState) => {\n              //     const array = [\"name\", \"price\"];\n              //     let updateForm;\n              //     array.forEach((element, index) => {\n              //       updateForm = {\n              //         ...prevState,\n              //         [element]: {\n              //           ...prevState[element],\n              //           value: \"\",\n              //           valid: false,\n              //           src: \"\",\n              //         },\n              //       };\n              //     });\n              //     return updateForm;\n              //   });\n              // } catch (error) {\n              //   setAlert((prevState) => {\n              //     return {\n              //       ...prevState,\n              //       msg: error.response.data.error,\n              //       status: \"danger\",\n              //       show: true,\n              //     };\n              //   });\n              // }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmitHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var closeAlertHandler = function closeAlertHandler() {\n    setAlert(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        msg: \"\",\n        status: \"\",\n        show: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alert.show && /*#__PURE__*/_jsxDEV(SAlert, {\n      color: alert.status,\n      msg: alert.msg,\n      close: closeAlertHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          md: 6,\n          sm: 12,\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              md: 12,\n              sm: 12,\n              label: \"Product Name\",\n              id: \"name\",\n              type: \"text\",\n              readOnly: false // value={formData.name.value}\n              // change={onInputChangeHandler}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              md: 12,\n              sm: 12,\n              label: \"Price($)\",\n              id: \"price\",\n              type: \"text\",\n              readOnly: false,\n              placeHolder: \"$0.00\" // value={formData.price.value}\n              // change={onInputChangeHandler}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              md: 12,\n              sm: 12,\n              label: \"Product Image\",\n              id: \"image\",\n              type: \"file\",\n              readOnly: false // change={onInputChangeHandler}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: \"Product Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, _this), change.color.length > 0 && /*#__PURE__*/_jsxDEV(CButtonToolbar, {\n                children: change.color.map(function (el, i) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(SButtonGroup, {\n                      color: el\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 27\n                    }, _this)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"inline-block\"\n                },\n                children: /*#__PURE__*/_jsxDEV(SFormSelect, {\n                  md: 4,\n                  sm: 12,\n                  label: false,\n                  id: \"color\",\n                  options: [\"black\", \"white\", \"walnet\", \"Natural\"],\n                  change: onInputChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: \"ml-1\",\n            children: /*#__PURE__*/_jsxDEV(SFormSelect, {\n              md: 12,\n              sm: 12,\n              label: \"Product Height\",\n              id: \"height\",\n              options: [\"44cm\", \"68em\", \"74cm\"] // change={onInputChangeHandler}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: \"ml-1\",\n            children: /*#__PURE__*/_jsxDEV(SFormSelect, {\n              md: 12,\n              sm: 12,\n              label: \"Product Status\",\n              id: \"status\",\n              options: [\"draft\", \"active\"] // change={onInputChangeHandler}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n            className: \"mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(CButton, _defineProperty({\n              color: \"success\",\n              width: \"30%\",\n              type: \"submit\",\n              name: \"Save Product\",\n              block: false\n            }, \"width\", \"30%\"), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n          md: 5,\n          sm: 12,\n          className: \"d-flex\",\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            xs: 4,\n            sm: 3,\n            md: 4,\n            lg: 4,\n            xl: 4,\n            className: \"mx-auto my-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Store, \"aywcoOCI7m6DuZGx3LMTnZinamE=\");\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Store/Store.js"],"names":["useState","CButtonToolbar","CCol","CRow","Form","CButton","classes","SFormSelect","FormInput","required","sendPostAdminApi","sendPostApi","SAlert","SButtonGroup","Store","msg","status","show","alert","setAlert","color","change","setChange","value","formData","setFormData","onInputChangeHandler","event","input","target","console","log","array","slice","includes","push","prevState","updateForm","colorArray","onSubmitHandler","e","preventDefault","closeAlertHandler","length","map","el","i","display"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { CButtonToolbar, CCol, CRow } from \"@coreui/react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport classes from \"./Store.module.css\";\r\nimport SFormSelect from \"./UI/FormSelect\";\r\nimport FormInput from \"./UI/FormInput\";\r\nimport { required } from \"./UI/validator/Validator\";\r\nimport { sendPostAdminApi, sendPostApi } from \"src/service/appService\";\r\nimport SAlert from \"./UI/Alert/Alert\";\r\nimport SButtonGroup from \"./UI/SButtonGroup/SButtonGroup\";\r\nconst Store = () => {\r\n  const [alert, setAlert] = useState({\r\n    msg: \"\",\r\n    status: \"\",\r\n    show: false,\r\n  });\r\n  const [change, setChange] = useState({ color: [] });\r\n  const [formData, setFormData] = useState({\r\n    color: {\r\n      value: \"\",\r\n    },\r\n  });\r\n\r\n  const onInputChangeHandler = (event, input) => {\r\n    let value;\r\n    if (input === \"color\") {\r\n      value = event.target.value;\r\n      console.log(value);\r\n\r\n      let array = change.color.slice();\r\n      if (!array.includes(value)) {\r\n        array.push(value);\r\n        setChange((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            [input]: array,\r\n          };\r\n        });\r\n      }\r\n      setFormData((prevState) => {\r\n        const updateForm = {\r\n          ...prevState,\r\n          [input]: {\r\n            ...prevState[input],\r\n            value: value,\r\n            colorArray: array,\r\n          },\r\n        };\r\n        return updateForm;\r\n      });\r\n\r\n      console.log(formData.color);\r\n    }\r\n  };\r\n  // const onInputChangeHandler = (event, input) => {\r\n  //   let value;\r\n  //   let url = \"\";\r\n  //   let data;\r\n  //   if (input === \"price\") {\r\n  //     value = Number.parseFloat(event.target.value);\r\n  //   } else if (input === \"image\") {\r\n  //     url = URL.createObjectURL(event.target.files[0]);\r\n  //     value = event.target.files[0];\r\n  //   } else {\r\n  //     value = event.target.value;\r\n  //   }\r\n  //   setFormData((prevState) => {\r\n  //     let isValid = true;\r\n  //     const updatedForm = {\r\n  //       ...prevState,\r\n  //       [input]: {\r\n  //         ...prevState[input],\r\n  //         value: value,\r\n  //         valid: isValid,\r\n  //         src: url,\r\n  //       },\r\n  //     };\r\n  //     return updatedForm;\r\n  //   });\r\n  // };\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    // var product = new FormData();\r\n    // product.append(\"name\", formData.name.value);\r\n    // product.append(\"price\", formData.price.value);\r\n    // product.append(\"file\", formData.image.value);\r\n    // product.append(\"color\", formData.color.value);\r\n    // product.append(\"status\", formData.status.value);\r\n    // product.append(\"quantity\", formData.quantity.value);\r\n    // try {\r\n    //   const response = await sendPostAdminApi(\"store/add-product\", product);\r\n    //   setAlert((prevState) => {\r\n    //     return {\r\n    //       ...prevState,\r\n    //       msg: response.data.data.msg,\r\n    //       status: \"success\",\r\n    //       show: true,\r\n    //     };\r\n    //   });\r\n    //   setFormData((prevState) => {\r\n    //     const array = [\"name\", \"price\"];\r\n    //     let updateForm;\r\n    //     array.forEach((element, index) => {\r\n    //       updateForm = {\r\n    //         ...prevState,\r\n    //         [element]: {\r\n    //           ...prevState[element],\r\n    //           value: \"\",\r\n    //           valid: false,\r\n    //           src: \"\",\r\n    //         },\r\n    //       };\r\n    //     });\r\n\r\n    //     return updateForm;\r\n    //   });\r\n    // } catch (error) {\r\n    //   setAlert((prevState) => {\r\n    //     return {\r\n    //       ...prevState,\r\n    //       msg: error.response.data.error,\r\n    //       status: \"danger\",\r\n    //       show: true,\r\n    //     };\r\n    //   });\r\n    // }\r\n  };\r\n  const closeAlertHandler = () => {\r\n    setAlert((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        msg: \"\",\r\n        status: \"\",\r\n        show: false,\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {alert.show && (\r\n        <SAlert\r\n          color={alert.status}\r\n          msg={alert.msg}\r\n          close={closeAlertHandler}\r\n        />\r\n      )}\r\n\r\n      <Form onSubmit={onSubmitHandler}>\r\n        <CRow>\r\n          <CCol md={6} sm={12}>\r\n            <CRow>\r\n              <FormInput\r\n                md={12}\r\n                sm={12}\r\n                label=\"Product Name\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                readOnly={false}\r\n                // value={formData.name.value}\r\n                // change={onInputChangeHandler}\r\n              />\r\n            </CRow>\r\n            <CRow>\r\n              <FormInput\r\n                md={12}\r\n                sm={12}\r\n                label=\"Price($)\"\r\n                id=\"price\"\r\n                type=\"text\"\r\n                readOnly={false}\r\n                placeHolder=\"$0.00\"\r\n                // value={formData.price.value}\r\n                // change={onInputChangeHandler}\r\n              />\r\n            </CRow>\r\n            <CRow>\r\n              <FormInput\r\n                md={12}\r\n                sm={12}\r\n                label=\"Product Image\"\r\n                id=\"image\"\r\n                type=\"file\"\r\n                readOnly={false}\r\n                // change={onInputChangeHandler}\r\n              />\r\n            </CRow>\r\n            <CRow>\r\n              <CCol>\r\n                <div className=\"mb-2\">Product Color</div>\r\n                {change.color.length > 0 && (\r\n                  <CButtonToolbar>\r\n                    {change.color.map((el, i) => {\r\n                      return (\r\n                        <div className=\"mb-2\" key={i}>\r\n                          <SButtonGroup color={el} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </CButtonToolbar>\r\n                )}\r\n\r\n                <div style={{ display: \"inline-block\" }}>\r\n                  <SFormSelect\r\n                    md={4}\r\n                    sm={12}\r\n                    label={false}\r\n                    id=\"color\"\r\n                    options={[\"black\", \"white\", \"walnet\", \"Natural\"]}\r\n                    change={onInputChangeHandler}\r\n                  />\r\n                </div>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow className=\"ml-1\">\r\n              <SFormSelect\r\n                md={12}\r\n                sm={12}\r\n                label=\"Product Height\"\r\n                id=\"height\"\r\n                options={[\"44cm\", \"68em\", \"74cm\"]}\r\n                // change={onInputChangeHandler}\r\n              />\r\n            </CRow>\r\n            <CRow className=\"ml-1\">\r\n              <SFormSelect\r\n                md={12}\r\n                sm={12}\r\n                label=\"Product Status\"\r\n                id=\"status\"\r\n                options={[\"draft\", \"active\"]}\r\n                // change={onInputChangeHandler}\r\n              />\r\n            </CRow>\r\n\r\n            <CRow className=\"mx-auto\">\r\n              <CButton\r\n                color=\"success\"\r\n                width=\"30%\"\r\n                type=\"submit\"\r\n                name=\"Save Product\"\r\n                block={false}\r\n                width=\"30%\"\r\n                // disabled={input.isFormValid ? false : true}\r\n              />\r\n            </CRow>\r\n          </CCol>\r\n          <CCol md={5} sm={12} className=\"d-flex\">\r\n            <CCol\r\n              xs={4}\r\n              sm={3}\r\n              md={4}\r\n              lg={4}\r\n              xl={4}\r\n              className=\"mx-auto my-auto\"\r\n            >\r\n              {/* {formData.image.src && (\r\n                <img\r\n                  src={formData.image.src}\r\n                  className={classes.productImage}\r\n                />\r\n              )} */}\r\n            </CCol>\r\n          </CCol>\r\n        </CRow>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default Store;\r\n"]},"metadata":{},"sourceType":"module"}