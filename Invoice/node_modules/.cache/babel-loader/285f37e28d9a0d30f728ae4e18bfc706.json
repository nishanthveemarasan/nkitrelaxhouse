{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { sendGetAdminApi } from \"src/service/appService\";\nimport { getUrl } from \"src/service/customService\";\nimport { productStoreAction } from \"./store\";\nvar initialState = {\n  isDataChanged: false,\n  productData: [],\n  reRunData: {\n    isDataChanged: true,\n    queryParam: \"\"\n  },\n  modalActionData: \"\",\n  isLoading: false,\n  modalData: {\n    isModalOpen: false,\n    productId: 0,\n    modalAction: \"\",\n    modalHeading: \"\",\n    variant: \"\"\n  },\n  openModal: false,\n  initialLoad: {\n    loading: false,\n    action: \"\",\n    id: 0\n  },\n  updateData: {\n    isLoading: false,\n    dataUpdated: false,\n    msg: \"\",\n    color: \"\"\n  }\n};\nvar productSlice = createSlice({\n  name: \"products\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataChanged = true;\n      state.productData = action.payload.data;\n    },\n    dataChanged: function dataChanged(state) {\n      state.reRunData = _objectSpread(_objectSpread({}, state.reRunData), {}, {\n        isDataChanged: true\n      });\n    },\n    dataNotChanged: function dataNotChanged(state) {\n      state.reRunData = _objectSpread(_objectSpread({}, state.reRunData), {}, {\n        isDataChanged: false\n      });\n    },\n    modalOpen: function modalOpen(state, action) {\n      state.modalData = {\n        isModalOpen: true,\n        productId: action.payload.id,\n        modalAction: action.payload.action,\n        modalHeading: action.payload.heading,\n        variant: action.payload.variant,\n        data: action.payload.tableData\n      };\n    },\n    modalClose: function modalClose(state) {\n      state.modalData = {\n        isModalOpen: false,\n        productId: 0,\n        modalAction: \"\",\n        modalHeading: \"\"\n      };\n      state.initialLoad = {\n        loading: false,\n        action: \"\",\n        id: 0\n      };\n      state.updateData = {\n        isLoading: false,\n        dataUpdated: false,\n        msg: \"\",\n        color: \"\"\n      };\n    },\n    isDataLoading: function isDataLoading(state) {\n      state.isLoading = true;\n    },\n    dataIsLoaded: function dataIsLoaded(state) {\n      state.isLoading = false;\n    },\n    addProductModal: function addProductModal(state, action) {\n      state.openModal = action.payload.data;\n    },\n    getModal: function getModal(state, action) {\n      state.initialLoad = {\n        loading: action.payload.value,\n        action: action.payload.type,\n        id: action.payload.id\n      };\n    },\n    initiateUpdateData: function initiateUpdateData(state) {\n      state.reRunData = false;\n      state.updateData = _objectSpread(_objectSpread({}, state.updateData), {}, {\n        isLoading: true,\n        dataUpdated: false\n      });\n    },\n    DataIsUpdated: function DataIsUpdated(state, action) {\n      state.reRunData = true;\n      state.updateData = _objectSpread(_objectSpread({}, state.updateData), {}, {\n        isLoading: false,\n        dataUpdated: true,\n        msg: action.payload.msg,\n        color: action.payload.color\n      });\n    }\n  }\n});\nexport default productSlice;\nexport var getProductData = function getProductData(data) {\n  return function (dispatch) {\n    var url = getUrl(\"get-all-chairs\", data.param);\n    sendGetAdminApi(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(productStoreAction.getData({\n          data: response.data.data\n        }));\n      }\n    }).catch();\n  };\n};\nexport var getModalData = function getModalData(data) {\n  return function (dispatch) {\n    dispatch(productStoreAction.getModal({\n      id: data.id,\n      value: true,\n      type: data.action\n    }));\n    API.get(\"get-product-details/\".concat(data.id)).then(function (response) {\n      if (response.data.http_status === 200) {\n        var output = {\n          id: data.id,\n          action: data.action,\n          heading: data.action === \"Update\" ? \"Update the Product\" : \"Delete the Product\",\n          variant: data.action === \"Update\" ? \"primary\" : \"danger\",\n          tableData: response.data.data[0]\n        };\n        dispatch(productStoreAction.getModal({\n          id: data.id,\n          value: false,\n          type: data.action\n        }));\n        dispatch(productStoreAction.modalOpen(output));\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; // } else if (data.action === \"Delete\") {\n  //   return (dispatch) => {\n  //     dispatch(\n  //       productStoreAction.getModal({\n  //         id: data.id,\n  //         value: true,\n  //         type: data.action,\n  //       })\n  //     );\n  //     const output = {\n  //       id: data.id,\n  //       action: data.action,\n  //       heading: \"Delete the Product\",\n  //       variant: \"danger\",\n  //       tableData: \"\",\n  //     };\n  //     dispatch(productStoreAction.modalOpen(output));\n  //   };\n  // }\n};\nexport var updateProductData = function updateProductData(data) {\n  return function (dispatch) {\n    dispatch(productStoreAction.initiateUpdateData());\n    API.post(\"edit-product-details\", data).then(function (response) {\n      console.log(response.data.data.msg);\n      dispatch(productStoreAction.DataIsUpdated({\n        msg: response.data.data.msg,\n        color: \"success\"\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/product-slice.js"],"names":["createSlice","API","sendGetAdminApi","getUrl","productStoreAction","initialState","isDataChanged","productData","reRunData","queryParam","modalActionData","isLoading","modalData","isModalOpen","productId","modalAction","modalHeading","variant","openModal","initialLoad","loading","action","id","updateData","dataUpdated","msg","color","productSlice","name","reducers","getData","state","payload","data","dataChanged","dataNotChanged","modalOpen","heading","tableData","modalClose","isDataLoading","dataIsLoaded","addProductModal","getModal","value","type","initiateUpdateData","DataIsUpdated","getProductData","dispatch","url","param","then","response","http_status","catch","getModalData","get","output","error","console","log","updateProductData","post"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { sendGetAdminApi } from \"src/service/appService\";\r\nimport { getUrl } from \"src/service/customService\";\r\nimport { productStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  productData: [],\r\n  reRunData: {\r\n    isDataChanged: true,\r\n    queryParam: \"\",\r\n  },\r\n  modalActionData: \"\",\r\n  isLoading: false,\r\n  modalData: {\r\n    isModalOpen: false,\r\n    productId: 0,\r\n    modalAction: \"\",\r\n    modalHeading: \"\",\r\n    variant: \"\",\r\n  },\r\n  openModal: false,\r\n  initialLoad: {\r\n    loading: false,\r\n    action: \"\",\r\n    id: 0,\r\n  },\r\n  updateData: {\r\n    isLoading: false,\r\n    dataUpdated: false,\r\n    msg: \"\",\r\n    color: \"\",\r\n  },\r\n};\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.productData = action.payload.data;\r\n    },\r\n    dataChanged(state) {\r\n      state.reRunData = {\r\n        ...state.reRunData,\r\n        isDataChanged: true,\r\n      };\r\n    },\r\n    dataNotChanged(state) {\r\n      state.reRunData = {\r\n        ...state.reRunData,\r\n        isDataChanged: false,\r\n      };\r\n    },\r\n    modalOpen(state, action) {\r\n      state.modalData = {\r\n        isModalOpen: true,\r\n        productId: action.payload.id,\r\n        modalAction: action.payload.action,\r\n        modalHeading: action.payload.heading,\r\n        variant: action.payload.variant,\r\n        data: action.payload.tableData,\r\n      };\r\n    },\r\n    modalClose(state) {\r\n      state.modalData = {\r\n        isModalOpen: false,\r\n        productId: 0,\r\n        modalAction: \"\",\r\n        modalHeading: \"\",\r\n      };\r\n      state.initialLoad = {\r\n        loading: false,\r\n        action: \"\",\r\n        id: 0,\r\n      };\r\n      state.updateData = {\r\n        isLoading: false,\r\n        dataUpdated: false,\r\n        msg: \"\",\r\n        color: \"\",\r\n      };\r\n    },\r\n    isDataLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    dataIsLoaded(state) {\r\n      state.isLoading = false;\r\n    },\r\n    addProductModal(state, action) {\r\n      state.openModal = action.payload.data;\r\n    },\r\n    getModal(state, action) {\r\n      state.initialLoad = {\r\n        loading: action.payload.value,\r\n        action: action.payload.type,\r\n        id: action.payload.id,\r\n      };\r\n    },\r\n    initiateUpdateData(state) {\r\n      state.reRunData = false;\r\n      state.updateData = {\r\n        ...state.updateData,\r\n        isLoading: true,\r\n        dataUpdated: false,\r\n      };\r\n    },\r\n    DataIsUpdated(state, action) {\r\n      state.reRunData = true;\r\n      state.updateData = {\r\n        ...state.updateData,\r\n        isLoading: false,\r\n        dataUpdated: true,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default productSlice;\r\n\r\nexport const getProductData = (data) => {\r\n  return (dispatch) => {\r\n    const url = getUrl(\"get-all-chairs\", data.param);\r\n    sendGetAdminApi(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(productStoreAction.getData({ data: response.data.data }));\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport const getModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      productStoreAction.getModal({\r\n        id: data.id,\r\n        value: true,\r\n        type: data.action,\r\n      })\r\n    );\r\n    API.get(`get-product-details/${data.id}`)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const output = {\r\n            id: data.id,\r\n            action: data.action,\r\n            heading:\r\n              data.action === \"Update\"\r\n                ? \"Update the Product\"\r\n                : \"Delete the Product\",\r\n            variant: data.action === \"Update\" ? \"primary\" : \"danger\",\r\n            tableData: response.data.data[0],\r\n          };\r\n          dispatch(\r\n            productStoreAction.getModal({\r\n              id: data.id,\r\n              value: false,\r\n              type: data.action,\r\n            })\r\n          );\r\n          dispatch(productStoreAction.modalOpen(output));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // } else if (data.action === \"Delete\") {\r\n  //   return (dispatch) => {\r\n  //     dispatch(\r\n  //       productStoreAction.getModal({\r\n  //         id: data.id,\r\n  //         value: true,\r\n  //         type: data.action,\r\n  //       })\r\n  //     );\r\n  //     const output = {\r\n  //       id: data.id,\r\n  //       action: data.action,\r\n  //       heading: \"Delete the Product\",\r\n  //       variant: \"danger\",\r\n  //       tableData: \"\",\r\n  //     };\r\n  //     dispatch(productStoreAction.modalOpen(output));\r\n  //   };\r\n  // }\r\n};\r\n\r\nexport const updateProductData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(productStoreAction.initiateUpdateData());\r\n    API.post(\"edit-product-details\", data).then((response) => {\r\n      console.log(response.data.data.msg);\r\n      dispatch(\r\n        productStoreAction.DataIsUpdated({\r\n          msg: response.data.data.msg,\r\n          color: \"success\",\r\n        })\r\n      );\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}