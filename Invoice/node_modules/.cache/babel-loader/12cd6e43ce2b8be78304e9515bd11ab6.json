{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  isLoading: false,\n  loggedInData: {\n    userName: \"\",\n    name: \"\",\n    token: null,\n    role_id: 0\n  },\n  message: {\n    msg: \"\",\n    color: \"\",\n    isLoggedIn: false\n  }\n};\nvar loginSlice = createSlice({\n  name: \"login\",\n  initialState: initialState,\n  reducers: {}\n});\nexport default loginSlice;\nexport var LoginRequest = function LoginRequest(data) {\n  return function (dispatch) {\n    console.log();\n  };\n};\n_c = LoginRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRequest\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/login-store.js"],"names":["createSlice","initialState","isLoading","loggedInData","userName","name","token","role_id","message","msg","color","isLoggedIn","loginSlice","reducers","LoginRequest","data","dispatch","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,IAAI,EAAE,EAFM;AAGZC,IAAAA,KAAK,EAAE,IAHK;AAIZC,IAAAA,OAAO,EAAE;AAJG,GAFK;AAQnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,KAAK,EAAE,EAFA;AAGPC,IAAAA,UAAU,EAAE;AAHL;AARU,CAArB;AAeA,IAAMC,UAAU,GAAGZ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,OADuB;AAE7BJ,EAAAA,YAAY,EAAZA,YAF6B;AAG7BY,EAAAA,QAAQ,EAAE;AAHmB,CAAD,CAA9B;AAKA,eAAeD,UAAf;AAEA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAClC,SAAO,UAAAC,QAAQ,EAAI;AACfC,IAAAA,OAAO,CAACC,GAAR;AACH,GAFD;AAGH,CAJM;KAAMJ,Y","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  loggedInData: {\r\n    userName: \"\",\r\n    name: \"\",\r\n    token: null,\r\n    role_id: 0,\r\n  },\r\n  message: {\r\n    msg: \"\",\r\n    color: \"\",\r\n    isLoggedIn: false,\r\n  },\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {},\r\n});\r\nexport default loginSlice;\r\n\r\nexport const LoginRequest = (data) => {\r\n    return dispatch => {\r\n        console.log();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}