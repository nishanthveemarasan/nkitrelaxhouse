{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\ProductModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport API from \"src/axios/axios\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { productStoreAction } from \"src/store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ProductModal = function ProductModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(),\n      productName = _useFormValidate.inputValue,\n      setProductName = _useFormValidate.setInputValue,\n      productNameChangeHandler = _useFormValidate.inputChangeHandler,\n      productNameRestHandler = _useFormValidate.reset;\n\n  var _useFormValidate2 = useFormValidate(),\n      productCode = _useFormValidate2.inputValue,\n      setProductCode = _useFormValidate2.setInputValue,\n      productCodeChangeHandler = _useFormValidate2.inputChangeHandler,\n      productCodeRestHandler = _useFormValidate2.reset;\n\n  var _useFormValidate3 = useFormValidate(),\n      stock = _useFormValidate3.inputValue,\n      setstock = _useFormValidate3.setInputValue,\n      stockChangeHandler = _useFormValidate3.inputChangeHandler,\n      stockRestHandler = _useFormValidate3.reset;\n\n  var _useState = useState({\n    isLoading: false,\n    hideForm: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalState = _useState2[0],\n      setModalState = _useState2[1];\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      modalData: state.productStore.modalData,\n      id: state.productStore.modalData.productId,\n      isLoading: state.productStore.isLoading\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(productStoreAction.modalClose());\n    productNameRestHandler(\"\");\n    productCodeRestHandler(\"\");\n    stockRestHandler(\"\");\n  }; //get the product details\n\n\n  useEffect(function () {\n    setModalState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isLoading: true,\n        hideForm: true\n      });\n    });\n    API.get(\"get-product-details/\".concat(state.id)).then(function (response) {\n      if (response.data.http_status === 200) {\n        setProductName(response.data.data[0].itemname);\n        setProductCode(response.data.data[0].itemcode);\n        setstock(+response.data.data[0].count);\n      }\n\n      setModalState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isLoading: false,\n          hideForm: false\n        });\n      });\n    }).catch(function (error) {\n      console.log(error.message);\n    }); // setModalState((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     isLoading: false,\n    //   };\n    // });\n  }, [state.id]);\n\n  var onSubmitHandler = function onSubmitHandler() {};\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.modalData.isModalOpen,\n    onClose: modalCloseHandler,\n    heading: state.modalData.modalHeading,\n    variant: state.modalData.variant,\n    action: state.modalData.modalAction,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    loading: modalState.isLoading,\n    children: state.isLoading && \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProductModal, \"WbCBUfoE0yQVtbFdJLRnOC3UCnQ=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = ProductModal;\nexport default ProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/ProductModal.js"],"names":["React","useState","useEffect","useSelector","useDispatch","API","FormInput","CModal","useFormValidate","productStoreAction","ProductModal","productName","inputValue","setProductName","setInputValue","productNameChangeHandler","inputChangeHandler","productNameRestHandler","reset","productCode","setProductCode","productCodeChangeHandler","productCodeRestHandler","stock","setstock","stockChangeHandler","stockRestHandler","isLoading","hideForm","modalState","setModalState","mapStateToProps","state","modalData","productStore","id","productId","dispatch","modalCloseHandler","modalClose","prevState","get","then","response","data","http_status","itemname","itemcode","count","catch","error","console","log","message","onSubmitHandler","isModalOpen","modalHeading","variant","modalAction"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\n\r\nconst ProductModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    setInputValue: setProductName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    reset: productNameRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    setInputValue: setProductCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n    reset: productCodeRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stock,\r\n    setInputValue: setstock,\r\n    inputChangeHandler: stockChangeHandler,\r\n    reset: stockRestHandler,\r\n  } = useFormValidate();\r\n  const [modalState, setModalState] = useState({\r\n    isLoading: false,\r\n    hideForm: true,\r\n  });\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.productStore.modalData,\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.modalClose());\r\n    productNameRestHandler(\"\");\r\n    productCodeRestHandler(\"\");\r\n    stockRestHandler(\"\");\r\n  };\r\n  //get the product details\r\n  useEffect(() => {\r\n    setModalState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoading: true,\r\n        hideForm: true,\r\n      };\r\n    });\r\n\r\n    API.get(`get-product-details/${state.id}`)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          setProductName(response.data.data[0].itemname);\r\n          setProductCode(response.data.data[0].itemcode);\r\n          setstock(+response.data.data[0].count);\r\n        }\r\n        setModalState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            isLoading: false,\r\n            hideForm: false,\r\n          };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n    // setModalState((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     isLoading: false,\r\n    //   };\r\n    // });\r\n  }, [state.id]);\r\n  const onSubmitHandler = () => {};\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalAction}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={modalState.isLoading}\r\n    >\r\n      {state.isLoading && \"loading\"}\r\n      {/* {!state.isLoading && modalState.hideForm && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Name\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Code\"\r\n            value={productCode}\r\n            change={productCodeChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Current Stock\"\r\n            value={stock}\r\n            change={stockChangeHandler}\r\n          />\r\n        </>\r\n      )} */}\r\n    </CModal>\r\n  );\r\n};\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}