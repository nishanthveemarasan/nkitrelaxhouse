{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nvar initialState = {\n  isDataChanged: false,\n  productData: []\n};\nvar productSlice = createSlice({\n  name: \"products\",\n  initialState: initialState,\n  reducers: {\n    getProductData: function getProductData(state, action) {\n      state.isDataChanged = true;\n      state.productData = action.payload.data;\n    }\n  }\n});\nexport default productSlice;\nexport var getProductData = function getProductData() {\n  return function (dispatch) {\n    API.get(\"get-all-chairs\").then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(produc);\n      }\n    }).catch();\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/product-slice.js"],"names":["createSlice","API","initialState","isDataChanged","productData","productSlice","name","reducers","getProductData","state","action","payload","data","dispatch","get","then","response","http_status","produc","catch"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,IAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,UADyB;AAE/BJ,EAAAA,YAAY,EAAZA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cADQ,0BACOC,KADP,EACcC,MADd,EACsB;AAC5BD,MAAAA,KAAK,CAACN,aAAN,GAAsB,IAAtB;AACAM,MAAAA,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAAP,CAAeC,IAAnC;AACD;AAJO;AAHqB,CAAD,CAAhC;AAUA,eAAeP,YAAf;AAEA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO,UAACK,QAAD,EAAc;AACnBZ,IAAAA,GAAG,CAACa,GAAJ,CAAQ,gBAAR,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACJ,IAAT,CAAcK,WAAd,KAA8B,GAAlC,EAAuC;AACrCJ,QAAAA,QAAQ,CAACK,MAAD,CAAR;AACD;AACF,KALH,EAMGC,KANH;AAOD,GARD;AASD,CAVM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  productData: [],\r\n};\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    getProductData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.productData = action.payload.data;\r\n    },\r\n  },\r\n});\r\nexport default productSlice;\r\n\r\nexport const getProductData = () => {\r\n  return (dispatch) => {\r\n    API.get(\"get-all-chairs\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(produc);\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}