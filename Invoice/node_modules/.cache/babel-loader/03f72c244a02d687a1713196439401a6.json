{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { postStoreAction } from \"./store\";\nvar initialState = {\n  isPostDataLoaded: false,\n  postData: [],\n  reRunPostComponent: true,\n  postModalData: {\n    postData: \"\",\n    postId: 0,\n    ModalHeading: \"\",\n    ModalAction: \"\",\n    isModalOpen: false,\n    variant: \"\"\n  },\n  updatePostModalData: {\n    isLoading: false,\n    isUpdated: false,\n    msg: \"\",\n    variant: \"\"\n  },\n  addPostModalData: {\n    isLoading: false,\n    modalHeading: \"Add A New Post\",\n    modalActionButton: \"Create\",\n    isModalOpen: false,\n    variant: \"primary\"\n  }\n};\nvar postSlice = createSlice({\n  name: \"posts\",\n  initialState: initialState,\n  reducers: {\n    openCreateModal: function openCreateModal(state) {\n      state.addPostModalData = _objectSpread(_objectSpread({}, state.addPostModalData), {}, {\n        isModalOpen: true\n      });\n    },\n    sendingAddPostData: function sendingAddPostData(state) {\n      state.addPostModalData = _objectSpread(_objectSpread({}, state.addPostModalData), {}, {\n        isLoading: true\n      });\n      state.reRunPostComponent = false;\n    },\n    AddPostCreatedData: function AddPostCreatedData(state, action) {\n      state.addPostModalData = _objectSpread(_objectSpread({}, state.addPostModalData), {}, {\n        isLoading: false\n      });\n      state.reRunPostComponent = true;\n      state.updatePostModalData = _objectSpread(_objectSpread({}, state.updatePostModalData), {}, {\n        isUpdated: true,\n        msg: action.payload.msg,\n        variant: action.payload.color\n      });\n    },\n    getData: function getData(state, action) {\n      state.isPostDataLoaded = true;\n      state.postData = action.payload.post;\n    },\n    openPostEditModal: function openPostEditModal(state, action) {\n      state.postModalData = {\n        postData: action.payload.postData,\n        postId: action.payload.id,\n        ModalAction: action.payload.action,\n        isModalOpen: true,\n        ModalHeading: action.payload.action === \"Update\" ? \"Update the Post\" : \"Delete the post\",\n        variant: action.payload.action === \"Update\" ? \"primary\" : \"danger\"\n      };\n    },\n    updatingModalData: function updatingModalData(state) {\n      state.updatePostModalData = _objectSpread(_objectSpread({}, state.updatePostModalData), {}, {\n        isLoading: true,\n        isUpdated: false\n      });\n      state.reRunPostComponent = false;\n    },\n    postDataUpdated: function postDataUpdated(state, action) {\n      state.updatePostModalData = {\n        isLoading: false,\n        isUpdated: true,\n        msg: action.payload.msg,\n        variant: action.payload.color\n      };\n      state.reRunPostComponent = true;\n    },\n    closeModal: function closeModal(state) {\n      state.postModalData = {\n        postData: \"\",\n        postId: 0,\n        ModalHeading: \"\",\n        ModalAction: \"\",\n        isModalOpen: false,\n        variant: \"\"\n      };\n      state.updatePostModalData = {\n        isLoading: false,\n        isUpdated: false,\n        msg: \"\",\n        variant: \"\"\n      };\n      state.addPostModalData = _objectSpread(_objectSpread({}, state.addPostModalData), {}, {\n        isModalOpen: false\n      });\n    }\n  }\n});\nexport default postSlice;\nexport var getPostData = function getPostData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"posts/get-posts\";\n\n    if (param) {\n      url = \"posts/get-posts?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(postStoreAction.getData({\n          post: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var openPostModal = function openPostModal(data) {\n  return function (dispatch) {\n    dispatch(postStoreAction.openPostEditModal(data));\n  };\n};\nexport var updatePostModalData = function updatePostModalData(data) {\n  return function (dispatch) {\n    dispatch(postStoreAction.updatingModalData());\n    API.post(\"posts/edit\", data).then(function (response) {\n      dispatch(postStoreAction.postDataUpdated({\n        msg: response.data.data.msg,\n        color: \"success\"\n      }));\n    }).catch(function (error) {\n      dispatch(postStoreAction.postDataUpdated({\n        msg: error.response.data.msg,\n        color: \"danger\"\n      }));\n    });\n  };\n};\nexport var deletePostModalData = function deletePostModalData(data) {\n  return function (dispatch) {\n    dispatch(postStoreAction.updatingModalData());\n    console.log(data.id);\n    API.post(\"posts/edit\", data).then(function (response) {\n      dispatch(postStoreAction.postDataUpdated({\n        msg: response.data.data.msg,\n        color: \"success\"\n      }));\n    }).catch(function (error) {\n      dispatch(postStoreAction.postDataUpdated({\n        msg: error.response.data.msg,\n        color: \"danger\"\n      }));\n    });\n    var result = {\n      msg: \"You Post has been Deleted Succesfully!!!\"\n    };\n    dispatch(postStoreAction.postDataUpdated({\n      msg: result.msg,\n      color: \"success\"\n    }));\n  };\n};\nexport var closePostModal = function closePostModal() {\n  return function (dispatch) {\n    dispatch(postStoreAction.closeModal());\n  };\n};\nexport var openAddPostModal = function openAddPostModal() {\n  return function (dispatch) {\n    dispatch(postStoreAction.openCreateModal());\n  };\n};\nexport var addPostData = function addPostData(data) {\n  return function (dispatch) {\n    dispatch(postStoreAction.sendingAddPostData());\n    console.log(data);\n    API.post(\"posts/create\", data).then(function (response) {\n      var msg = response.data.data.msg;\n      dispatch(postStoreAction.AddPostCreatedData({\n        msg: msg,\n        color: \"success\"\n      }));\n    }).catch(function (error) {\n      console.log(error.response);\n      dispatch(postStoreAction.AddPostCreatedData({\n        msg: error.response.data.error,\n        color: \"danger\"\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/post.slice.js"],"names":["createSlice","API","postStoreAction","initialState","isPostDataLoaded","postData","reRunPostComponent","postModalData","postId","ModalHeading","ModalAction","isModalOpen","variant","updatePostModalData","isLoading","isUpdated","msg","addPostModalData","modalHeading","modalActionButton","postSlice","name","reducers","openCreateModal","state","sendingAddPostData","AddPostCreatedData","action","payload","color","getData","post","openPostEditModal","id","updatingModalData","postDataUpdated","closeModal","getPostData","param","dispatch","url","get","then","response","data","http_status","catch","error","console","log","message","openPostModal","deletePostModalData","result","closePostModal","openAddPostModal","addPostData"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { postStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isPostDataLoaded: false,\r\n  postData: [],\r\n  reRunPostComponent: true,\r\n  postModalData: {\r\n    postData: \"\",\r\n    postId: 0,\r\n    ModalHeading: \"\",\r\n    ModalAction: \"\",\r\n    isModalOpen: false,\r\n    variant: \"\",\r\n  },\r\n  updatePostModalData: {\r\n    isLoading: false,\r\n    isUpdated: false,\r\n    msg: \"\",\r\n    variant: \"\",\r\n  },\r\n  addPostModalData: {\r\n    isLoading: false,\r\n    modalHeading: \"Add A New Post\",\r\n    modalActionButton: \"Create\",\r\n    isModalOpen: false,\r\n    variant: \"primary\",\r\n  },\r\n};\r\n\r\nconst postSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState,\r\n  reducers: {\r\n    openCreateModal(state) {\r\n      state.addPostModalData = {\r\n        ...state.addPostModalData,\r\n        isModalOpen: true,\r\n      };\r\n    },\r\n    sendingAddPostData(state) {\r\n      state.addPostModalData = {\r\n        ...state.addPostModalData,\r\n        isLoading: true,\r\n      };\r\n      state.reRunPostComponent = false;\r\n    },\r\n    AddPostCreatedData(state, action) {\r\n      state.addPostModalData = {\r\n        ...state.addPostModalData,\r\n        isLoading: false,\r\n      };\r\n      state.reRunPostComponent = true;\r\n      state.updatePostModalData = {\r\n        ...state.updatePostModalData,\r\n        isUpdated: true,\r\n        msg: action.payload.msg,\r\n        variant: action.payload.color,\r\n      };\r\n    },\r\n    getData(state, action) {\r\n      state.isPostDataLoaded = true;\r\n      state.postData = action.payload.post;\r\n    },\r\n    openPostEditModal(state, action) {\r\n      state.postModalData = {\r\n        postData: action.payload.postData,\r\n        postId: action.payload.id,\r\n        ModalAction: action.payload.action,\r\n        isModalOpen: true,\r\n        ModalHeading:\r\n          action.payload.action === \"Update\"\r\n            ? \"Update the Post\"\r\n            : \"Delete the post\",\r\n        variant: action.payload.action === \"Update\" ? \"primary\" : \"danger\",\r\n      };\r\n    },\r\n    updatingModalData(state) {\r\n      state.updatePostModalData = {\r\n        ...state.updatePostModalData,\r\n        isLoading: true,\r\n        isUpdated: false,\r\n      };\r\n      state.reRunPostComponent = false;\r\n    },\r\n    postDataUpdated(state, action) {\r\n      state.updatePostModalData = {\r\n        isLoading: false,\r\n        isUpdated: true,\r\n        msg: action.payload.msg,\r\n        variant: action.payload.color,\r\n      };\r\n      state.reRunPostComponent = true;\r\n    },\r\n    closeModal(state) {\r\n      state.postModalData = {\r\n        postData: \"\",\r\n        postId: 0,\r\n        ModalHeading: \"\",\r\n        ModalAction: \"\",\r\n        isModalOpen: false,\r\n        variant: \"\",\r\n      };\r\n      state.updatePostModalData = {\r\n        isLoading: false,\r\n        isUpdated: false,\r\n        msg: \"\",\r\n        variant: \"\",\r\n      };\r\n      state.addPostModalData = {\r\n        ...state.addPostModalData,\r\n        isModalOpen: false,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice;\r\n\r\nexport const getPostData = (param = \"\") => {\r\n  return (dispatch) => {\r\n    let url = \"posts/get-posts\";\r\n    if (param) {\r\n      url = `posts/get-posts?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(postStoreAction.getData({ post: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const openPostModal = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(postStoreAction.openPostEditModal(data));\r\n  };\r\n};\r\n\r\nexport const updatePostModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(postStoreAction.updatingModalData());\r\n    API.post(\"posts/edit\", data)\r\n      .then((response) => {\r\n        dispatch(\r\n          postStoreAction.postDataUpdated({\r\n            msg: response.data.data.msg,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          postStoreAction.postDataUpdated({\r\n            msg: error.response.data.msg,\r\n            color: \"danger\",\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\nexport const deletePostModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(postStoreAction.updatingModalData());\r\n    console.log(data.id);\r\n    API.post(\"posts/edit\", data)\r\n      .then((response) => {\r\n        dispatch(\r\n          postStoreAction.postDataUpdated({\r\n            msg: response.data.data.msg,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          postStoreAction.postDataUpdated({\r\n            msg: error.response.data.msg,\r\n            color: \"danger\",\r\n          })\r\n        );\r\n      });\r\n    const result = {\r\n      msg: \"You Post has been Deleted Succesfully!!!\",\r\n    };\r\n    dispatch(\r\n      postStoreAction.postDataUpdated({\r\n        msg: result.msg,\r\n        color: \"success\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const closePostModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(postStoreAction.closeModal());\r\n  };\r\n};\r\n\r\nexport const openAddPostModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(postStoreAction.openCreateModal());\r\n  };\r\n};\r\n\r\nexport const addPostData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(postStoreAction.sendingAddPostData());\r\n    console.log(data);\r\n    API.post(`posts/create`, data)\r\n      .then((response) => {\r\n        const msg = response.data.data.msg;\r\n        dispatch(\r\n          postStoreAction.AddPostCreatedData({\r\n            msg: msg,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        dispatch(\r\n          postStoreAction.AddPostCreatedData({\r\n            msg: error.response.data.error,\r\n            color: \"danger\",\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}