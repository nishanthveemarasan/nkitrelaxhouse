{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Sales\\\\Modal\\\\CreateSaleModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { closeSaleModal } from \"src/store/sale-slice\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport Card from \"src/Components/UI/Card/Card\";\nimport { Col, Row } from \"react-bootstrap\";\nimport CButton from \"src/Components/UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CreateSaleModal = function CreateSaleModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(\"\"),\n      orderId = _useFormValidate.inputValue,\n      setOrderId = _useFormValidate.setInputValue,\n      idChangeHandler = _useFormValidate.inputChangeHandler;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderList = _useState2[0],\n      setOrderList = _useState2[1];\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      data: state.saleStore.addSaleModalData\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(closeSaleModal());\n  };\n\n  useEffect(function () {\n    setOrderId(state.data.latestOrderId);\n  }, [setOrderId, state.data.latestOrderId]);\n\n  var addMoreToCardHandler = function addMoreToCardHandler() {\n    console.log(\"live\");\n  };\n\n  console.log(orderList);\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.data.isModalOpen,\n    heading: state.data.modalHeading,\n    variant: \"primary\",\n    action: state.data.modalActionButton,\n    onClose: modalCloseHandler,\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      label: \"Order Number\",\n      readOnly: true,\n      value: orderId,\n      change: idChangeHandler,\n      size: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      header: \"Add Items To Order\",\n      color: \"info\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          label: \"Product Name\",\n          readOnly: false,\n          size: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"number\",\n          label: \"Quantity\",\n          readOnly: false,\n          size: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"danger\",\n            name: \"ADD MORE\",\n            click: addMoreToCardHandler,\n            type: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateSaleModal, \"A950tK++Efmj5Z6J3Oc908Y+QPo=\", false, function () {\n  return [useFormValidate, useSelector, useDispatch];\n});\n\n_c = CreateSaleModal;\nexport default CreateSaleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSaleModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Sales/Modal/CreateSaleModal.js"],"names":["useEffect","useState","CModal","useSelector","useDispatch","closeSaleModal","FormInput","useFormValidate","Card","Col","Row","CButton","CreateSaleModal","orderId","inputValue","setOrderId","setInputValue","idChangeHandler","inputChangeHandler","orderList","setOrderList","mapStateToProps","state","data","saleStore","addSaleModalData","dispatch","modalCloseHandler","latestOrderId","addMoreToCardHandler","console","log","isModalOpen","modalHeading","modalActionButton"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeSaleModal } from \"src/store/sale-slice\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nconst CreateSaleModal = () => {\r\n  const {\r\n    inputValue: orderId,\r\n    setInputValue: setOrderId,\r\n    inputChangeHandler: idChangeHandler,\r\n  } = useFormValidate(\"\");\r\n  const [orderList, setOrderList] = useState([]);\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      data: state.saleStore.addSaleModalData,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const modalCloseHandler = () => {\r\n    dispatch(closeSaleModal());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOrderId(state.data.latestOrderId);\r\n  }, [setOrderId, state.data.latestOrderId]);\r\n\r\n  const addMoreToCardHandler = () => {\r\n    console.log(\"live\");\r\n  };\r\n  console.log(orderList);\r\n  return (\r\n    <CModal\r\n      onShow={state.data.isModalOpen}\r\n      heading={state.data.modalHeading}\r\n      variant=\"primary\"\r\n      action={state.data.modalActionButton}\r\n      onClose={modalCloseHandler}\r\n      size=\"lg\"\r\n    >\r\n      <FormInput\r\n        type=\"text\"\r\n        label=\"Order Number\"\r\n        readOnly={true}\r\n        value={orderId}\r\n        change={idChangeHandler}\r\n        size=\"6\"\r\n      />\r\n      <Card header=\"Add Items To Order\" color=\"info\">\r\n        <Row>\r\n          <FormInput\r\n            type=\"text\"\r\n            label=\"Product Name\"\r\n            readOnly={false}\r\n            size={4}\r\n          />\r\n          <FormInput type=\"number\" label=\"Quantity\" readOnly={false} size={2} />\r\n          <Col md={3}>\r\n            <CButton\r\n              color=\"danger\"\r\n              name=\"ADD MORE\"\r\n              click={addMoreToCardHandler}\r\n              type=\"button\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </CModal>\r\n  );\r\n};\r\nexport default CreateSaleModal;\r\n"]},"metadata":{},"sourceType":"module"}