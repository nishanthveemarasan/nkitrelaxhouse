{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { saleStoreAction } from \"./store\";\nvar initialState = {\n  isDataLoaded: false,\n  saleData: [],\n  reRunComponent: true,\n  saleModalData: {\n    isLoading: false,\n    saleId: 0,\n    actionType: \"\",\n    isModalOpen: false,\n    modalHeading: \"\",\n    modalAction: \"\",\n    variant: \"\"\n  },\n  updateSaleData: {\n    isLoading: false,\n    isUpdated: false,\n    msg: \"\",\n    variant: \"\"\n  },\n  addSale: addSale\n};\nvar saleSlice = createSlice({\n  name: \"sale\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataLoaded = true;\n      state.saleData = action.payload.sale;\n    },\n    loadModalInitialData: function loadModalInitialData(state, action) {\n      state.saleModalData = {\n        isLoading: true,\n        saleId: action.payload.id,\n        actionType: action.payload.action\n      };\n    },\n    loadSaleModal: function loadSaleModal(state, action) {\n      state.saleModalData = {\n        isLoading: false,\n        modalData: action.payload.saleDetails,\n        saleId: action.payload.id,\n        isModalOpen: true,\n        modalHeading: action.payload.heading,\n        modalAction: action.payload.actionType,\n        variant: action.payload.variant\n      };\n      console.log(state.saleModalData);\n    },\n    closeModal: function closeModal(state) {\n      state.saleModalData = {\n        isLoading: false,\n        saleId: 0,\n        actionType: \"\",\n        isModalOpen: false,\n        modalHeading: \"\",\n        modalAction: \"\",\n        variant: \"\"\n      };\n      state.updateSaleData = {\n        isLoading: false,\n        isUpdated: false,\n        msg: \"\",\n        variant: \"\"\n      };\n    },\n    updatingData: function updatingData(state) {\n      state.updateSaleData = _objectSpread(_objectSpread({}, state.updateSaleData), {}, {\n        isLoading: true\n      });\n    },\n    dataUpdated: function dataUpdated(state, action) {\n      state.updateSaleData = {\n        isLoading: false,\n        isUpdated: true,\n        msg: action.payload.msg,\n        variant: action.payload.color\n      };\n    }\n  }\n});\nexport default saleSlice;\nexport var getSaleData = function getSaleData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"order/get-order-data\";\n\n    if (param) {\n      url = \"order/get-order-data?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(saleStoreAction.getData({\n          sale: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var getSaleModalData = function getSaleModalData(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.loadModalInitialData({\n      id: data.id,\n      action: data.action\n    }));\n    dispatch(saleStoreAction.loadSaleModal({\n      id: data.id,\n      saleDetails: data.saleData,\n      heading: data.action === \"Update\" ? \"Update the Order\" : \"Cancel The Order\",\n      actionType: data.action === \"Update\" ? \"Update\" : \"Cancel\",\n      variant: data.action === \"Update\" ? \"primary\" : \"danger\"\n    }));\n  };\n};\nexport var closeSaleModal = function closeSaleModal() {\n  return function (dispatch) {\n    dispatch(saleStoreAction.closeModal());\n  };\n};\nexport var updateSaleData = function updateSaleData(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.updatingData());\n    var result = {\n      msg: \"Order has been updated successfully\"\n    };\n    dispatch(saleStoreAction.dataUpdated({\n      msg: result.msg,\n      color: \"success\"\n    }));\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/sale-slice.js"],"names":["createSlice","API","saleStoreAction","initialState","isDataLoaded","saleData","reRunComponent","saleModalData","isLoading","saleId","actionType","isModalOpen","modalHeading","modalAction","variant","updateSaleData","isUpdated","msg","addSale","saleSlice","name","reducers","getData","state","action","payload","sale","loadModalInitialData","id","loadSaleModal","modalData","saleDetails","heading","console","log","closeModal","updatingData","dataUpdated","color","getSaleData","param","dispatch","url","get","then","response","data","http_status","catch","error","message","getSaleModalData","closeSaleModal","result"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { saleStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataLoaded: false,\r\n  saleData: [],\r\n  reRunComponent: true,\r\n  saleModalData: {\r\n    isLoading: false,\r\n    saleId: 0,\r\n    actionType: \"\",\r\n    isModalOpen: false,\r\n    modalHeading: \"\",\r\n    modalAction: \"\",\r\n    variant: \"\",\r\n  },\r\n  updateSaleData: {\r\n    isLoading: false,\r\n    isUpdated: false,\r\n    msg: \"\",\r\n    variant: \"\",\r\n  },\r\n  addSale\r\n};\r\n\r\nconst saleSlice = createSlice({\r\n  name: \"sale\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataLoaded = true;\r\n      state.saleData = action.payload.sale;\r\n    },\r\n    loadModalInitialData(state, action) {\r\n      state.saleModalData = {\r\n        isLoading: true,\r\n        saleId: action.payload.id,\r\n        actionType: action.payload.action,\r\n      };\r\n    },\r\n    loadSaleModal(state, action) {\r\n      state.saleModalData = {\r\n        isLoading: false,\r\n        modalData: action.payload.saleDetails,\r\n        saleId: action.payload.id,\r\n        isModalOpen: true,\r\n        modalHeading: action.payload.heading,\r\n        modalAction: action.payload.actionType,\r\n        variant: action.payload.variant,\r\n      };\r\n      console.log(state.saleModalData);\r\n    },\r\n    closeModal(state) {\r\n      state.saleModalData = {\r\n        isLoading: false,\r\n        saleId: 0,\r\n        actionType: \"\",\r\n        isModalOpen: false,\r\n        modalHeading: \"\",\r\n        modalAction: \"\",\r\n        variant: \"\",\r\n      };\r\n      state.updateSaleData = {\r\n        isLoading: false,\r\n        isUpdated: false,\r\n        msg: \"\",\r\n        variant: \"\",\r\n      };\r\n    },\r\n    updatingData(state) {\r\n      state.updateSaleData = {\r\n        ...state.updateSaleData,\r\n        isLoading: true,\r\n      };\r\n    },\r\n    dataUpdated(state, action) {\r\n      state.updateSaleData = {\r\n        isLoading: false,\r\n        isUpdated: true,\r\n        msg: action.payload.msg,\r\n        variant: action.payload.color,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default saleSlice;\r\n\r\nexport const getSaleData = (param = \"\") => {\r\n  return (dispatch) => {\r\n    let url = \"order/get-order-data\";\r\n    if (param) {\r\n      url = `order/get-order-data?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(saleStoreAction.getData({ sale: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getSaleModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      saleStoreAction.loadModalInitialData({\r\n        id: data.id,\r\n        action: data.action,\r\n      })\r\n    );\r\n    dispatch(\r\n      saleStoreAction.loadSaleModal({\r\n        id: data.id,\r\n        saleDetails: data.saleData,\r\n        heading:\r\n          data.action === \"Update\" ? \"Update the Order\" : \"Cancel The Order\",\r\n        actionType: data.action === \"Update\" ? \"Update\" : \"Cancel\",\r\n        variant: data.action === \"Update\" ? \"primary\" : \"danger\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const closeSaleModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.closeModal());\r\n  };\r\n};\r\n\r\nexport const updateSaleData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.updatingData());\r\n    const result = {\r\n      msg: \"Order has been updated successfully\",\r\n    };\r\n    dispatch(\r\n      saleStoreAction.dataUpdated({\r\n        msg: result.msg,\r\n        color: \"success\",\r\n      })\r\n    );\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}