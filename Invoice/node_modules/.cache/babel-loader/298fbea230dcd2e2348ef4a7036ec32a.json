{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Posts\\\\Modal\\\\CreateModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport FormTextArea from \"src/Components/UI/Input/FormTextArea\";\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\nimport { addPostData, closePostModal } from \"src/store/post.slice\";\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CreateModal = function CreateModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(),\n      athorName = _useFormValidate.inputValue,\n      setAuthorName = _useFormValidate.setInputValue,\n      authorNameChangeHandler = _useFormValidate.inputChangeHandler,\n      authorNameBlurHandler = _useFormValidate.inputBlurHandler;\n\n  var _useFormValidate2 = useFormValidate(),\n      postTitle = _useFormValidate2.inputValue,\n      setPostTitle = _useFormValidate2.setInputValue,\n      postTitleChangeHandler = _useFormValidate2.inputChangeHandler,\n      postTitleBlurHandler = _useFormValidate2.inputBlurHandler;\n\n  var _useFormValidate3 = useFormValidate(),\n      postContent = _useFormValidate3.inputValue,\n      setPostContent = _useFormValidate3.setInputValue,\n      postContentChangeHandler = _useFormValidate3.inputChangeHandler,\n      postContentBlurHandler = _useFormValidate3.inputBlurHandler;\n\n  var _useFormValidate4 = useFormValidate(),\n      postType = _useFormValidate4.inputValue,\n      setType = _useFormValidate4.setInputValue,\n      postTypeChangeHandler = _useFormValidate4.inputChangeHandler,\n      postTypeBlurHandler = _useFormValidate4.inputBlurHandler;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      modalData: state.postStore.addPostModalData,\n      updatedData: state.postStore.updatePostModalData\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    setAuthorName(\"Nishanth\");\n  }, [setAuthorName]);\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(closePostModal());\n    setPostTitle(\"\");\n    setPostContent(\"\");\n    setType(\"\");\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    var data = {\n      user_id: 1,\n      title: postTitle,\n      content: postContent,\n      status: postType\n    };\n    dispatch(addPostData(data));\n    setPostTitle(\"\");\n    setPostContent(\"\");\n    setType(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.modalData.isModalOpen,\n    onClose: modalCloseHandler,\n    heading: state.modalData.modalHeading,\n    variant: state.modalData.variant,\n    action: state.modalData.modalActionButton,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    loading: state.modalData.isLoading,\n    children: [state.updatedData.isUpdated && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: state.updatedData.variant,\n      text: state.updatedData.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(FormInputLabel, {\n      type: \"text\",\n      readOnly: true,\n      label: \"Author Name\",\n      value: athorName,\n      change: authorNameChangeHandler,\n      blur: authorNameBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormInputLabel, {\n      type: \"text\",\n      readOnly: false,\n      label: \"Post Title\",\n      value: postTitle,\n      change: postTitleChangeHandler,\n      blur: postTitleBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormTextArea, {\n      type: \"textarea\",\n      labelName: \"Post Content\",\n      readOnly: false,\n      rows: \"5\",\n      change: postContentChangeHandler,\n      value: postContent,\n      blur: postContentBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormSelect, {\n      label: \"Post Type\",\n      value: postType,\n      change: postTypeChangeHandler,\n      options: [\"Publish\", \"Draft\"],\n      blur: postTypeBlurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateModal, \"NUFFvAaAicAudQRE67qBegvy/n8=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = CreateModal;\nexport default CreateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Posts/Modal/CreateModal.js"],"names":["useEffect","CModal","useSelector","useDispatch","FormInputLabel","useFormValidate","FormTextArea","FormSelect","addPostData","closePostModal","CAlert","CreateModal","athorName","inputValue","setAuthorName","setInputValue","authorNameChangeHandler","inputChangeHandler","authorNameBlurHandler","inputBlurHandler","postTitle","setPostTitle","postTitleChangeHandler","postTitleBlurHandler","postContent","setPostContent","postContentChangeHandler","postContentBlurHandler","postType","setType","postTypeChangeHandler","postTypeBlurHandler","mapStateToProps","state","modalData","postStore","addPostModalData","updatedData","updatePostModalData","dispatch","modalCloseHandler","onSubmitHandler","e","preventDefault","data","user_id","title","content","status","isModalOpen","modalHeading","variant","modalActionButton","isLoading","isUpdated","msg"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport FormTextArea from \"src/Components/UI/Input/FormTextArea\";\r\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\r\nimport { addPostData, closePostModal } from \"src/store/post.slice\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nconst CreateModal = () => {\r\n  const {\r\n    inputValue: athorName,\r\n    setInputValue: setAuthorName,\r\n    inputChangeHandler: authorNameChangeHandler,\r\n    inputBlurHandler: authorNameBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: postTitle,\r\n    setInputValue: setPostTitle,\r\n    inputChangeHandler: postTitleChangeHandler,\r\n    inputBlurHandler: postTitleBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: postContent,\r\n    setInputValue: setPostContent,\r\n    inputChangeHandler: postContentChangeHandler,\r\n    inputBlurHandler: postContentBlurHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: postType,\r\n    setInputValue: setType,\r\n    inputChangeHandler: postTypeChangeHandler,\r\n    inputBlurHandler: postTypeBlurHandler,\r\n  } = useFormValidate();\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.postStore.addPostModalData,\r\n      updatedData: state.postStore.updatePostModalData,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setAuthorName(\"Nishanth\");\r\n  }, [setAuthorName]);\r\n  const modalCloseHandler = () => {\r\n    dispatch(closePostModal());\r\n    setPostTitle(\"\");\r\n    setPostContent(\"\");\r\n    setType(\"\");\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      user_id: 1,\r\n      title: postTitle,\r\n      content: postContent,\r\n      status: postType,\r\n    };\r\n    dispatch(addPostData(data));\r\n    setPostTitle(\"\");\r\n    setPostContent(\"\");\r\n    setType(\"\");\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalActionButton}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={state.modalData.isLoading}\r\n    >\r\n      {state.updatedData.isUpdated && (\r\n        <CAlert\r\n          color={state.updatedData.variant}\r\n          text={state.updatedData.msg}\r\n        />\r\n      )}\r\n      <FormInputLabel\r\n        type=\"text\"\r\n        readOnly={true}\r\n        label=\"Author Name\"\r\n        value={athorName}\r\n        change={authorNameChangeHandler}\r\n        blur={authorNameBlurHandler}\r\n      />\r\n      <FormInputLabel\r\n        type=\"text\"\r\n        readOnly={false}\r\n        label=\"Post Title\"\r\n        value={postTitle}\r\n        change={postTitleChangeHandler}\r\n        blur={postTitleBlurHandler}\r\n      />\r\n      <FormTextArea\r\n        type=\"textarea\"\r\n        labelName=\"Post Content\"\r\n        readOnly={false}\r\n        rows=\"5\"\r\n        change={postContentChangeHandler}\r\n        value={postContent}\r\n        blur={postContentBlurHandler}\r\n      ></FormTextArea>\r\n      <FormSelect\r\n        label=\"Post Type\"\r\n        value={postType}\r\n        change={postTypeChangeHandler}\r\n        options={[\"Publish\", \"Draft\"]}\r\n        blur={postTypeBlurHandler}\r\n      />\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default CreateModal;\r\n"]},"metadata":{},"sourceType":"module"}