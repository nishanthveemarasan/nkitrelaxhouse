{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { saleStoreAction } from \"./store\";\nvar initialState = {\n  isDataLoaded: false,\n  saleData: [],\n  reRunComponent: true,\n  saleModalData: {\n    isLoading: false,\n    saleId: 0,\n    actionType: \"\"\n  }\n};\nvar saleSlice = createSlice({\n  name: \"sale\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataLoaded = true;\n      state.saleData = action.payload.sale;\n    },\n    loadModalInitialData: function loadModalInitialData(state, action) {\n      state.saleModalData = {\n        isLoading: true,\n        saleId: action.payload.id,\n        actionType: action.payload.action\n      };\n    }\n  }\n});\nexport default saleSlice;\nexport var getSaleData = function getSaleData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"order/get-order-data\";\n\n    if (param) {\n      url = \"order/get-order-data?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(saleStoreAction.getData({\n          sale: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var getSaleModalData = function getSaleModalData(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.loadModalInitialData({\n      id: id\n    }));\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/sale-slice.js"],"names":["createSlice","API","saleStoreAction","initialState","isDataLoaded","saleData","reRunComponent","saleModalData","isLoading","saleId","actionType","saleSlice","name","reducers","getData","state","action","payload","sale","loadModalInitialData","id","getSaleData","param","dispatch","url","get","then","response","data","http_status","catch","error","console","log","message","getSaleModalData"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,KADK;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,cAAc,EAAE,IAHG;AAInBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE,KADE;AAEbC,IAAAA,MAAM,EAAE,CAFK;AAGbC,IAAAA,UAAU,EAAE;AAHC;AAJI,CAArB;AAWA,IAAMC,SAAS,GAAGX,WAAW,CAAC;AAC5BY,EAAAA,IAAI,EAAE,MADsB;AAE5BT,EAAAA,YAAY,EAAZA,YAF4B;AAG5BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACX,YAAN,GAAqB,IAArB;AACAW,MAAAA,KAAK,CAACV,QAAN,GAAiBW,MAAM,CAACC,OAAP,CAAeC,IAAhC;AACD,KAJO;AAKRC,IAAAA,oBALQ,gCAKaJ,KALb,EAKoBC,MALpB,EAK4B;AAClCD,MAAAA,KAAK,CAACR,aAAN,GAAsB;AACpBC,QAAAA,SAAS,EAAE,IADS;AAEpBC,QAAAA,MAAM,EAAEO,MAAM,CAACC,OAAP,CAAeG,EAFH;AAGpBV,QAAAA,UAAU,EAAEM,MAAM,CAACC,OAAP,CAAeD;AAHP,OAAtB;AAKD;AAXO;AAHkB,CAAD,CAA7B;AAiBA,eAAeL,SAAf;AAEA,OAAO,IAAMU,WAAW,GAAG,SAAdA,WAAc,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AACzC,SAAO,UAACC,QAAD,EAAc;AACnB,QAAIC,GAAG,GAAG,sBAAV;;AACA,QAAIF,KAAJ,EAAW;AACTE,MAAAA,GAAG,kCAA2BF,KAA3B,CAAH;AACD;;AACDrB,IAAAA,GAAG,CAACwB,GAAJ,CAAQD,GAAR,EACGE,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAd,KAA8B,GAAlC,EAAuC;AACrCN,QAAAA,QAAQ,CAACrB,eAAe,CAACY,OAAhB,CAAwB;AAAEI,UAAAA,IAAI,EAAES,QAAQ,CAACC,IAAT,CAAcA;AAAtB,SAAxB,CAAD,CAAR;AACD;AACF,KALH,EAMGE,KANH,CAMS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KARH;AASD,GAdD;AAeD,CAhBM;AAkBP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,IAAD,EAAU;AACxC,SAAO,UAACL,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACrB,eAAe,CAACiB,oBAAhB,CAAqC;AAC1CC,MAAAA,EAAE,EAAFA;AAD0C,KAArC,CAAD,CAAR;AAGD,GAJD;AAKD,CANM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { saleStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataLoaded: false,\r\n  saleData: [],\r\n  reRunComponent: true,\r\n  saleModalData: {\r\n    isLoading: false,\r\n    saleId: 0,\r\n    actionType: \"\",\r\n  },\r\n};\r\n\r\nconst saleSlice = createSlice({\r\n  name: \"sale\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataLoaded = true;\r\n      state.saleData = action.payload.sale;\r\n    },\r\n    loadModalInitialData(state, action) {\r\n      state.saleModalData = {\r\n        isLoading: true,\r\n        saleId: action.payload.id,\r\n        actionType: action.payload.action,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default saleSlice;\r\n\r\nexport const getSaleData = (param = \"\") => {\r\n  return (dispatch) => {\r\n    let url = \"order/get-order-data\";\r\n    if (param) {\r\n      url = `order/get-order-data?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(saleStoreAction.getData({ sale: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getSaleModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.loadModalInitialData({\r\n        id\r\n    }));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}