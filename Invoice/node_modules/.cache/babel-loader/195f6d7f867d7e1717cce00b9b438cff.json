{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nvar initialState = {\n  isDataChanged: false,\n  userData: [],\n  reRunComponent: true\n};\nvar userSlice = createSlice({\n  name: \"users\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataChanged = true;\n      state.userData = action.payload.user;\n    }\n  }\n});\nexport default userSlice;\n\nvar getUserData = function getUserData(param) {\n  return function (dispatch) {\n    var url = \"users/get-users\";\n    API.get();\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/user-slice.js"],"names":["createSlice","API","initialState","isDataChanged","userData","reRunComponent","userSlice","name","reducers","getData","state","action","payload","user","getUserData","param","dispatch","url","get"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAArB;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,OADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACP,aAAN,GAAsB,IAAtB;AACAO,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAeC,IAAhC;AACD;AAJO;AAHkB,CAAD,CAA7B;AAUA,eAAeP,SAAf;;AAEA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAU;AAC1B,SAAO,UAAAC,QAAQ,EAAG;AACd,QAAIC,GAAG,GAAG,iBAAV;AACAhB,IAAAA,GAAG,CAACiB,GAAJ;AACH,GAHD;AAIH,CALD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  userData: [],\r\n  reRunComponent: true,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.userData = action.payload.user;\r\n    },\r\n  },\r\n});\r\nexport default userSlice;\r\n\r\nconst getUserData = (param) =>{\r\n    return dispatch =>{\r\n        let url = \"users/get-users\"\r\n        API.get()\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}