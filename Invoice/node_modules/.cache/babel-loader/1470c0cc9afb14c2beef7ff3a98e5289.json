{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Sales\\\\Order\\\\OrderTableBody.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\nimport { getDate } from \"src/custom-functions\";\nimport classes from \"./Order.module.css\";\nimport { CBadge } from \"@coreui/react\";\nimport { getSaleModalData } from \"src/store/sale-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar OrderTableBody = function OrderTableBody(props) {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isLoading: state.sale\n    };\n  };\n\n  var dispatch = useDispatch();\n\n  var updateHandler = function updateHandler(id) {\n    var data = {\n      action: \"Update\",\n      id: props.body[id].id,\n      saleData: props.body[id]\n    };\n    dispatch(getSaleModalData(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.body.map(function (row, i) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.order_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.itemname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.sellcount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getStatus(row.sell_type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getDate(row.updated_at)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Update\",\n            class: classes.view,\n            name: \"cil-align-center\",\n            action: function action() {\n              return updateHandler(i);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, _this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Delete\",\n            class: classes.delete,\n            name: \"cil-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, _this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(OrderTableBody, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OrderTableBody;\nexport default OrderTableBody;\n\nvar getStatus = function getStatus(value) {\n  switch (value) {\n    case \"received\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"danger\",\n        children: \"Received\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, _this);\n\n    case \"processing\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"warning\",\n        children: \"Processing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, _this);\n\n    case \"packed\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"info\",\n        children: \"Packed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, _this);\n\n    case \"sent\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"success\",\n        children: \"Sent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, _this);\n\n    default:\n      return false;\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderTableBody\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Sales/Order/OrderTableBody.js"],"names":["useSelector","useDispatch","ActionButton","getDate","classes","CBadge","getSaleModalData","OrderTableBody","props","mapStateToProps","state","isLoading","sale","dispatch","updateHandler","id","data","action","body","saleData","map","row","i","order_number","itemname","sellcount","getStatus","sell_type","updated_at","view","delete","value"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport classes from \"./Order.module.css\";\r\nimport { CBadge } from \"@coreui/react\";\r\nimport { getSaleModalData } from \"src/store/sale-slice\";\r\nconst OrderTableBody = (props) => {\r\n  const mapStateToProps = (state) =>{\r\n    return{\r\n      isLoading: state.sale\r\n    }\r\n  }\r\n  const dispatch = useDispatch();\r\n  const updateHandler = (id) => {\r\n    const data = {\r\n      action: \"Update\",\r\n      id: props.body[id].id,\r\n      saleData: props.body[id],\r\n    };\r\n    dispatch(getSaleModalData(data));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>{row.order_number}</td>\r\n            <td>{row.itemname}</td>\r\n            <td>{row.sellcount}</td>\r\n            <td>{getStatus(row.sell_type)}</td>\r\n            <td>{getDate(row.updated_at)}</td>\r\n            <td>\r\n              <ActionButton\r\n                value=\"Update\"\r\n                class={classes.view}\r\n                name=\"cil-align-center\"\r\n                action={() => updateHandler(i)}\r\n              />{\" \"}\r\n              |{\" \"}\r\n              <ActionButton\r\n                value=\"Delete\"\r\n                class={classes.delete}\r\n                name=\"cil-trash\"\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default OrderTableBody;\r\n\r\nconst getStatus = (value) => {\r\n  switch (value) {\r\n    case \"received\":\r\n      return <CBadge color=\"danger\">Received</CBadge>;\r\n    case \"processing\":\r\n      return <CBadge color=\"warning\">Processing</CBadge>;\r\n    case \"packed\":\r\n      return <CBadge color=\"info\">Packed</CBadge>;\r\n    case \"sent\":\r\n      return <CBadge color=\"success\">Sent</CBadge>;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}