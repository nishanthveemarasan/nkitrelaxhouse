{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\ProductModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport { productStoreAction } from \"src/store/store\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport API from \"src/axios/axios\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProductModal = function ProductModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(\"\"),\n      productName = _useFormValidate.inputValue,\n      setName = _useFormValidate.setInputValue;\n\n  var _useFormValidate2 = useFormValidate(\"\"),\n      productCode = _useFormValidate2.inputValue,\n      setCode = _useFormValidate2.setInputValue;\n\n  var _useFormValidate3 = useFormValidate(\"\"),\n      stock = _useFormValidate3.inputValue,\n      setStock = _useFormValidate3.setInputValue,\n      onStockChangehandler = _useFormValidate3.inputChangeHandler;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      modalData: state.productStore.modalData,\n      id: state.productStore.modalData.productId,\n      isLoading: state.productStore.isLoading\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(productStoreAction.isDataLoading());\n    conso;\n    API.get(\"get-product-details/\".concat(state.id)).then(function (response) {\n      dispatch(productStoreAction.dataIsLoaded());\n      console.log(response.data.data);\n\n      if (response.data.http_status === 200) {\n        setName(response.data.data[0].itemname);\n        setCode(response.data.data[0].itemcode);\n        setStock(response.data.data[0].count);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [dispatch]);\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(productStoreAction.modalClose());\n  };\n\n  var onSubmitHandler = function onSubmitHandler(event) {\n    event.preventDefault();\n    var data = {\n      itemId: state.id,\n      itemCount: +stock,\n      action: \"update\"\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.modalData.isModalOpen,\n    onClose: modalCloseHandler,\n    heading: state.modalData.modalHeading,\n    variant: state.modalData.variant,\n    action: state.modalData.modalAction,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    children: [state.isLoading && \"loading\", !state.isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        value: productName,\n        label: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        value: productCode,\n        label: \"Product Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"number\",\n        readOnly: false,\n        value: stock,\n        change: onStockChangehandler,\n        label: \"Current Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProductModal, \"lmdyQNaSgru6QxFKKoPHMGgAKTg=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = ProductModal;\nexport default ProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/ProductModal.js"],"names":["React","useEffect","Form","useSelector","useDispatch","CModal","productStoreAction","useFormValidate","API","FormInput","ProductModal","productName","inputValue","setName","setInputValue","productCode","setCode","stock","setStock","onStockChangehandler","inputChangeHandler","mapStateToProps","state","modalData","productStore","id","productId","isLoading","dispatch","isDataLoading","conso","get","then","response","dataIsLoaded","console","log","data","http_status","itemname","itemcode","count","catch","error","modalCloseHandler","modalClose","onSubmitHandler","event","preventDefault","itemId","itemCount","action","isModalOpen","modalHeading","variant","modalAction"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\n\r\nconst ProductModal = () => {\r\n  const { inputValue: productName, setInputValue: setName } =\r\n    useFormValidate(\"\");\r\n  const { inputValue: productCode, setInputValue: setCode } =\r\n    useFormValidate(\"\");\r\n  const {\r\n    inputValue: stock,\r\n    setInputValue: setStock,\r\n    inputChangeHandler: onStockChangehandler,\r\n  } = useFormValidate(\"\");\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.productStore.modalData,\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(productStoreAction.isDataLoading());\r\n    conso\r\n    API.get(`get-product-details/${state.id}`)\r\n      .then((response) => {\r\n        dispatch(productStoreAction.dataIsLoaded());\r\n        console.log(response.data.data);\r\n        if (response.data.http_status === 200) {\r\n          setName(response.data.data[0].itemname);\r\n          setCode(response.data.data[0].itemcode);\r\n          setStock(response.data.data[0].count);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [dispatch]);\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.modalClose());\r\n  };\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const data = {\r\n      itemId: state.id,\r\n      itemCount: +stock,\r\n      action: \"update\",\r\n    };\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalAction}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n    >\r\n      {state.isLoading && \"loading\"}\r\n      {!state.isLoading && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            value={productName}\r\n            label=\"Product Name\"\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            value={productCode}\r\n            label=\"Product Code\"\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            value={stock}\r\n            change={onStockChangehandler}\r\n            label=\"Current Stock\"\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}