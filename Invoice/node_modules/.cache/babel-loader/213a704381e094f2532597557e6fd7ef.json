{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Posts\\\\AllPosts.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport CTable from \"src/Components/UI/Table/CTable\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport { getPostData } from \"src/store/post.slice\";\nimport AllPostBodyTable from \"./AllPostBodyTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AllPosts = function AllPosts() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isPostDataLoaded: state.postStore.isPostDataLoaded,\n      postData: state.postStore.postData,\n      reRunPostComponent: state.postStore.reRunPostComponent\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRunPostComponent) {\n      dispatch(getPostData());\n    }\n  }, [state.reRunPostComponent, dispatch]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    if (url) {\n      var getParam = url.split(\"?\")[1];\n      dispatch(getPostData(getParam));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, _this), state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(CTable, {\n      header: [\"#\", \"Author\", \"Title\", \"Content\", \"Date Created\", \"Comments\", \"Likes\", \"Published\", \"Status\", \"Action\"],\n      children: /*#__PURE__*/_jsxDEV(AllPostBodyTable, {\n        body: state.postData.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this), state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(Pagination, {\n      body: state.postData,\n      change: pageChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AllPosts, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AllPosts;\nexport default AllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Posts/AllPosts.js"],"names":["useEffect","useSelector","useDispatch","Loader","CTable","Pagination","getPostData","AllPostBodyTable","AllPosts","mapStateToProps","state","isPostDataLoaded","postStore","postData","reRunPostComponent","dispatch","pageChangeHandler","url","getParam","split","data"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,gBAAgB,EAAED,KAAK,CAACE,SAAN,CAAgBD,gBAD7B;AAELE,MAAAA,QAAQ,EAAEH,KAAK,CAACE,SAAN,CAAgBC,QAFrB;AAGLC,MAAAA,kBAAkB,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AAH/B,KAAP;AAKD,GAND;;AAOA,MAAMJ,KAAK,GAAGT,WAAW,CAACQ,eAAD,CAAzB;AAEA,MAAMM,QAAQ,GAAGb,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,KAAK,CAACI,kBAAV,EAA8B;AAC5BC,MAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACD;AACF,GAJQ,EAIN,CAACI,KAAK,CAACI,kBAAP,EAA2BC,QAA3B,CAJM,CAAT;;AAMA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AACjC,QAAIA,GAAJ,EAAS;AACP,UAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAjB;AACAJ,MAAAA,QAAQ,CAACT,WAAW,CAACY,QAAD,CAAZ,CAAR;AACD;AACF,GALD;;AAMA,sBACE;AAAA,eACG,CAACR,KAAK,CAACC,gBAAP,iBAA2B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAD9B,EAEGD,KAAK,CAACC,gBAAN,iBACC,QAAC,MAAD;AACE,MAAA,MAAM,EAAE,CACN,GADM,EAEN,QAFM,EAGN,OAHM,EAIN,SAJM,EAKN,cALM,EAMN,UANM,EAON,OAPM,EAQN,WARM,EASN,QATM,EAUN,QAVM,CADV;AAAA,6BAcE,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAED,KAAK,CAACG,QAAN,CAAeO;AAAvC;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,aAHJ,EAoBGV,KAAK,CAACC,gBAAN,iBACC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,KAAK,CAACG,QAAxB;AAAkC,MAAA,MAAM,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA,aArBJ;AAAA,kBADF;AA0BD,CAjDD;;GAAMR,Q;UAQUP,W,EAEGC,W;;;KAVbM,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport CTable from \"src/Components/UI/Table/CTable\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { getPostData } from \"src/store/post.slice\";\r\nimport AllPostBodyTable from \"./AllPostBodyTable\";\r\nconst AllPosts = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isPostDataLoaded: state.postStore.isPostDataLoaded,\r\n      postData: state.postStore.postData,\r\n      reRunPostComponent: state.postStore.reRunPostComponent,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunPostComponent) {\r\n      dispatch(getPostData());\r\n    }\r\n  }, [state.reRunPostComponent, dispatch]);\r\n\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const getParam = url.split(\"?\")[1];\r\n      dispatch(getPostData(getParam));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {!state.isPostDataLoaded && <Loader />}\r\n      {state.isPostDataLoaded && (\r\n        <CTable\r\n          header={[\r\n            \"#\",\r\n            \"Author\",\r\n            \"Title\",\r\n            \"Content\",\r\n            \"Date Created\",\r\n            \"Comments\",\r\n            \"Likes\",\r\n            \"Published\",\r\n            \"Status\",\r\n            \"Action\",\r\n          ]}\r\n        >\r\n          <AllPostBodyTable body={state.postData.data} />\r\n        </CTable>\r\n      )}\r\n      {state.isPostDataLoaded && (\r\n        <Pagination body={state.postData} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AllPosts;\r\n"]},"metadata":{},"sourceType":"module"}