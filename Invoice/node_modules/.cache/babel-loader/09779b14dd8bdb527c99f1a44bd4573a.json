{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { sendGetAdminApi } from \"src/service/appService\";\nimport { getUrl } from \"src/service/customService\";\nimport { userStoreAction } from \"./store\";\nvar initialState = {\n  isUserDataLoaded: false,\n  userData: [],\n  reRunComponent: {\n    isDataChanged: true,\n    queryParam: \"\",\n    postId: \"all\"\n  },\n  userModalData: {\n    userRoles: [\"Admin\", \"User\"],\n    userId: 0,\n    actionType: \"\",\n    isModalOpen: false,\n    modalHeading: \"\",\n    modalAction: \"\",\n    variant: \"\",\n    userRole: \"\",\n    userStatus: \"\"\n  },\n  updateUserData: {\n    isLoading: false,\n    isDataUpdated: false,\n    msg: \"\",\n    color: \"\"\n  }\n};\nvar userSlice = createSlice({\n  name: \"users\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isUserDataLoaded = true;\n      state.userData = action.payload.user;\n    },\n    updateUserId: function updateUserId(state, action) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        postId: action.payload.i\n      });\n    },\n    updateParam: function updateParam(state, action) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        queryParam: action.payload.param\n      });\n    },\n    openUserModal: function openUserModal(state, action) {\n      state.userModalData = _objectSpread(_objectSpread({}, state.userModalData), {}, {\n        isModalOpen: true,\n        userId: action.payload.id,\n        userRole: action.payload.userRole,\n        userStatus: action.payload.userStatus,\n        actionType: action.payload.actionType,\n        modalHeading: action.payload.heading,\n        variant: action.payload.variant,\n        modalAction: action.payload.modalAction\n      });\n    },\n    updatingData: function updatingData(state) {\n      state.updateUserData = _objectSpread(_objectSpread({}, state.updateUserData), {}, {\n        isLoading: true,\n        isDataUpdated: false\n      });\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        isDataChanged: false\n      });\n    },\n    dataUpdated: function dataUpdated(state, action) {\n      state.reRunComponent = _objectSpread(_objectSpread({}, state.reRunComponent), {}, {\n        isDataChanged: true\n      });\n      state.updateUserData = {\n        isLoading: false,\n        isDataUpdated: true,\n        msg: action.payload.msg,\n        color: action.payload.color\n      };\n    },\n    closeModal: function closeModal(state) {\n      state.userModalData = {\n        userRoles: [\"Admin\", \"User\"],\n        userId: 0,\n        actionType: \"\",\n        isModalOpen: false,\n        modalHeading: \"\",\n        modalAction: \"\",\n        variant: \"\",\n        userRole: \"\",\n        userStatus: \"\"\n      };\n      state.updateUserData = {\n        isLoading: false,\n        isDataUpdated: false,\n        msg: \"\",\n        color: \"\"\n      };\n    }\n  }\n});\nexport default userSlice;\nexport var getUserData = function getUserData(data) {\n  return function (dispatch) {\n    var url = getUrl(\"users/get-users\", data.param);\n    sendGetAdminApi(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(userStoreAction.getData({\n          user: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var getUserModalData = function getUserModalData(data) {\n  return function (dispatch) {\n    var button = data.userStatus === \"1\" ? \"Disable\" : \"Enable\";\n    dispatch(userStoreAction.openUserModal({\n      id: data.id,\n      actionType: data.action,\n      userRole: data.userRole,\n      userStatus: data.userStatus,\n      modalAction: data.action === \"assign\" ? \"Assign Role\" : button,\n      heading: data.action === \"assign\" ? \"Assign Role to the User\" : \"Enable/Disable the User\",\n      variant: data.action === \"assign\" ? \"primary\" : \"danger\"\n    }));\n  };\n};\nexport var editUserRole = function editUserRole(data) {\n  return function (dispatch) {\n    dispatch(userStoreAction.updatingData());\n    API.post(\"users/edit-user-role\", data).then(function (response) {\n      dispatch(userStoreAction.dataUpdated({\n        msg: response.data.data.msg,\n        color: \"success\"\n      }));\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};\nexport var disableUser = function disableUser(data) {\n  return function (dispatch) {\n    dispatch(userStoreAction.updatingData());\n    API.post(\"users/disable-a-user\", data).then(function (response) {\n      dispatch(userStoreAction.dataUpdated({\n        msg: response.data.data.msg,\n        color: \"success\"\n      }));\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};\nexport var closeUserModal = function closeUserModal() {\n  return function (dispatch) {\n    dispatch(userStoreAction.closeModal());\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/user-slice.js"],"names":["createSlice","API","sendGetAdminApi","getUrl","userStoreAction","initialState","isUserDataLoaded","userData","reRunComponent","isDataChanged","queryParam","postId","userModalData","userRoles","userId","actionType","isModalOpen","modalHeading","modalAction","variant","userRole","userStatus","updateUserData","isLoading","isDataUpdated","msg","color","userSlice","name","reducers","getData","state","action","payload","user","updateUserId","i","updateParam","param","openUserModal","id","heading","updatingData","dataUpdated","closeModal","getUserData","data","dispatch","url","then","response","http_status","catch","error","console","log","message","getUserModalData","button","editUserRole","post","disableUser","closeUserModal"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { sendGetAdminApi } from \"src/service/appService\";\r\nimport { getUrl } from \"src/service/customService\";\r\nimport { userStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isUserDataLoaded: false,\r\n  userData: [],\r\n  reRunComponent: {\r\n    isDataChanged: true,\r\n    queryParam: \"\",\r\n    postId: \"all\",\r\n  },\r\n  userModalData: {\r\n    userRoles: [\"Admin\", \"User\"],\r\n    userId: 0,\r\n    actionType: \"\",\r\n    isModalOpen: false,\r\n    modalHeading: \"\",\r\n    modalAction: \"\",\r\n    variant: \"\",\r\n    userRole: \"\",\r\n    userStatus: \"\",\r\n  },\r\n  updateUserData: {\r\n    isLoading: false,\r\n    isDataUpdated: false,\r\n    msg: \"\",\r\n    color: \"\",\r\n  },\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isUserDataLoaded = true;\r\n      state.userData = action.payload.user;\r\n    },\r\n    updateUserId(state , action){\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        postId: action.payload.i,\r\n      };\r\n    },\r\n    updateParam(state, action) {\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        queryParam: action.payload.param,\r\n      };\r\n    },\r\n    openUserModal(state, action) {\r\n      state.userModalData = {\r\n        ...state.userModalData,\r\n        isModalOpen: true,\r\n        userId: action.payload.id,\r\n        userRole: action.payload.userRole,\r\n        userStatus: action.payload.userStatus,\r\n        actionType: action.payload.actionType,\r\n        modalHeading: action.payload.heading,\r\n        variant: action.payload.variant,\r\n        modalAction: action.payload.modalAction,\r\n      };\r\n    },\r\n    updatingData(state) {\r\n      state.updateUserData = {\r\n        ...state.updateUserData,\r\n        isLoading: true,\r\n        isDataUpdated: false,\r\n      };\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        isDataChanged: false,\r\n      };\r\n    },\r\n    dataUpdated(state, action) {\r\n      state.reRunComponent = {\r\n        ...state.reRunComponent,\r\n        isDataChanged: true,\r\n      };\r\n      state.updateUserData = {\r\n        isLoading: false,\r\n        isDataUpdated: true,\r\n        msg: action.payload.msg,\r\n        color: action.payload.color,\r\n      };\r\n    },\r\n    closeModal(state) {\r\n      state.userModalData = {\r\n        userRoles: [\"Admin\", \"User\"],\r\n        userId: 0,\r\n        actionType: \"\",\r\n        isModalOpen: false,\r\n        modalHeading: \"\",\r\n        modalAction: \"\",\r\n        variant: \"\",\r\n        userRole: \"\",\r\n        userStatus: \"\",\r\n      };\r\n      state.updateUserData = {\r\n        isLoading: false,\r\n        isDataUpdated: false,\r\n        msg: \"\",\r\n        color: \"\",\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default userSlice;\r\n\r\nexport const getUserData = (data) => {\r\n  return (dispatch) => {\r\n    const url = getUrl(\"users/get-users\", data.param);\r\n    sendGetAdminApi(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(userStoreAction.getData({ user: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserModalData = (data) => {\r\n  return (dispatch) => {\r\n    const button = data.userStatus === \"1\" ? \"Disable\" : \"Enable\";\r\n    dispatch(\r\n      userStoreAction.openUserModal({\r\n        id: data.id,\r\n        actionType: data.action,\r\n        userRole: data.userRole,\r\n        userStatus: data.userStatus,\r\n        modalAction: data.action === \"assign\" ? \"Assign Role\" : button,\r\n        heading:\r\n          data.action === \"assign\"\r\n            ? \"Assign Role to the User\"\r\n            : \"Enable/Disable the User\",\r\n        variant: data.action === \"assign\" ? \"primary\" : \"danger\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const editUserRole = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(userStoreAction.updatingData());\r\n    API.post(\"users/edit-user-role\", data)\r\n      .then((response) => {\r\n        dispatch(\r\n          userStoreAction.dataUpdated({\r\n            msg: response.data.data.msg,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n\r\nexport const disableUser = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(userStoreAction.updatingData());\r\n    API.post(\"users/disable-a-user\", data)\r\n      .then((response) => {\r\n        dispatch(\r\n          userStoreAction.dataUpdated({\r\n            msg: response.data.data.msg,\r\n            color: \"success\",\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n\r\nexport const closeUserModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(userStoreAction.closeModal());\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}