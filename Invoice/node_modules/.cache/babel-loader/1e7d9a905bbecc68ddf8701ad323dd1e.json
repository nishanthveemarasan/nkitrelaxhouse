{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Users\\\\AllUsers\\\\UserTableBody.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\nimport { useDispatch } from \"react-redux\";\nimport classes from \"./AllUsers.module.css\";\nimport { getUserModalData } from \"src/store/user-slice\";\nimport ToolTip from \"src/Components/UI/Tooltip/ToolTip\";\nimport CBadge from \"src/Components/UI/Badge/CBadge\";\nimport { useHistory } from \"react-router\";\nimport { commentStoreAction, userStoreAction } from \"src/store/store\";\nimport CButton from \"src/Components/UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar UserTableBody = function UserTableBody(props) {\n  _s();\n\n  var history = useHistory();\n  var dispatch = useDispatch();\n\n  var assignRoleHandler = function assignRoleHandler(i) {\n    var data = {\n      id: props.body[i].id,\n      userRole: props.body[i].roles,\n      userStatus: props.body[i].status,\n      action: \"assign\"\n    };\n    dispatch(getUserModalData(data));\n  };\n\n  var disableUser = function disableUser(i) {\n    var data = {\n      id: props.body[i].id,\n      userRole: props.body[i].status,\n      userStatus: props.body[i].status,\n      action: \"delete\"\n    };\n    dispatch(getUserModalData(data));\n  };\n\n  var onJobViewHandler = function onJobViewHandler(i) {\n    var data;\n\n    if (props.body[i].jobs) {\n      data = {\n        id: props.body[i].id,\n        jobData: {\n          jobId: \"\".concat(props.body[i].jobs.emp_type.toUpperCase(), \"-\").concat(props.body[i].jobs.emp_number),\n          title: props.body[i].jobs.job_title,\n          joinedDate: props.body[i].jobs.job_started_date,\n          jobType: props.body[i].jobs.job_type,\n          action: \"update\"\n        }\n      };\n    } else {\n      data = {\n        id: props.body[i].id,\n        jobData: {\n          jobId: \"EMP-100002\",\n          title: \"\",\n          joinedDate: new Date(),\n          jobType: \"part-time\",\n          action: \"create\"\n        }\n      };\n    }\n\n    dispatch(userStoreAction.openJobModal(data));\n  };\n\n  var onContactViewHandler = function onContactViewHandler(i) {\n    var _props$body$i$address, _props$body$i$address2, _props$body$i$address3, _props$body$i$address4;\n\n    var data = {\n      phone: ((_props$body$i$address = props.body[i].address) === null || _props$body$i$address === void 0 ? void 0 : _props$body$i$address.phone) ? props.body[i].address.phone : \"Not Provided Yet\",\n      city: ((_props$body$i$address2 = props.body[i].address) === null || _props$body$i$address2 === void 0 ? void 0 : _props$body$i$address2.city) ? props.body[i].address.city : \"Not Provided Yet\",\n      country: ((_props$body$i$address3 = props.body[i].address) === null || _props$body$i$address3 === void 0 ? void 0 : _props$body$i$address3.country) ? props.body[i].address.country : \"Not Provided Yet\",\n      postal_code: ((_props$body$i$address4 = props.body[i].address) === null || _props$body$i$address4 === void 0 ? void 0 : _props$body$i$address4.postal_code) ? props.body[i].address.postal_code : \"Not Provided Yet\"\n    };\n    dispatch(userStoreAction.openAddressModal({\n      data: data\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.body.map(function (row, i) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getRoles(row.roles)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getCount(row.id, row.posts_count, history, dispatch, \"primary\", \"post\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getCount(row.id, row.comments_count, history, dispatch, \"primary\", \"comment\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.likes_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getStatus(row.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            type: \"button\",\n            name: \"View\",\n            click: onJobViewHandler.bind(null, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            type: \"button\",\n            name: \"View\",\n            click: onContactViewHandler.bind(null, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n            value: \"Assign Roles\",\n            class: classes.view,\n            name: \"cil-align-center\",\n            action: function action() {\n              return assignRoleHandler(i);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, _this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(ActionButton, {\n            value: row.status === \"1\" ? \"Disable\" : \"Enable\",\n            class: classes.delete,\n            name: \"cil-trash\",\n            action: function action() {\n              return disableUser(i);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, _this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false);\n};\n\n_s(UserTableBody, \"ztFVC0/0rI8de3REyGzb7ruuLNE=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = UserTableBody;\nexport default UserTableBody;\n\nvar getRoles = function getRoles(value) {\n  switch (value) {\n    case \"admin\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"success\",\n        value: \"Admin\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 14\n      }, _this);\n\n    case \"user\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"warning\",\n        value: \"User\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 14\n      }, _this);\n\n    default:\n      return false;\n  }\n};\n\nvar getStatus = function getStatus(value) {\n  switch (value) {\n    case \"1\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"success\",\n        value: \"Active\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 14\n      }, _this);\n\n    case \"0\":\n      return /*#__PURE__*/_jsxDEV(CBadge, {\n        color: \"danger\",\n        value: \"Inactive\",\n        size: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 14\n      }, _this);\n\n    default:\n      return false;\n  }\n};\n\nvar getCount = function getCount(userId, value, history, dispatch, color, type) {\n  var onSubmitHandler = function onSubmitHandler(history, userId, dispatch, type) {\n    if (type === \"post\") {\n      dispatch(userStoreAction.updateUserId({\n        userId: userId\n      }));\n      history.push(\"/admin/post-filter\");\n    } else if (type === \"comment\") {\n      dispatch(commentStoreAction.updateFilterComment({\n        userId: userId\n      }));\n      history.push(\"/admin/comment-filter\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToolTip, {\n    value: \"Click Here\",\n    children: /*#__PURE__*/_jsxDEV(CBadge, {\n      color: color,\n      value: value,\n      size: \"100%\",\n      click: onSubmitHandler.bind(null, history, userId, dispatch, type)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, _this);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTableBody\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Users/AllUsers/UserTableBody.js"],"names":["ActionButton","useDispatch","classes","getUserModalData","ToolTip","CBadge","useHistory","commentStoreAction","userStoreAction","CButton","UserTableBody","props","history","dispatch","assignRoleHandler","i","data","id","body","userRole","roles","userStatus","status","action","disableUser","onJobViewHandler","jobs","jobData","jobId","emp_type","toUpperCase","emp_number","title","job_title","joinedDate","job_started_date","jobType","job_type","Date","openJobModal","onContactViewHandler","phone","address","city","country","postal_code","openAddressModal","map","row","name","email","getRoles","getCount","posts_count","comments_count","likes_count","getStatus","bind","view","delete","value","userId","color","type","onSubmitHandler","updateUserId","push","updateFilterComment"],"mappings":"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","sourcesContent":["import ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport classes from \"./AllUsers.module.css\";\r\nimport { getUserModalData } from \"src/store/user-slice\";\r\nimport ToolTip from \"src/Components/UI/Tooltip/ToolTip\";\r\nimport CBadge from \"src/Components/UI/Badge/CBadge\";\r\nimport { useHistory } from \"react-router\";\r\nimport { commentStoreAction, userStoreAction } from \"src/store/store\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nconst UserTableBody = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const assignRoleHandler = (i) => {\r\n    const data = {\r\n      id: props.body[i].id,\r\n      userRole: props.body[i].roles,\r\n      userStatus: props.body[i].status,\r\n      action: \"assign\",\r\n    };\r\n    dispatch(getUserModalData(data));\r\n  };\r\n  const disableUser = (i) => {\r\n    const data = {\r\n      id: props.body[i].id,\r\n      userRole: props.body[i].status,\r\n      userStatus: props.body[i].status,\r\n      action: \"delete\",\r\n    };\r\n    dispatch(getUserModalData(data));\r\n  };\r\n\r\n  const onJobViewHandler = (i) => {\r\n    let data;\r\n    if (props.body[i].jobs) {\r\n      data = {\r\n        id: props.body[i].id,\r\n        jobData: {\r\n          jobId: `${props.body[i].jobs.emp_type.toUpperCase()}-${\r\n            props.body[i].jobs.emp_number\r\n          }`,\r\n          title: props.body[i].jobs.job_title,\r\n          joinedDate: props.body[i].jobs.job_started_date,\r\n          jobType: props.body[i].jobs.job_type,\r\n          action: \"update\",\r\n        },\r\n      };\r\n    } else {\r\n      data = {\r\n        id: props.body[i].id,\r\n        jobData: {\r\n          jobId: `EMP-100002`,\r\n          title: \"\",\r\n          joinedDate: new Date(),\r\n          jobType: \"part-time\",\r\n          action: \"create\",\r\n        },\r\n      };\r\n    }\r\n    dispatch(userStoreAction.openJobModal(data));\r\n  };\r\n\r\n  const onContactViewHandler = (i) => {\r\n    const data = {\r\n      phone: props.body[i].address?.phone\r\n        ? props.body[i].address.phone\r\n        : \"Not Provided Yet\",\r\n      city: props.body[i].address?.city\r\n        ? props.body[i].address.city\r\n        : \"Not Provided Yet\",\r\n      country: props.body[i].address?.country\r\n        ? props.body[i].address.country\r\n        : \"Not Provided Yet\",\r\n      postal_code: props.body[i].address?.postal_code\r\n        ? props.body[i].address.postal_code\r\n        : \"Not Provided Yet\",\r\n    };\r\n    dispatch(\r\n      userStoreAction.openAddressModal({\r\n        data,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>{row.name}</td>\r\n            <td>{row.email}</td>\r\n            <td>{getRoles(row.roles)}</td>\r\n            <td>\r\n              {getCount(\r\n                row.id,\r\n                row.posts_count,\r\n                history,\r\n                dispatch,\r\n                \"primary\",\r\n                \"post\"\r\n              )}\r\n            </td>\r\n            <td>\r\n              {getCount(\r\n                row.id,\r\n                row.comments_count,\r\n                history,\r\n                dispatch,\r\n                \"primary\",\r\n                \"comment\"\r\n              )}\r\n            </td>\r\n            <td>{row.likes_count}</td>\r\n            <td>{getStatus(row.status)}</td>\r\n            <td>\r\n              <CButton\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                name=\"View\"\r\n                click={onJobViewHandler.bind(null, i)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <CButton\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                name=\"View\"\r\n                click={onContactViewHandler.bind(null, i)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <ActionButton\r\n                value=\"Assign Roles\"\r\n                class={classes.view}\r\n                name=\"cil-align-center\"\r\n                action={() => assignRoleHandler(i)}\r\n              />{\" \"}\r\n              |{\" \"}\r\n              <ActionButton\r\n                value={row.status === \"1\" ? \"Disable\" : \"Enable\"}\r\n                class={classes.delete}\r\n                name=\"cil-trash\"\r\n                action={() => disableUser(i)}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserTableBody;\r\nconst getRoles = (value) => {\r\n  switch (value) {\r\n    case \"admin\":\r\n      return <CBadge color=\"success\" value=\"Admin\" size=\"100%\" />;\r\n    case \"user\":\r\n      return <CBadge color=\"warning\" value=\"User\" size=\"100%\" />;\r\n\r\n    default:\r\n      return false;\r\n  }\r\n};\r\nconst getStatus = (value) => {\r\n  switch (value) {\r\n    case \"1\":\r\n      return <CBadge color=\"success\" value=\"Active\" size=\"100%\" />;\r\n    case \"0\":\r\n      return <CBadge color=\"danger\" value=\"Inactive\" size=\"100%\" />;\r\n\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nconst getCount = (userId, value, history, dispatch, color, type) => {\r\n  const onSubmitHandler = (history, userId, dispatch, type) => {\r\n    if (type === \"post\") {\r\n      dispatch(userStoreAction.updateUserId({ userId }));\r\n      history.push(\"/admin/post-filter\");\r\n    } else if (type === \"comment\") {\r\n      dispatch(commentStoreAction.updateFilterComment({ userId }));\r\n      history.push(\"/admin/comment-filter\");\r\n    }\r\n  };\r\n  return (\r\n    <ToolTip value=\"Click Here\">\r\n      <CBadge\r\n        color={color}\r\n        value={value}\r\n        size=\"100%\"\r\n        click={onSubmitHandler.bind(null, history, userId, dispatch, type)}\r\n      />\r\n    </ToolTip>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}