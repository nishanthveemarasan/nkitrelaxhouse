{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\ModalContentBody.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport API from \"src/axios/axios\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { getModalData } from \"src/store/product-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ModalContentBody = function ModalContentBody() {\n  _s();\n\n  var _useFormValidate = useFormValidate(\"\"),\n      productName = _useFormValidate.inputValue,\n      setName = _useFormValidate.setInputValue;\n\n  var _useFormValidate2 = useFormValidate(\"\"),\n      productCode = _useFormValidate2.inputValue,\n      setCode = _useFormValidate2.setInputValue;\n\n  var _useFormValidate3 = useFormValidate(\"\"),\n      stock = _useFormValidate3.inputValue,\n      setStock = _useFormValidate3.setInputValue,\n      onStockChangehandler = _useFormValidate3.inputChangeHandler;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      id: state.productStore.modalData.productId,\n      isLoading: state.productStore.isLoading\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    API.get(\"get-product-details/\".concat(state.id)).then(function (response) {\n      if (response.data.http_status === 200) {\n        setName(response.data.data[0].itemname);\n        setCode(response.data.data[0].itemcode);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [dispatch]);\n\n  var onSubmitHandler = function onSubmitHandler(event) {\n    event.preventDefault(); // const data\n  };\n\n  if (!state.isLoading) {// setName(state.modalActionData.itemname);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [state.isLoading && \"loading\", !state.isLoading && /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        value: productName,\n        label: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        readOnly: true,\n        value: productCode,\n        label: \"Product Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"number\",\n        readOnly: false,\n        value: state.modalActionData.count,\n        label: \"Current Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ModalContentBody, \"Q7H58NAAzHw7w5T5UC68fSNZmPk=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = ModalContentBody;\nexport default ModalContentBody;\n/*\r\ncount: \"25\"\r\ncreated_at: null\r\nid: 2\r\nitemcode: \"BST-500/S\"\r\nitemname: \"Francois Bar Stool 74cm - Black\"\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalContentBody\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/ModalContentBody.js"],"names":["React","useEffect","Form","useSelector","useDispatch","API","FormInput","useFormValidate","getModalData","ModalContentBody","productName","inputValue","setName","setInputValue","productCode","setCode","stock","setStock","onStockChangehandler","inputChangeHandler","mapStateToProps","state","id","productStore","modalData","productId","isLoading","dispatch","get","then","response","data","http_status","itemname","itemcode","catch","error","console","log","onSubmitHandler","event","preventDefault","modalActionData","count"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { getModalData } from \"src/store/product-slice\";\r\nconst ModalContentBody = () => {\r\n  const { inputValue: productName, setInputValue: setName } =\r\n    useFormValidate(\"\");\r\n  const { inputValue: productCode, setInputValue: setCode } =\r\n    useFormValidate(\"\");\r\n  const { inputValue: stock, setInputValue: setStock , inputChangeHandler: onStockChangehandler } =\r\n    useFormValidate(\"\");\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    API.get(`get-product-details/${state.id}`)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          setName(response.data.data[0].itemname);\r\n          setCode(response.data.data[0].itemcode);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    // const data\r\n  };\r\n  if (!state.isLoading) {\r\n    // setName(state.modalActionData.itemname);\r\n  }\r\n  return (\r\n    <>\r\n      {state.isLoading && \"loading\"}\r\n      {!state.isLoading && (\r\n        <Form onSubmit={onSubmitHandler}>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            value={productName}\r\n            label=\"Product Name\"\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            value={productCode}\r\n            label=\"Product Code\"\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            value={state.modalActionData.count}\r\n            label=\"Current Stock\"\r\n          />\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ModalContentBody;\r\n/*\r\ncount: \"25\"\r\ncreated_at: null\r\nid: 2\r\nitemcode: \"BST-500/S\"\r\nitemname: \"Francois Bar Stool 74cm - Black\"\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}