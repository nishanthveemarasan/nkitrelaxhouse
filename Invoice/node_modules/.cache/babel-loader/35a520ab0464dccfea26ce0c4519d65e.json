{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getProductApi } from \"src/service/appService\";\nimport { itemStoreAction } from \"./store\";\nvar initialState = {\n  isDataChanged: false,\n  itemData: []\n};\nvar itemSlice = createSlice({\n  name: \"items\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.isDataChanged = false;\n    },\n    dataIsChanged: function dataIsChanged(state) {\n      state.isDataChanged = true;\n    },\n    getResponse: function getResponse(state, action) {\n      state.products = action.payload.items;\n      state.isPageLoading = true;\n      console.log(state.products);\n    }\n  }\n});\nexport default itemSlice;\nexport var getItemData = function getItemData(url, row) {\n  return function (dispatch) {\n    dispatch(itemStoreAction.sendRequest());\n    getProductApi(url, row).then(function (response) {\n      dispatch(itemStoreAction.dataIsChanged());\n      dispatch(itemStoreAction.getResponse({\n        items: response.data.data\n      }));\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/item-slice.js"],"names":["createSlice","getProductApi","itemStoreAction","initialState","isDataChanged","itemData","itemSlice","name","reducers","sendRequest","state","dataIsChanged","getResponse","action","products","payload","items","isPageLoading","console","log","getItemData","url","row","dispatch","then","response","data","catch","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,aAAa,EAAE,KADK;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAArB;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,OADsB;AAE5BJ,EAAAA,YAAY,EAAZA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACW;AACjBA,MAAAA,KAAK,CAACN,aAAN,GAAsB,KAAtB;AACD,KAHO;AAIRO,IAAAA,aAJQ,yBAIMD,KAJN,EAIa;AACnBA,MAAAA,KAAK,CAACN,aAAN,GAAsB,IAAtB;AACD,KANO;AAORQ,IAAAA,WAPQ,uBAOIF,KAPJ,EAOWG,MAPX,EAOmB;AACzBH,MAAAA,KAAK,CAACI,QAAN,GAAiBD,MAAM,CAACE,OAAP,CAAeC,KAAhC;AACAN,MAAAA,KAAK,CAACO,aAAN,GAAsB,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACI,QAAlB;AACD;AAXO;AAHkB,CAAD,CAA7B;AAiBA,eAAeR,SAAf;AAEA,OAAO,IAAMc,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAc;AACvC,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACrB,eAAe,CAACO,WAAhB,EAAD,CAAR;AACAR,IAAAA,aAAa,CAACoB,GAAD,EAAMC,GAAN,CAAb,CACGE,IADH,CACQ,UAACC,QAAD,EAAc;AAClBF,MAAAA,QAAQ,CAACrB,eAAe,CAACS,aAAhB,EAAD,CAAR;AACAY,MAAAA,QAAQ,CACNrB,eAAe,CAACU,WAAhB,CAA4B;AAC1BI,QAAAA,KAAK,EAAES,QAAQ,CAACC,IAAT,CAAcA;AADK,OAA5B,CADM,CAAR;AAKD,KARH,EASGC,KATH,CASS,UAACC,KAAD,EAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACH,QAAlB;AACD,KAXH;AAYD,GAdD;AAeD,CAhBM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getProductApi } from \"src/service/appService\";\r\nimport { itemStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n isDataChanged: false,\r\n itemData: [],\r\n \r\n};\r\n\r\nconst itemSlice = createSlice({\r\n  name: \"items\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.isDataChanged = false;\r\n    },\r\n    dataIsChanged(state) {\r\n      state.isDataChanged = true;\r\n    },\r\n    getResponse(state, action) {\r\n      state.products = action.payload.items;\r\n      state.isPageLoading = true;\r\n      console.log(state.products);\r\n    },\r\n  },\r\n});\r\nexport default itemSlice;\r\n\r\nexport const getItemData = (url, row) => {\r\n  return (dispatch) => {\r\n    dispatch(itemStoreAction.sendRequest());\r\n    getProductApi(url, row)\r\n      .then((response) => {\r\n        dispatch(itemStoreAction.dataIsChanged());\r\n        dispatch(\r\n          itemStoreAction.getResponse({\r\n            items: response.data.data,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}