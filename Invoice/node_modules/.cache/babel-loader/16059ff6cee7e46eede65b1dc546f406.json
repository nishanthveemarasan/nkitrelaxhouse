{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\views\\\\Home\\\\Posts\\\\Posts.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport { getPostData } from \"src/store/post.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Posts = function Posts() {\n  _s();\n\n  var _state$postData, _state$postData2;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isPostDataLoaded: state.postStore.isPostDataLoaded,\n      postData: state.postStore.postData,\n      reRunPostComponent: state.postStore.reRunPostComponent\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRunPostComponent.isDataChanged) {\n      var data = {\n        id: \"all\",\n        param: state.reRunPostComponent.queryParam\n      };\n      dispatch(getPostData(data));\n    }\n  }, [state.reRunPostComponent.isDataChanged, dispatch, state.reRunPostComponent.queryParam]);\n  console.log((_state$postData = state.postData) === null || _state$postData === void 0 ? void 0 : _state$postData.data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, _this), state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: \"3%\"\n      },\n      children: (_state$postData2 = state.postData) === null || _state$postData2 === void 0 ? void 0 : _state$postData2.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Posts, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/views/Home/Posts/Posts.js"],"names":["useEffect","Container","useSelector","useDispatch","Loader","getPostData","Posts","mapStateToProps","state","isPostDataLoaded","postStore","postData","reRunPostComponent","dispatch","isDataChanged","data","id","param","queryParam","console","log","marginTop"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA;;AAClB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,gBAAgB,EAAED,KAAK,CAACE,SAAN,CAAgBD,gBAD7B;AAELE,MAAAA,QAAQ,EAAEH,KAAK,CAACE,SAAN,CAAgBC,QAFrB;AAGLC,MAAAA,kBAAkB,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AAH/B,KAAP;AAKD,GAND;;AAOA,MAAMJ,KAAK,GAAGN,WAAW,CAACK,eAAD,CAAzB;AAEA,MAAMM,QAAQ,GAAGV,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,KAAK,CAACI,kBAAN,CAAyBE,aAA7B,EAA4C;AAC1C,UAAMC,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAE,KADO;AAEXC,QAAAA,KAAK,EAAET,KAAK,CAACI,kBAAN,CAAyBM;AAFrB,OAAb;AAIAL,MAAAA,QAAQ,CAACR,WAAW,CAACU,IAAD,CAAZ,CAAR;AACD;AACF,GARQ,EAQN,CACDP,KAAK,CAACI,kBAAN,CAAyBE,aADxB,EAEDD,QAFC,EAGDL,KAAK,CAACI,kBAAN,CAAyBM,UAHxB,CARM,CAAT;AAaAC,EAAAA,OAAO,CAACC,GAAR,oBAAYZ,KAAK,CAACG,QAAlB,oDAAY,gBAAgBI,IAA5B;AACA,sBACE;AAAA,eACG,CAACP,KAAK,CAACC,gBAAP,iBAA2B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAD9B,EAEGD,KAAK,CAACC,gBAAN,iBACC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA,oCACEb,KAAK,CAACG,QADR,qDACE,iBAAgBI;AADlB;AAAA;AAAA;AAAA;AAAA,aAHJ;AAAA,kBADF;AAUD,CAnCD;;GAAMT,K;UAQUJ,W,EAEGC,W;;;KAVbG,K;AAoCN,eAAeA,KAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport { getPostData } from \"src/store/post.slice\";\r\nconst Posts = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isPostDataLoaded: state.postStore.isPostDataLoaded,\r\n      postData: state.postStore.postData,\r\n      reRunPostComponent: state.postStore.reRunPostComponent,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunPostComponent.isDataChanged) {\r\n      const data = {\r\n        id: \"all\",\r\n        param: state.reRunPostComponent.queryParam,\r\n      };\r\n      dispatch(getPostData(data));\r\n    }\r\n  }, [\r\n    state.reRunPostComponent.isDataChanged,\r\n    dispatch,\r\n    state.reRunPostComponent.queryParam,\r\n  ]);\r\n  console.log(state.postData?.data);\r\n  return (\r\n    <>\r\n      {!state.isPostDataLoaded && <Loader />}\r\n      {state.isPostDataLoaded && (\r\n        <Container style={{ marginTop: \"3%\" }}>\r\n         {state.postData?.data}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}