{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\ProductModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport API from \"src/axios/axios\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { productStoreAction } from \"src/store/store\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ProductModal = function ProductModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(),\n      productName = _useFormValidate.inputValue,\n      setProductName = _useFormValidate.setInputValue,\n      productNameChangeHandler = _useFormValidate.inputChangeHandler,\n      productNameRestHandler = _useFormValidate.reset;\n\n  var _useFormValidate2 = useFormValidate(),\n      productCode = _useFormValidate2.inputValue,\n      setProductCode = _useFormValidate2.setInputValue,\n      productCodeChangeHandler = _useFormValidate2.inputChangeHandler,\n      productCodeRestHandler = _useFormValidate2.reset;\n\n  var _useFormValidate3 = useFormValidate(),\n      stock = _useFormValidate3.inputValue,\n      setstock = _useFormValidate3.setInputValue,\n      stockChangeHandler = _useFormValidate3.inputChangeHandler,\n      stockRestHandler = _useFormValidate3.reset;\n\n  var _useState = useState({\n    isLoading: false,\n    hideForm: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalState = _useState2[0],\n      setModalState = _useState2[1];\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      modalData: state.productStore.modalData,\n      id: state.productStore.modalData.productId,\n      isLoading: state.productStore.isLoading,\n      initialLoad: state.productStore.initialLoad\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(productStoreAction.modalClose());\n  };\n\n  useEffect(function () {\n    if (state.modalData.isModalOpen) {\n      setProductCode(state.modalData.data.itemcode);\n      setProductName(state.modalData.data.itemname);\n      setstock(state.modalData.data.count);\n    }\n  }, [state.modalData, setProductCode]);\n\n  var onSubmitHandler = function onSubmitHandler() {};\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.modalData.isModalOpen,\n    onClose: modalCloseHandler,\n    heading: state.modalData.modalHeading,\n    variant: state.modalData.variant,\n    action: state.modalData.modalAction,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    loading: modalState.isLoading,\n    children: state.initialLoad.action === 'Update' && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProductModal, \"WbCBUfoE0yQVtbFdJLRnOC3UCnQ=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = ProductModal;\nexport default ProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/ProductModal.js"],"names":["React","useState","useEffect","useSelector","useDispatch","API","FormInput","CModal","useFormValidate","productStoreAction","ProductModal","productName","inputValue","setProductName","setInputValue","productNameChangeHandler","inputChangeHandler","productNameRestHandler","reset","productCode","setProductCode","productCodeChangeHandler","productCodeRestHandler","stock","setstock","stockChangeHandler","stockRestHandler","isLoading","hideForm","modalState","setModalState","mapStateToProps","state","modalData","productStore","id","productId","initialLoad","dispatch","modalCloseHandler","modalClose","isModalOpen","data","itemcode","itemname","count","onSubmitHandler","modalHeading","variant","modalAction","action"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,yBAKIF,eAAe,EALnB;AAAA,MACcG,WADd,oBACEC,UADF;AAAA,MAEiBC,cAFjB,oBAEEC,aAFF;AAAA,MAGsBC,wBAHtB,oBAGEC,kBAHF;AAAA,MAISC,sBAJT,oBAIEC,KAJF;;AAMA,0BAKIV,eAAe,EALnB;AAAA,MACcW,WADd,qBACEP,UADF;AAAA,MAEiBQ,cAFjB,qBAEEN,aAFF;AAAA,MAGsBO,wBAHtB,qBAGEL,kBAHF;AAAA,MAISM,sBAJT,qBAIEJ,KAJF;;AAMA,0BAKIV,eAAe,EALnB;AAAA,MACce,KADd,qBACEX,UADF;AAAA,MAEiBY,QAFjB,qBAEEV,aAFF;AAAA,MAGsBW,kBAHtB,qBAGET,kBAHF;AAAA,MAISU,gBAJT,qBAIER,KAJF;;AAMA,kBAAoCjB,QAAQ,CAAC;AAC3C0B,IAAAA,SAAS,EAAE,KADgC;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,SAAS,EAAED,KAAK,CAACE,YAAN,CAAmBD,SADzB;AAELE,MAAAA,EAAE,EAAEH,KAAK,CAACE,YAAN,CAAmBD,SAAnB,CAA6BG,SAF5B;AAGLT,MAAAA,SAAS,EAAEK,KAAK,CAACE,YAAN,CAAmBP,SAHzB;AAILU,MAAAA,WAAW,EAAEL,KAAK,CAACE,YAAN,CAAmBG;AAJ3B,KAAP;AAMD,GAPD;;AAQA,MAAML,KAAK,GAAG7B,WAAW,CAAC4B,eAAD,CAAzB;AACA,MAAMO,QAAQ,GAAGlC,WAAW,EAA5B;;AAEA,MAAMmC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BD,IAAAA,QAAQ,CAAC7B,kBAAkB,CAAC+B,UAAnB,EAAD,CAAR;AACD,GAFD;;AAGAtC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI8B,KAAK,CAACC,SAAN,CAAgBQ,WAApB,EAAiC;AAC/BrB,MAAAA,cAAc,CAACY,KAAK,CAACC,SAAN,CAAgBS,IAAhB,CAAqBC,QAAtB,CAAd;AACA9B,MAAAA,cAAc,CAACmB,KAAK,CAACC,SAAN,CAAgBS,IAAhB,CAAqBE,QAAtB,CAAd;AACApB,MAAAA,QAAQ,CAACQ,KAAK,CAACC,SAAN,CAAgBS,IAAhB,CAAqBG,KAAtB,CAAR;AACD;AACF,GANQ,EAMN,CAACb,KAAK,CAACC,SAAP,EAAkBb,cAAlB,CANM,CAAT;;AAQA,MAAM0B,eAAe,GAAG,SAAlBA,eAAkB,GAAM,CAAE,CAAhC;;AACA,sBACE,QAAC,MAAD;AACE,IAAA,MAAM,EAAEd,KAAK,CAACC,SAAN,CAAgBQ,WAD1B;AAEE,IAAA,OAAO,EAAEF,iBAFX;AAGE,IAAA,OAAO,EAAEP,KAAK,CAACC,SAAN,CAAgBc,YAH3B;AAIE,IAAA,OAAO,EAAEf,KAAK,CAACC,SAAN,CAAgBe,OAJ3B;AAKE,IAAA,MAAM,EAAEhB,KAAK,CAACC,SAAN,CAAgBgB,WAL1B;AAME,IAAA,IAAI,EAAC,IANP;AAOE,IAAA,eAAe,EAAEH,eAPnB;AAQE,IAAA,OAAO,EAAEjB,UAAU,CAACF,SARtB;AAAA,cAUGK,KAAK,CAACK,WAAN,CAAkBa,MAAlB,KAA6B,QAA7B,iBACD;AAXF;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CAhED;;GAAMxC,Y;UAMAF,e,EAMAA,e,EAMAA,e,EAaUL,W,EACGC,W;;;KAhCbM,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\n\r\nconst ProductModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    setInputValue: setProductName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    reset: productNameRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    setInputValue: setProductCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n    reset: productCodeRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stock,\r\n    setInputValue: setstock,\r\n    inputChangeHandler: stockChangeHandler,\r\n    reset: stockRestHandler,\r\n  } = useFormValidate();\r\n  const [modalState, setModalState] = useState({\r\n    isLoading: false,\r\n    hideForm: true,\r\n  });\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.productStore.modalData,\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n      initialLoad: state.productStore.initialLoad,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.modalClose());\r\n  };\r\n  useEffect(() => {\r\n    if (state.modalData.isModalOpen) {\r\n      setProductCode(state.modalData.data.itemcode);\r\n      setProductName(state.modalData.data.itemname);\r\n      setstock(state.modalData.data.count);\r\n    }\r\n  }, [state.modalData, setProductCode]);\r\n\r\n  const onSubmitHandler = () => {};\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalAction}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={modalState.isLoading}\r\n    >\r\n      {state.initialLoad.action === 'Update' && \r\n      <>\r\n      \r\n      </>}\r\n     \r\n    </CModal>\r\n  );\r\n};\r\nexport default ProductModal;\r\n"]},"metadata":{},"sourceType":"module"}