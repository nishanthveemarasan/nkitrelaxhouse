{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\UI\\\\Table\\\\CTableHeader.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport FormInputLabel from \"../Input/FormInputLabel\";\nimport FormSelect from \"../Input/FormSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CTableHeader = function CTableHeader(props) {\n  _s();\n\n  var _useState = useState(\"10\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      cRow = _useState2[0],\n      setCRow = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      typed = _useState6[0],\n      setTyped = _useState6[1];\n\n  useEffect(function () {\n    var delayDebounceFn;\n\n    if (typed) {\n      delayDebounceFn = setTimeout(function () {\n        props.searchHandler(search);\n      }, 500);\n    }\n\n    return function () {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [search, typed]);\n\n  var onValueChange = function onValueChange(e, type) {\n    var value = e.target.value;\n\n    if (type === \"row\") {\n      setCRow(value);\n      var row = Number(value);\n      props.rowChangeHandler(row);\n    }\n\n    if (type === \"search\") {\n      setTyped(true);\n      setSearch(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"5%\"\n    },\n    className: \"d-flex justify-content-between\",\n    sm: 12,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"8%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FormSelect, {\n        label: false,\n        value: cRow,\n        change: function change(e) {\n          return onValueChange(e, \"row\");\n        },\n        options: [\"10\", \"20\", \"50\", \"100\", \"250\"],\n        chooseOption: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FormInputLabel, {\n        type: \"text\",\n        readOnly: false,\n        label: false,\n        placeHolder: \"Search Items\",\n        value: search,\n        change: function change(e) {\n          return onValueChange(e, \"search\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CTableHeader, \"CmoUhhGlVt6vBAw6thHqyvg3dls=\");\n\n_c = CTableHeader;\nexport default CTableHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CTableHeader\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/UI/Table/CTableHeader.js"],"names":["useEffect","useState","Container","FormInputLabel","FormSelect","CTableHeader","props","cRow","setCRow","search","setSearch","typed","setTyped","delayDebounceFn","setTimeout","searchHandler","clearTimeout","onValueChange","e","type","value","target","row","Number","rowChangeHandler","marginTop","width"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAC9B,kBAAwBL,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA0BT,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,eAAJ;;AACA,QAAIF,KAAJ,EAAW;AACTE,MAAAA,eAAe,GAAGC,UAAU,CAAC,YAAM;AACjCR,QAAAA,KAAK,CAACS,aAAN,CAAoBN,MAApB;AACD,OAF2B,EAEzB,GAFyB,CAA5B;AAGD;;AACD,WAAO,YAAM;AACXO,MAAAA,YAAY,CAACH,eAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACJ,MAAD,EAASE,KAAT,CAVM,CAAT;;AAWA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAIC,IAAJ,EAAa;AACjC,QAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;;AAEA,QAAID,IAAI,KAAK,KAAb,EAAoB;AAClBX,MAAAA,OAAO,CAACY,KAAD,CAAP;AACA,UAAME,GAAG,GAAGC,MAAM,CAACH,KAAD,CAAlB;AACAd,MAAAA,KAAK,CAACkB,gBAAN,CAAuBF,GAAvB;AACD;;AACD,QAAIH,IAAI,KAAK,QAAb,EAAuB;AACrBP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,SAAS,CAACU,KAAD,CAAT;AACD;AACF,GAZD;;AAaA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,EAAE,EAAE,EAHN;AAAA,4BAKE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAE,KADT;AAEE,QAAA,KAAK,EAAEnB,IAFT;AAGE,QAAA,MAAM,EAAE,gBAACW,CAAD;AAAA,iBAAOD,aAAa,CAACC,CAAD,EAAI,KAAJ,CAApB;AAAA,SAHV;AAIE,QAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,EAA0B,KAA1B,CAJX;AAKE,QAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aALF,eAcE;AAAK,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,KAAK,EAAE,KAHT;AAIE,QAAA,WAAW,EAAC,cAJd;AAKE,QAAA,KAAK,EAAEjB,MALT;AAME,QAAA,MAAM,EAAE,gBAACS,CAAD;AAAA,iBAAOD,aAAa,CAACC,CAAD,EAAI,QAAJ,CAApB;AAAA;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAdF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA2BD,CAvDD;;GAAMb,Y;;KAAAA,Y;AAwDN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport FormInputLabel from \"../Input/FormInputLabel\";\r\nimport FormSelect from \"../Input/FormSelect\";\r\n\r\nconst CTableHeader = (props) => {\r\n  const [cRow, setCRow] = useState(\"10\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [typed, setTyped] = useState(false);\r\n  useEffect(() => {\r\n    let delayDebounceFn;\r\n    if (typed) {\r\n      delayDebounceFn = setTimeout(() => {\r\n        props.searchHandler(search);\r\n      }, 500);\r\n    }\r\n    return () => {\r\n      clearTimeout(delayDebounceFn);\r\n    };\r\n  }, [search, typed]);\r\n  const onValueChange = (e, type) => {\r\n    const value = e.target.value;\r\n\r\n    if (type === \"row\") {\r\n      setCRow(value);\r\n      const row = Number(value);\r\n      props.rowChangeHandler(row);\r\n    }\r\n    if (type === \"search\") {\r\n      setTyped(true);\r\n      setSearch(value);\r\n    }\r\n  };\r\n  return (\r\n    <Container\r\n      style={{ marginTop: \"5%\" }}\r\n      className=\"d-flex justify-content-between\"\r\n      sm={12}\r\n    >\r\n      <div style={{ width: \"8%\" }}>\r\n        <FormSelect\r\n          label={false}\r\n          value={cRow}\r\n          change={(e) => onValueChange(e, \"row\")}\r\n          options={[\"10\", \"20\", \"50\", \"100\", \"250\"]}\r\n          chooseOption={false}\r\n        />\r\n      </div>\r\n      <div style={{ width: \"30%\" }}>\r\n        <FormInputLabel\r\n          type=\"text\"\r\n          readOnly={false}\r\n          label={false}\r\n          placeHolder=\"Search Items\"\r\n          value={search}\r\n          change={(e) => onValueChange(e, \"search\")}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default CTableHeader;\r\n"]},"metadata":{},"sourceType":"module"}