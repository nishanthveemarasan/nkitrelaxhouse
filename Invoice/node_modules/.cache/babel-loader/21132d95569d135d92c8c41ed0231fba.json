{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { productStoreAction } from \"./store\";\nvar initialState = {\n  isDataChanged: false,\n  productData: [],\n  reRunData: true,\n  modalActionData: \"\",\n  isLoading: false,\n  modalData: {\n    isModalOpen: false,\n    productId: 0,\n    modalAction: \"\",\n    modalHeading: \"\",\n    variant: \"\"\n  },\n  openModal: false,\n  initialLoad: {\n    loading: false,\n    action: \"\",\n    id: 0\n  },\n  updateData: {\n    isLoading: false,\n    dataUpdated: false\n  }\n};\nvar productSlice = createSlice({\n  name: \"products\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataChanged = true;\n      state.productData = action.payload.data;\n    },\n    dataChanged: function dataChanged(state) {\n      state.reRunData = true;\n    },\n    dataNotChanged: function dataNotChanged(state) {\n      state.reRunData = false;\n    },\n    modalOpen: function modalOpen(state, action) {\n      state.modalData = {\n        isModalOpen: true,\n        productId: action.payload.id,\n        modalAction: action.payload.action,\n        modalHeading: action.payload.heading,\n        variant: action.payload.variant,\n        data: action.payload.tableData\n      };\n    },\n    modalClose: function modalClose(state) {\n      state.modalData = {\n        isModalOpen: false,\n        productId: 0,\n        modalAction: \"\",\n        modalHeading: \"\"\n      };\n      state.initialLoad = {\n        loading: false,\n        action: \"\",\n        id: 0\n      };\n    },\n    isDataLoading: function isDataLoading(state) {\n      state.isLoading = true;\n    },\n    dataIsLoaded: function dataIsLoaded(state) {\n      state.isLoading = false;\n    },\n    addProductModal: function addProductModal(state, action) {\n      state.openModal = action.payload.data;\n    },\n    getModal: function getModal(state, action) {\n      state.initialLoad = {\n        loading: action.payload.value,\n        action: action.payload.type,\n        id: action.payload.id\n      };\n    },\n    initiateUpdateData: function initiateUpdateData(state) {\n      state.updateData = _objectSpread(_objectSpread({}, state.updateData), {}, {\n        isLoading: true,\n        dataUpdated: false\n      });\n    }\n  }\n});\nexport default productSlice;\nexport var getProductData = function getProductData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"get-all-chairs\";\n\n    if (param) {\n      url = \"get-all-chairs?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(productStoreAction.getData({\n          data: response.data.data\n        }));\n      }\n    }).catch();\n  };\n};\nexport var getModalData = function getModalData(data) {\n  return function (dispatch) {\n    dispatch(productStoreAction.getModal({\n      id: data.id,\n      value: true,\n      type: data.action\n    }));\n    API.get(\"get-product-details/\".concat(data.id)).then(function (response) {\n      if (response.data.http_status === 200) {\n        var output = {\n          id: data.id,\n          action: data.action,\n          heading: data.action === \"Update\" ? \"Update the Product\" : \"Delete the Product\",\n          variant: data.action === \"Update\" ? \"primary\" : \"danger\",\n          tableData: response.data.data[0]\n        };\n        dispatch(productStoreAction.getModal({\n          id: data.id,\n          value: false,\n          type: data.action\n        }));\n        dispatch(productStoreAction.modalOpen(output));\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; // } else if (data.action === \"Delete\") {\n  //   return (dispatch) => {\n  //     dispatch(\n  //       productStoreAction.getModal({\n  //         id: data.id,\n  //         value: true,\n  //         type: data.action,\n  //       })\n  //     );\n  //     const output = {\n  //       id: data.id,\n  //       action: data.action,\n  //       heading: \"Delete the Product\",\n  //       variant: \"danger\",\n  //       tableData: \"\",\n  //     };\n  //     dispatch(productStoreAction.modalOpen(output));\n  //   };\n  // }\n};\nexport var updateProductData = function updateProductData(data) {\n  return function (dispatch) {\n    dispatch(productStoreAction.initiateUpdateData());\n    API.post(\"\");\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/product-slice.js"],"names":["createSlice","API","productStoreAction","initialState","isDataChanged","productData","reRunData","modalActionData","isLoading","modalData","isModalOpen","productId","modalAction","modalHeading","variant","openModal","initialLoad","loading","action","id","updateData","dataUpdated","productSlice","name","reducers","getData","state","payload","data","dataChanged","dataNotChanged","modalOpen","heading","tableData","modalClose","isDataLoading","dataIsLoaded","addProductModal","getModal","value","type","initiateUpdateData","getProductData","param","dispatch","url","get","then","response","http_status","catch","getModalData","output","error","console","log","updateProductData","post"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { productStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataChanged: false,\r\n  productData: [],\r\n  reRunData: true,\r\n  modalActionData: \"\",\r\n  isLoading: false,\r\n  modalData: {\r\n    isModalOpen: false,\r\n    productId: 0,\r\n    modalAction: \"\",\r\n    modalHeading: \"\",\r\n    variant: \"\",\r\n  },\r\n  openModal: false,\r\n  initialLoad: {\r\n    loading: false,\r\n    action: \"\",\r\n    id: 0,\r\n  },\r\n  updateData: {\r\n    isLoading: false,\r\n    dataUpdated: false,\r\n  },\r\n};\r\n\r\nconst productSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataChanged = true;\r\n      state.productData = action.payload.data;\r\n    },\r\n    dataChanged(state) {\r\n      state.reRunData = true;\r\n    },\r\n    dataNotChanged(state) {\r\n      state.reRunData = false;\r\n    },\r\n    modalOpen(state, action) {\r\n      state.modalData = {\r\n        isModalOpen: true,\r\n        productId: action.payload.id,\r\n        modalAction: action.payload.action,\r\n        modalHeading: action.payload.heading,\r\n        variant: action.payload.variant,\r\n        data: action.payload.tableData,\r\n      };\r\n    },\r\n    modalClose(state) {\r\n      state.modalData = {\r\n        isModalOpen: false,\r\n        productId: 0,\r\n        modalAction: \"\",\r\n        modalHeading: \"\",\r\n      };\r\n      state.initialLoad = {\r\n        loading: false,\r\n        action: \"\",\r\n        id: 0,\r\n      };\r\n    },\r\n    isDataLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    dataIsLoaded(state) {\r\n      state.isLoading = false;\r\n    },\r\n    addProductModal(state, action) {\r\n      state.openModal = action.payload.data;\r\n    },\r\n    getModal(state, action) {\r\n      state.initialLoad = {\r\n        loading: action.payload.value,\r\n        action: action.payload.type,\r\n        id: action.payload.id,\r\n      };\r\n    },\r\n    initiateUpdateData(state) {\r\n      state.updateData = {\r\n        ...state.updateData,\r\n        isLoading: true,\r\n        dataUpdated: false,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default productSlice;\r\n\r\nexport const getProductData = (param = \"\") => {\r\n  return (dispatch) => {\r\n    let url = \"get-all-chairs\";\r\n    if (param) {\r\n      url = `get-all-chairs?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(productStoreAction.getData({ data: response.data.data }));\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n\r\nexport const getModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      productStoreAction.getModal({\r\n        id: data.id,\r\n        value: true,\r\n        type: data.action,\r\n      })\r\n    );\r\n    API.get(`get-product-details/${data.id}`)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const output = {\r\n            id: data.id,\r\n            action: data.action,\r\n            heading:\r\n              data.action === \"Update\"\r\n                ? \"Update the Product\"\r\n                : \"Delete the Product\",\r\n            variant: data.action === \"Update\" ? \"primary\" : \"danger\",\r\n            tableData: response.data.data[0],\r\n          };\r\n          dispatch(\r\n            productStoreAction.getModal({\r\n              id: data.id,\r\n              value: false,\r\n              type: data.action,\r\n            })\r\n          );\r\n          dispatch(productStoreAction.modalOpen(output));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // } else if (data.action === \"Delete\") {\r\n  //   return (dispatch) => {\r\n  //     dispatch(\r\n  //       productStoreAction.getModal({\r\n  //         id: data.id,\r\n  //         value: true,\r\n  //         type: data.action,\r\n  //       })\r\n  //     );\r\n  //     const output = {\r\n  //       id: data.id,\r\n  //       action: data.action,\r\n  //       heading: \"Delete the Product\",\r\n  //       variant: \"danger\",\r\n  //       tableData: \"\",\r\n  //     };\r\n  //     dispatch(productStoreAction.modalOpen(output));\r\n  //   };\r\n  // }\r\n};\r\n\r\nexport const updateProductData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(productStoreAction.initiateUpdateData());\r\n    API.post(\"\")\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}