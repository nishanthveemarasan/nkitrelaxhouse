{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\Product.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport { getProductData } from \"src/store/product-slice\";\nimport CTableBody from \"./CTableBody\";\nimport CTable from \"src/Components/Table/CTable\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Product = function Product() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isDataChanged: state.productStore.isDataChanged,\n      productData: state.productStore.productData,\n      reRunData: state.productStore.reRunData,\n      isModalOpen: state.productStore.isModalOpen\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRunData) {\n      dispatch(getProductData());\n    }\n  }, [dispatch, state.reRunData]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    var getParam = url.split(\"?\")[1];\n    dispatch(getProductData(getParam));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), \"}\", !state.isDataChanged && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }, _this), state.isDataChanged && /*#__PURE__*/_jsxDEV(CTable, {\n      header: [\"#\", \"Item Name\", \"Item Code\", \"Current Stock\", \"Last Updated\", \"Action\"],\n      children: /*#__PURE__*/_jsxDEV(CTableBody, {\n        body: state.productData.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, _this), state.isDataChanged && /*#__PURE__*/_jsxDEV(Pagination, {\n      body: state.productData,\n      change: pageChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Product, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/Product.js"],"names":["React","useEffect","useSelector","useDispatch","Loader","Pagination","getProductData","CTableBody","CTable","CModal","Product","mapStateToProps","state","isDataChanged","productStore","productData","reRunData","isModalOpen","dispatch","pageChangeHandler","url","getParam","split","data"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,aAAa,EAAED,KAAK,CAACE,YAAN,CAAmBD,aAD7B;AAELE,MAAAA,WAAW,EAAEH,KAAK,CAACE,YAAN,CAAmBC,WAF3B;AAGLC,MAAAA,SAAS,EAAEJ,KAAK,CAACE,YAAN,CAAmBE,SAHzB;AAILC,MAAAA,WAAW,EAAEL,KAAK,CAACE,YAAN,CAAmBG;AAJ3B,KAAP;AAMD,GAPD;;AAQA,MAAML,KAAK,GAAGV,WAAW,CAACS,eAAD,CAAzB;AAEA,MAAMO,QAAQ,GAAGf,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,KAAK,CAACI,SAAV,EAAqB;AACnBE,MAAAA,QAAQ,CAACZ,cAAc,EAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACY,QAAD,EAAWN,KAAK,CAACI,SAAjB,CAJM,CAAT;;AAMA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AACjC,QAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAjB;AACAJ,IAAAA,QAAQ,CAACZ,cAAc,CAACe,QAAD,CAAf,CAAR;AACD,GAHD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,OAEG,CAACT,KAAK,CAACC,aAAP,iBAAwB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAF3B,EAGGD,KAAK,CAACC,aAAN,iBACC,QAAC,MAAD;AACE,MAAA,MAAM,EAAE,CACN,GADM,EAEN,WAFM,EAGN,WAHM,EAIN,eAJM,EAKN,cALM,EAMN,QANM,CADV;AAAA,6BAUE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAED,KAAK,CAACG,WAAN,CAAkBQ;AAApC;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,aAJJ,EAiBGX,KAAK,CAACC,aAAN,iBACC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,KAAK,CAACG,WAAxB;AAAqC,MAAA,MAAM,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA,aAlBJ;AAAA,kBADF;AAuBD,CA7CD;;GAAMT,O;UASUR,W,EAEGC,W;;;KAXbO,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { getProductData } from \"src/store/product-slice\";\r\nimport CTableBody from \"./CTableBody\";\r\nimport CTable from \"src/Components/Table/CTable\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\n\r\nconst Product = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isDataChanged: state.productStore.isDataChanged,\r\n      productData: state.productStore.productData,\r\n      reRunData: state.productStore.reRunData,\r\n      isModalOpen: state.productStore.isModalOpen,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunData) {\r\n      dispatch(getProductData());\r\n    }\r\n  }, [dispatch, state.reRunData]);\r\n\r\n  const pageChangeHandler = (url) => {\r\n    const getParam = url.split(\"?\")[1];\r\n    dispatch(getProductData(getParam));\r\n  };\r\n  return (\r\n    <>\r\n      <CModal />}\r\n      {!state.isDataChanged && <Loader />}\r\n      {state.isDataChanged && (\r\n        <CTable\r\n          header={[\r\n            \"#\",\r\n            \"Item Name\",\r\n            \"Item Code\",\r\n            \"Current Stock\",\r\n            \"Last Updated\",\r\n            \"Action\",\r\n          ]}\r\n        >\r\n          <CTableBody body={state.productData.data} />\r\n        </CTable>\r\n      )}\r\n      {state.isDataChanged && (\r\n        <Pagination body={state.productData} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Product;\r\n"]},"metadata":{},"sourceType":"module"}