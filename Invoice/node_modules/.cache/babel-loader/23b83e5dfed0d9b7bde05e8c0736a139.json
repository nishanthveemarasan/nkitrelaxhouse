{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nimport { registerStoreAction } from \"./store\";\nvar initialState = {\n  isLoading: false,\n  message: {\n    msg: [],\n    color: \"\",\n    status: false,\n    isRegistered: false\n  }\n};\nvar registerSlice = createSlice({\n  name: \"register\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.isLoading = true;\n    }\n  }\n});\nexport default registerSlice;\nexport var registerData = function registerData(data) {\n  return function (dispatch) {\n    dispatch(registerStoreAction.sendRequest());\n    console.log(data);\n    API.post(\"users/create\", data).then(function (response) {\n      console.log(response.data);\n    }).catch(function (error) {\n      var array = [];\n\n      for (var key in error) {\n        console.log(error.response);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/register-slice.js"],"names":["createSlice","API","registerStoreAction","initialState","isLoading","message","msg","color","status","isRegistered","registerSlice","name","reducers","sendRequest","state","registerData","data","dispatch","console","log","post","then","response","catch","error","array","key"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,mBAAT,QAAoC,SAApC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,EADE;AAEPC,IAAAA,KAAK,EAAE,EAFA;AAGPC,IAAAA,MAAM,EAAE,KAHD;AAIPC,IAAAA,YAAY,EAAE;AAJP;AAFU,CAArB;AAUA,IAAMC,aAAa,GAAGV,WAAW,CAAC;AAChCW,EAAAA,IAAI,EAAE,UAD0B;AAEhCR,EAAAA,YAAY,EAAZA,YAFgC;AAGhCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACW;AACjBA,MAAAA,KAAK,CAACV,SAAN,GAAkB,IAAlB;AACD;AAHO;AAHsB,CAAD,CAAjC;AASA,eAAeM,aAAf;AAEA,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACf,mBAAmB,CAACW,WAApB,EAAD,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAf,IAAAA,GAAG,CAACmB,IAAJ,CAAS,cAAT,EAAyBJ,IAAzB,EACGK,IADH,CACQ,UAACC,QAAD,EAAc;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACN,IAArB;AACD,KAHH,EAIGO,KAJH,CAIS,UAACC,KAAD,EAAW;AAChB,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAI,IAAIC,GAAR,IAAeF,KAAf;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACF,QAAlB;AADA;AAED,KARH;AASD,GAZD;AAaD,CAdM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\nimport { registerStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  message: {\r\n    msg: [],\r\n    color: \"\",\r\n    status: false,\r\n    isRegistered: false,\r\n  },\r\n};\r\n\r\nconst registerSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.isLoading = true;\r\n    },\r\n  },\r\n});\r\nexport default registerSlice;\r\n\r\nexport const registerData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(registerStoreAction.sendRequest());\r\n    console.log(data);\r\n    API.post(\"users/create\", data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        let array = [];\r\n        for(let key in error)\r\n        console.log(error.response);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}