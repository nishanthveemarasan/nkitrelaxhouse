{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { sendGetApi } from \"src/service/appService\";\nimport { shopStoreAction } from \"./store\";\nvar initialState = {\n  shop: {\n    product: [],\n    isDataReceived: false,\n    reRunComponent: true\n  }\n};\nvar shopSlice = createSlice({\n  name: \"shop\",\n  initialState: initialState,\n  reducers: {\n    sendRequest: function sendRequest(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: false\n      });\n    },\n    getStoreProduct: function getStoreProduct(state, action) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        product: action.payload.data,\n        param: \"\"\n      });\n    },\n    getResponse: function getResponse(state) {\n      state.shop = _objectSpread(_objectSpread({}, state.shop), {}, {\n        isDataReceived: true\n      });\n    }\n  }\n});\nexport default shopSlice;\nexport var getStoreProductData = function getStoreProductData() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(shopStoreAction.sendRequest());\n              _context.prev = 1;\n              _context.next = 4;\n              return sendGetApi(\"store/get-products\", \"10\");\n\n            case 4:\n              response = _context.sent;\n              dispatch(shopStoreAction.getStoreProduct({\n                data: response.data.data\n              }));\n              dispatch(shopStoreAction.getResponse());\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0.response);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/shop-slice.js"],"names":["createSlice","sendGetApi","shopStoreAction","initialState","shop","product","isDataReceived","reRunComponent","shopSlice","name","reducers","sendRequest","state","getStoreProduct","action","payload","data","param","getResponse","getStoreProductData","dispatch","response","console","log"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,cAAc,EAAE,KAFZ;AAGJC,IAAAA,cAAc,EAAE;AAHZ;AADa,CAArB;AAQA,IAAMC,SAAS,GAAGR,WAAW,CAAC;AAC5BS,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAZA,YAF4B;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACW;AACjBA,MAAAA,KAAK,CAACR,IAAN,mCACKQ,KAAK,CAACR,IADX;AAEEE,QAAAA,cAAc,EAAE;AAFlB;AAID,KANO;AAORO,IAAAA,eAPQ,2BAOQD,KAPR,EAOeE,MAPf,EAOuB;AAC7BF,MAAAA,KAAK,CAACR,IAAN,mCACKQ,KAAK,CAACR,IADX;AAEEC,QAAAA,OAAO,EAAES,MAAM,CAACC,OAAP,CAAeC,IAF1B;AAGEC,QAAAA,KAAK,EAAE;AAHT;AAKD,KAbO;AAcRC,IAAAA,WAdQ,uBAcIN,KAdJ,EAcW;AACjBA,MAAAA,KAAK,CAACR,IAAN,mCACKQ,KAAK,CAACR,IADX;AAEEE,QAAAA,cAAc,EAAE;AAFlB;AAID;AAnBO;AAHkB,CAAD,CAA7B;AAyBA,eAAeE,SAAf;AAEA,OAAO,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAAClB,eAAe,CAACS,WAAhB,EAAD,CAAR;AADK;AAAA;AAAA,qBAGoBV,UAAU,uBAAuB,IAAvB,CAH9B;;AAAA;AAGGoB,cAAAA,QAHH;AAIHD,cAAAA,QAAQ,CACNlB,eAAe,CAACW,eAAhB,CAAgC;AAC9BG,gBAAAA,IAAI,EAAEK,QAAQ,CAACL,IAAT,CAAcA;AADU,eAAhC,CADM,CAAR;AAKAI,cAAAA,QAAQ,CAAClB,eAAe,CAACgB,WAAhB,EAAD,CAAR;AATG;AAAA;;AAAA;AAAA;AAAA;AAWHI,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAMF,QAAlB;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcD,CAfM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { sendGetApi } from \"src/service/appService\";\r\nimport { shopStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  shop: {\r\n    product: [],\r\n    isDataReceived: false,\r\n    reRunComponent: true,\r\n  },\r\n};\r\n\r\nconst shopSlice = createSlice({\r\n  name: \"shop\",\r\n  initialState,\r\n  reducers: {\r\n    sendRequest(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: false,\r\n      };\r\n    },\r\n    getStoreProduct(state, action) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        product: action.payload.data,\r\n        param: \"\",\r\n      };\r\n    },\r\n    getResponse(state) {\r\n      state.shop = {\r\n        ...state.shop,\r\n        isDataReceived: true,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport default shopSlice;\r\n\r\nexport const getStoreProductData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(shopStoreAction.sendRequest());\r\n    try {\r\n      const response = await sendGetApi(`store/get-products`, \"10\");\r\n      dispatch(\r\n        shopStoreAction.getStoreProduct({\r\n          data: response.data.data,\r\n        })\r\n      );\r\n      dispatch(shopStoreAction.getResponse());\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}