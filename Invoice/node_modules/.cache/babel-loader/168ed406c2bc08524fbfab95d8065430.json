{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Store\\\\Product\\\\StoreItems.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport CTable from \"src/Components/Table/CTable\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport { getStoreProductData } from \"src/store/shop-slice\";\nimport SPTableBody from \"./SPTableBody\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport { shopStoreAction } from \"src/store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar StoreItems = function StoreItems() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      data: state.shopStore.shop.product,\n      isDataReceived: state.shopStore.shop.isDataReceived,\n      param: state.shopStore.shop.param,\n      reRunComponent: state.shopStore.reRunComponent.isDataChanged\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRunComponent) {\n      dispatch(getStoreProductData(state.param));\n    }\n  }, [state.reRunComponent, dispatch, state.param]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    if (url) {\n      var param = url.split(\"?\")[1];\n      dispatch(shopStoreAction.updateParam({\n        param: param\n      }));\n      dispatch(getStoreProductData(param));\n    }\n  };\n\n  var onActionHandler = function onActionHandler(id) {\n    console.log();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!state.isDataReceived && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }, _this), state.isDataReceived && /*#__PURE__*/_jsxDEV(CTable, {\n      header: [\"#\", \"Image\", \"Product\", \"Price\", \"Color\", \"Height\", \"Status\", \"Action\"],\n      children: /*#__PURE__*/_jsxDEV(SPTableBody, {\n        body: state.data.data,\n        action: onActionHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this), state.isDataReceived && /*#__PURE__*/_jsxDEV(Pagination, {\n      body: state.data,\n      change: pageChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(StoreItems, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = StoreItems;\nexport default StoreItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreItems\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Store/Product/StoreItems.js"],"names":["useEffect","CTable","useSelector","useDispatch","Loader","getStoreProductData","SPTableBody","Pagination","shopStoreAction","StoreItems","mapStateToProps","state","data","shopStore","shop","product","isDataReceived","param","reRunComponent","isDataChanged","dispatch","pageChangeHandler","url","split","updateParam","onActionHandler","id","console","log"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,eAAT,QAAgC,iBAAhC;;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,IAAI,EAAED,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBC,OADtB;AAELC,MAAAA,cAAc,EAAEL,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBE,cAFhC;AAGLC,MAAAA,KAAK,EAAEN,KAAK,CAACE,SAAN,CAAgBC,IAAhB,CAAqBG,KAHvB;AAILC,MAAAA,cAAc,EAAEP,KAAK,CAACE,SAAN,CAAgBK,cAAhB,CAA+BC;AAJ1C,KAAP;AAMD,GAPD;;AAQA,MAAMR,KAAK,GAAGT,WAAW,CAACQ,eAAD,CAAzB;AACA,MAAMU,QAAQ,GAAGjB,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,KAAK,CAACO,cAAV,EAA0B;AACxBE,MAAAA,QAAQ,CAACf,mBAAmB,CAACM,KAAK,CAACM,KAAP,CAApB,CAAR;AACD;AACF,GAJQ,EAIN,CAACN,KAAK,CAACO,cAAP,EAAuBE,QAAvB,EAAiCT,KAAK,CAACM,KAAvC,CAJM,CAAT;;AAMA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAS;AACjC,QAAIA,GAAJ,EAAS;AACP,UAAML,KAAK,GAAGK,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAd;AACAH,MAAAA,QAAQ,CAACZ,eAAe,CAACgB,WAAhB,CAA4B;AAAEP,QAAAA,KAAK,EAALA;AAAF,OAA5B,CAAD,CAAR;AACAG,MAAAA,QAAQ,CAACf,mBAAmB,CAACY,KAAD,CAApB,CAAR;AACD;AACF,GAND;;AAOA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAO;AAC7BC,IAAAA,OAAO,CAACC,GAAR;AACD,GAFD;;AAGA,sBACE;AAAA,eACG,CAACjB,KAAK,CAACK,cAAP,iBAAyB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAD5B,EAEGL,KAAK,CAACK,cAAN,iBACC,QAAC,MAAD;AACE,MAAA,MAAM,EAAE,CACN,GADM,EAEN,OAFM,EAGN,SAHM,EAIN,OAJM,EAKN,OALM,EAMN,QANM,EAON,QAPM,EAQN,QARM,CADV;AAAA,6BAYE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEL,KAAK,CAACC,IAAN,CAAWA,IAA9B;AAAoC,QAAA,MAAM,EAAEa;AAA5C;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,aAHJ,EAkBGd,KAAK,CAACK,cAAN,iBACC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL,KAAK,CAACC,IAAxB;AAA8B,MAAA,MAAM,EAAES;AAAtC;AAAA;AAAA;AAAA;AAAA,aAnBJ;AAAA,kBADF;AAwBD,CAnDD;;GAAMZ,U;UASUP,W,EACGC,W;;;KAVbM,U;AAoDN,eAAeA,UAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport CTable from \"src/Components/Table/CTable\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport { getStoreProductData } from \"src/store/shop-slice\";\r\nimport SPTableBody from \"./SPTableBody\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { shopStoreAction } from \"src/store/store\";\r\nconst StoreItems = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      data: state.shopStore.shop.product,\r\n      isDataReceived: state.shopStore.shop.isDataReceived,\r\n      param: state.shopStore.shop.param,\r\n      reRunComponent: state.shopStore.reRunComponent.isDataChanged,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunComponent) {\r\n      dispatch(getStoreProductData(state.param));\r\n    }\r\n  }, [state.reRunComponent, dispatch, state.param]);\r\n\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const param = url.split(\"?\")[1];\r\n      dispatch(shopStoreAction.updateParam({ param }));\r\n      dispatch(getStoreProductData(param));\r\n    }\r\n  };\r\n  const onActionHandler = (id) =>{\r\n    console.log();\r\n  }\r\n  return (\r\n    <>\r\n      {!state.isDataReceived && <Loader />}\r\n      {state.isDataReceived && (\r\n        <CTable\r\n          header={[\r\n            \"#\",\r\n            \"Image\",\r\n            \"Product\",\r\n            \"Price\",\r\n            \"Color\",\r\n            \"Height\",\r\n            \"Status\",\r\n            \"Action\",\r\n          ]}\r\n        >\r\n          <SPTableBody body={state.data.data} action={onActionHandler}/>\r\n        </CTable>\r\n      )}\r\n      {state.isDataReceived && (\r\n        <Pagination body={state.data} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default StoreItems;\r\n"]},"metadata":{},"sourceType":"module"}