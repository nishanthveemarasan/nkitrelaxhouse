{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Posts\\\\Modal\\\\PostEditModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { closePostModal, deletePostModalData, updatePostModalData } from \"src/store/post.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostEditModal = function PostEditModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(),\n      athorName = _useFormValidate.inputValue,\n      setAuthorName = _useFormValidate.setInputValue,\n      authorNameChangeHandler = _useFormValidate.inputChangeHandler,\n      authorNameBlurHandler = _useFormValidate.inputBlurHandler,\n      authorResetHandler = _useFormValidate.reset;\n\n  var _useFormValidate2 = useFormValidate(),\n      postTitle = _useFormValidate2.inputValue,\n      setPostTitle = _useFormValidate2.setInputValue,\n      postTitleChangeHandler = _useFormValidate2.inputChangeHandler,\n      postTitleBlurHandler = _useFormValidate2.inputBlurHandler,\n      postTitleResetHandler = _useFormValidate2.reset;\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      postModalData: state.postStore.postModalData,\n      updatePostModalData: state.postStore.updatePostModalData\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  useEffect(function () {\n    if (state.postModalData.ModalAction === \"Update\") {\n      setAuthorName(state.postModalData.postData.name);\n      setPostTitle(state.postModalData.postData.name);\n    }\n  }, [state.postModalData.ModalAction]);\n  var dispatch = useDispatch();\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n\n    if (state.postModalData.ModalAction === \"Update\") {\n      var data = {\n        id: 17,\n        title: \"welcome to react\",\n        content: \"lession 24\",\n        status: \"publish\"\n      };\n      dispatch(updatePostModalData(data));\n    } else {\n      var _data = {\n        id: 17\n      };\n      dispatch(deletePostModalData(_data));\n    }\n  };\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(closePostModal());\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.postModalData.isModalOpen,\n    heading: state.postModalData.ModalHeading,\n    variant: state.postModalData.variant,\n    action: state.postModalData.ModalAction,\n    onClose: modalCloseHandler,\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    loading: state.updatePostModalData.isLoading,\n    children: [state.updatePostModalData.isUpdated && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: state.updatePostModalData.variant,\n      text: state.updatePostModalData.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, _this), state.postModalData.ModalAction === \"Delete\" && !state.updatePostModalData.isUpdated && /*#__PURE__*/_jsxDEV(CAlert, {\n      color: \"danger\",\n      text: \"please confirm that you are going to Cencel the Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, _this), state.postModalData.ModalAction === \"Update\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormInputLabel, {\n        type: \"text\",\n        readOnly: true,\n        label: \"Author Name\",\n        value: athorName,\n        change: authorNameChangeHandler,\n        blur: authorNameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormInputLabel, {\n        type: \"text\",\n        readOnly: false,\n        label: \"Post Title\",\n        value: postTitle,\n        change: postTitleChangeHandler,\n        blur: postTitleBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostEditModal, \"xh9VzH8gT6dujtlMK/MXbuBpI4s=\", false, function () {\n  return [useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = PostEditModal;\nexport default PostEditModal;\n/**\r\n * comments_count: \"12\"\r\ncontent: \"This is the sample Post. This is the sample Post. This is the sample Post. This is the sample Post. This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.\"\r\ncreated_at: \"2020-11-06T09:43:44.000000Z\"\r\nid: 4\r\nlikes_count: \"0\"\r\nname: \"Nishanthan\"\r\nstatus: \"publish\"\r\ntitle: \"3rd Post has been Updated\"\r\ntype: \"disabled\"\r\nupdated_at: \"2021-06-15T06:26:42.000000Z\"\r\nuser_id: \"1\"\r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEditModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Posts/Modal/PostEditModal.js"],"names":["useEffect","useSelector","useDispatch","CAlert","FormInputLabel","CModal","useFormValidate","closePostModal","deletePostModalData","updatePostModalData","PostEditModal","athorName","inputValue","setAuthorName","setInputValue","authorNameChangeHandler","inputChangeHandler","authorNameBlurHandler","inputBlurHandler","authorResetHandler","reset","postTitle","setPostTitle","postTitleChangeHandler","postTitleBlurHandler","postTitleResetHandler","mapStateToProps","state","postModalData","postStore","ModalAction","postData","name","dispatch","onSubmitHandler","e","preventDefault","data","id","title","content","status","modalCloseHandler","isModalOpen","ModalHeading","variant","isLoading","isUpdated","msg"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport {\r\n  closePostModal,\r\n  deletePostModalData,\r\n  updatePostModalData,\r\n} from \"src/store/post.slice\";\r\nconst PostEditModal = () => {\r\n  const {\r\n    inputValue: athorName,\r\n    setInputValue: setAuthorName,\r\n    inputChangeHandler: authorNameChangeHandler,\r\n    inputBlurHandler: authorNameBlurHandler,\r\n    reset: authorResetHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: postTitle,\r\n    setInputValue: setPostTitle,\r\n    inputChangeHandler: postTitleChangeHandler,\r\n    inputBlurHandler: postTitleBlurHandler,\r\n    reset: postTitleResetHandler,\r\n  } = useFormValidate();\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      postModalData: state.postStore.postModalData,\r\n      updatePostModalData: state.postStore.updatePostModalData,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  useEffect(() => {\r\n    if (state.postModalData.ModalAction === \"Update\") {\r\n      setAuthorName(state.postModalData.postData.name);\r\n      setPostTitle(state.postModalData.postData.name);\r\n    }\r\n  }, [state.postModalData.ModalAction]);\r\n  const dispatch = useDispatch();\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (state.postModalData.ModalAction === \"Update\") {\r\n      const data = {\r\n        id: 17,\r\n        title: \"welcome to react\",\r\n        content: \"lession 24\",\r\n        status: \"publish\",\r\n      };\r\n      dispatch(updatePostModalData(data));\r\n    } else {\r\n      const data = {\r\n        id: 17,\r\n      };\r\n      dispatch(deletePostModalData(data));\r\n    }\r\n  };\r\n\r\n  const modalCloseHandler = () => {\r\n    dispatch(closePostModal());\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.postModalData.isModalOpen}\r\n      heading={state.postModalData.ModalHeading}\r\n      variant={state.postModalData.variant}\r\n      action={state.postModalData.ModalAction}\r\n      onClose={modalCloseHandler}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={state.updatePostModalData.isLoading}\r\n    >\r\n      {state.updatePostModalData.isUpdated && (\r\n        <CAlert\r\n          color={state.updatePostModalData.variant}\r\n          text={state.updatePostModalData.msg}\r\n        />\r\n      )}\r\n      {state.postModalData.ModalAction === \"Delete\" &&\r\n        !state.updatePostModalData.isUpdated && (\r\n          <CAlert\r\n            color=\"danger\"\r\n            text={`please confirm that you are going to Cencel the Order`}\r\n          />\r\n        )}\r\n      {state.postModalData.ModalAction === \"Update\" && (\r\n        <>\r\n          <FormInputLabel\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Author Name\"\r\n            value={athorName}\r\n            change={authorNameChangeHandler}\r\n            blur={authorNameBlurHandler}\r\n          />\r\n          <FormInputLabel\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Post Title\"\r\n            value={postTitle}\r\n            change={postTitleChangeHandler}\r\n            blur={postTitleBlurHandler}\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default PostEditModal;\r\n/**\r\n * comments_count: \"12\"\r\ncontent: \"This is the sample Post. This is the sample Post. This is the sample Post. This is the sample Post. This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.This is the sample Post.\"\r\ncreated_at: \"2020-11-06T09:43:44.000000Z\"\r\nid: 4\r\nlikes_count: \"0\"\r\nname: \"Nishanthan\"\r\nstatus: \"publish\"\r\ntitle: \"3rd Post has been Updated\"\r\ntype: \"disabled\"\r\nupdated_at: \"2021-06-15T06:26:42.000000Z\"\r\nuser_id: \"1\"\r\n */\r\n"]},"metadata":{},"sourceType":"module"}