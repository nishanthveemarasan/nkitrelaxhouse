{"ast":null,"code":"import _objectSpread from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import API from\"src/axios/axios\";import{FormInput}from\"src/Components/UI/Input/FormInput\";import CModal from\"src/Components/UI/Modal/CModal\";import useFormValidate from\"src/Hooks/input-validation\";import{productStoreAction}from\"src/store/store\";import{Alert,Col,Row}from\"react-bootstrap\";import FormRadio from\"src/Components/UI/Input/FormRadio\";import FormInputLabel from\"src/Components/UI/Input/FormInputLabel\";import{sendPostAdminApi}from\"src/service/appService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CreateModal=function CreateModal(){var _useFormValidate=useFormValidate(),productName=_useFormValidate.inputValue,productNameChangeHandler=_useFormValidate.inputChangeHandler,productNameRestHandler=_useFormValidate.reset;var _useFormValidate2=useFormValidate(),productCode=_useFormValidate2.inputValue,productCodeChangeHandler=_useFormValidate2.inputChangeHandler,productCodeRestHandler=_useFormValidate2.reset;var _useFormValidate3=useFormValidate(),stockCount=_useFormValidate3.inputValue,stockCountChangeHandler=_useFormValidate3.inputChangeHandler,stockCountRestHandler=_useFormValidate3.reset;var _useState=useState(\"singleProduct\"),_useState2=_slicedToArray(_useState,2),trackType=_useState2[0],setTrackType=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),selectedFile=_useState4[0],setSelectedFile=_useState4[1];var fileSelectedHandler=function fileSelectedHandler(event){setSelectedFile(event.target.files[0]);};var onTrackTypeChange=function onTrackTypeChange(e){setTrackType(e.target.value);};var _useState5=useState({isLoading:false,alertText:\"\",alertType:\"\"}),_useState6=_slicedToArray(_useState5,2),modalData=_useState6[0],setModalData=_useState6[1];var mapStateToProps=function mapStateToProps(state){return{openModal:state.productStore.openModal};};var state=useSelector(mapStateToProps);var dispatch=useDispatch();var modalCloseHandler=function modalCloseHandler(){dispatch(productStoreAction.addProductModal({data:false}));};var onSubmitHandler=function onSubmitHandler(e){e.preventDefault();setModalData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:true});});if(trackType===\"multipleProducts\"){dispatch(productStoreAction.dataNotChanged());var formData=new FormData();formData.append(\"file\",selectedFile);sendPostAdminApi(\"product/add-multiple-products\",formData).then(function(response){var msg=response.data.data.msg;var type=response.data.data.type;dispatch(productStoreAction.dataChanged());if(type===\"success\"){setModalData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:false,alertText:msg,alertType:\"success\"});});}else{setModalData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:false,alertText:msg,alertType:\"danger\"});});}}).catch(function(error){setModalData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:false,alertText:error.response.data.error.msg,alertType:\"danger\"});});});}else{var data={itemname:productName,itemcode:productCode,count:stockCount};dispatch(productStoreAction.dataNotChanged());sendPostAdminApi(\"add-product\",data).then(function(response){var msg=response.data.data.msg;var type=response.data.data.type;dispatch(productStoreAction.dataChanged());if(type===\"success\"){setModalData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:false,alertText:msg,alertType:\"success\"});});}else{setModalData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:false,alertText:msg,alertType:\"danger\"});});}productNameRestHandler(\"\");productCodeRestHandler(\"\");stockCountRestHandler(\"\");}).catch(function(error){console.log(error.message);});}};return/*#__PURE__*/_jsxs(CModal,{onShow:state.openModal,onClose:modalCloseHandler,heading:\"Add a Product\",variant:\"primary\",action:\"Add Product\",size:\"md\",onSubmitHandler:onSubmitHandler,loading:modalData.isLoading,children:[modalData.alertText&&/*#__PURE__*/_jsx(Alert,{variant:modalData.alertType,children:modalData.alertText}),/*#__PURE__*/_jsxs(Row,{className:\"mt-4 mb-4\",children:[/*#__PURE__*/_jsx(Col,{sm:12,md:5,children:/*#__PURE__*/_jsx(FormRadio,{inline:true,label:\"Create Single Product\",type:\"radio\",value:\"singleProduct\",name:\"inLineProduct\",change:onTrackTypeChange,checked:trackType===\"singleProduct\"})}),/*#__PURE__*/_jsx(Col,{sm:12,md:6,children:/*#__PURE__*/_jsx(FormRadio,{inline:true,label:\"Create Multiple Products(CSV)\",type:\"radio\",value:\"multipleProducts\",name:\"inLineProduct\",change:onTrackTypeChange,checked:trackType===\"multipleProducts\"})})]}),trackType===\"singleProduct\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormInput,{type:\"text\",readOnly:false,label:\"Product Name\",value:productName,change:productNameChangeHandler}),/*#__PURE__*/_jsx(FormInput,{type:\"text\",readOnly:false,label:\"Product Code\",value:productCode,change:productCodeChangeHandler}),/*#__PURE__*/_jsx(FormInput,{type:\"number\",readOnly:false,label:\"Stock Count\",value:stockCount,change:stockCountChangeHandler})]}),trackType===\"multipleProducts\"&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FormInputLabel,{type:\"file\",readOnly:false,label:\"UpLoad CSV File\",change:fileSelectedHandler})})]});};export default CreateModal;","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/CreateModal.js"],"names":["useState","useSelector","useDispatch","API","FormInput","CModal","useFormValidate","productStoreAction","Alert","Col","Row","FormRadio","FormInputLabel","sendPostAdminApi","CreateModal","productName","inputValue","productNameChangeHandler","inputChangeHandler","productNameRestHandler","reset","productCode","productCodeChangeHandler","productCodeRestHandler","stockCount","stockCountChangeHandler","stockCountRestHandler","trackType","setTrackType","selectedFile","setSelectedFile","fileSelectedHandler","event","target","files","onTrackTypeChange","e","value","isLoading","alertText","alertType","modalData","setModalData","mapStateToProps","state","openModal","productStore","dispatch","modalCloseHandler","addProductModal","data","onSubmitHandler","preventDefault","prevState","dataNotChanged","formData","FormData","append","then","response","msg","type","dataChanged","catch","error","itemname","itemcode","count","console","log","message"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport FormRadio from \"src/Components/UI/Input/FormRadio\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport { sendPostAdminApi } from \"src/service/appService\";\r\nconst CreateModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    reset: productNameRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n    reset: productCodeRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stockCount,\r\n    inputChangeHandler: stockCountChangeHandler,\r\n    reset: stockCountRestHandler,\r\n  } = useFormValidate();\r\n\r\n  const [trackType, setTrackType] = useState(\"singleProduct\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const fileSelectedHandler = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n  const onTrackTypeChange = (e) => {\r\n    setTrackType(e.target.value);\r\n  };\r\n  const [modalData, setModalData] = useState({\r\n    isLoading: false,\r\n    alertText: \"\",\r\n    alertType: \"\",\r\n  });\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      openModal: state.productStore.openModal,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.addProductModal({ data: false }));\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    setModalData((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoading: true,\r\n      };\r\n    });\r\n    if (trackType === \"multipleProducts\") {\r\n      dispatch(productStoreAction.dataNotChanged());\r\n      var formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      sendPostAdminApi(\"product/add-multiple-products\", formData)\r\n        .then((response) => {\r\n          const msg = response.data.data.msg;\r\n          const type = response.data.data.type;\r\n          dispatch(productStoreAction.dataChanged());\r\n          if (type === \"success\") {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"success\",\r\n              };\r\n            });\r\n          } else {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"danger\",\r\n              };\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setModalData((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              isLoading: false,\r\n              alertText: error.response.data.error.msg,\r\n              alertType: \"danger\",\r\n            };\r\n          });\r\n        });\r\n    } else {\r\n      const data = {\r\n        itemname: productName,\r\n        itemcode: productCode,\r\n        count: stockCount,\r\n      };\r\n\r\n      dispatch(productStoreAction.dataNotChanged());\r\n      sendPostAdminApi(\"add-product\", data)\r\n        .then((response) => {\r\n          const msg = response.data.data.msg;\r\n          const type = response.data.data.type;\r\n          dispatch(productStoreAction.dataChanged());\r\n          if (type === \"success\") {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"success\",\r\n              };\r\n            });\r\n          } else {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"danger\",\r\n              };\r\n            });\r\n          }\r\n          productNameRestHandler(\"\");\r\n          productCodeRestHandler(\"\");\r\n          stockCountRestHandler(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.openModal}\r\n      onClose={modalCloseHandler}\r\n      heading={\"Add a Product\"}\r\n      variant={\"primary\"}\r\n      action={\"Add Product\"}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={modalData.isLoading}\r\n    >\r\n      {modalData.alertText && (\r\n        <Alert variant={modalData.alertType}>{modalData.alertText}</Alert>\r\n      )}\r\n      <Row className=\"mt-4 mb-4\">\r\n        <Col sm={12} md={5}>\r\n          <FormRadio\r\n            inline={true}\r\n            label=\"Create Single Product\"\r\n            type=\"radio\"\r\n            value=\"singleProduct\"\r\n            name=\"inLineProduct\"\r\n            change={onTrackTypeChange}\r\n            checked={trackType === \"singleProduct\"}\r\n          />\r\n        </Col>\r\n        <Col sm={12} md={6}>\r\n          <FormRadio\r\n            inline={true}\r\n            label=\"Create Multiple Products(CSV)\"\r\n            type=\"radio\"\r\n            value=\"multipleProducts\"\r\n            name=\"inLineProduct\"\r\n            change={onTrackTypeChange}\r\n            checked={trackType === \"multipleProducts\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {trackType === \"singleProduct\" && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Name\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Code\"\r\n            value={productCode}\r\n            change={productCodeChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Stock Count\"\r\n            value={stockCount}\r\n            change={stockCountChangeHandler}\r\n          />\r\n        </>\r\n      )}\r\n      {trackType === \"multipleProducts\" && (\r\n        <>\r\n          <FormInputLabel\r\n            type=\"file\"\r\n            readOnly={false}\r\n            label=\"UpLoad CSV File\"\r\n            change={fileSelectedHandler}\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default CreateModal;\r\n"]},"metadata":{},"sourceType":"module"}