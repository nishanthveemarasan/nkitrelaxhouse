{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\UI\\\\Alert\\\\RAlert.js\",\n    _this = this;\n\nimport { Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar RAlert = function RAlert(props) {\n  var message = !props.alert.status ? props.alert.msg.map(function (row, i) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: row\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 14\n    }, _this);\n  }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.alert.msg[0]\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: props.alert.color,\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = RAlert;\nexport default RAlert;\n\nvar _c;\n\n$RefreshReg$(_c, \"RAlert\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/UI/Alert/RAlert.js"],"names":["Alert","RAlert","props","message","alert","status","msg","map","row","i","color"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,MAAMC,OAAO,GAAG,CAACD,KAAK,CAACE,KAAN,CAAYC,MAAb,GACdH,KAAK,CAACE,KAAN,CAAYE,GAAZ,CAAgBC,GAAhB,CAAoB,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC9B,wBAAO;AAAA,gBAAaD;AAAb,OAASC,CAAT;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAFD,CADc,gBAKd;AAAA,cAAGP,KAAK,CAACE,KAAN,CAAYE,GAAZ,CAAgB,CAAhB;AAAH,mBALF;AAOA,sBAAO,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEJ,KAAK,CAACE,KAAN,CAAYM,KAA5B;AAAA,cAAoCP;AAApC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CATD;;KAAMF,M;AAUN,eAAeA,MAAf","sourcesContent":["import { Alert } from \"react-bootstrap\";\r\n\r\nconst RAlert = (props) => {\r\n  const message = !props.alert.status ? (\r\n    props.alert.msg.map((row, i) => {\r\n      return <li key={i}>{row}</li>;\r\n    })\r\n  ) : (\r\n    <>{props.alert.msg[0]}</>\r\n  );\r\n  return <Alert variant={props.alert.color}>{message}</Alert>;\r\n};\r\nexport default RAlert;\r\n"]},"metadata":{},"sourceType":"module"}