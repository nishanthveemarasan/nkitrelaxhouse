{"ast":null,"code":"import _slicedToArray from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Product\\\\CreateModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport API from \"src/axios/axios\";\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\nimport CModal from \"src/Components/UI/Modal/CModal\";\nimport useFormValidate from \"src/Hooks/input-validation\";\nimport { productStoreAction } from \"src/store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CreateModal = function CreateModal() {\n  _s();\n\n  var _useFormValidate = useFormValidate(\"\"),\n      productName = _useFormValidate.inputValue,\n      productNameChangeHandler = _useFormValidate.inputChangeHandler,\n      productNameRestHandler = _useFormValidate.reset;\n\n  var _useFormValidate2 = useFormValidate(\"\"),\n      productCode = _useFormValidate2.inputValue,\n      productCodeChangeHandler = _useFormValidate2.inputChangeHandler,\n      productCodeRestHandler = _useFormValidate2.reset;\n\n  var _useFormValidate3 = useFormValidate(\"\"),\n      stockCount = _useFormValidate3.inputValue,\n      stockCountChangeHandler = _useFormValidate3.inputChangeHandler,\n      stockCountRestHandler = _useFormValidate3.reset;\n\n  var _useState = useState({\n    isLoading: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalData = _useState2[0],\n      setModalData = _useState2[1];\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      openModal: state.productStore.openModal\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n\n  var modalCloseHandler = function modalCloseHandler() {\n    dispatch(productStoreAction.addProductModal({\n      data: false\n    }));\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    var data = {\n      itemname: productName,\n      itemcode: productCode,\n      count: stockCount\n    };\n    API.post(\"add-product\", data).then(function (response) {\n      var msg = response.data.data.msg;\n      var type = response.data.data.type;\n      dispatch(productStoreAction.dataChanged());\n\n      if (type === \"success\") {\n        setModalData(function (prevState) {\n          return {};\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    onShow: state.openModal,\n    onClose: modalCloseHandler,\n    heading: \"Add a Product\",\n    variant: \"primary\",\n    action: \"Add Product\",\n    size: \"md\",\n    onSubmitHandler: onSubmitHandler,\n    loading: modalData.isLoading,\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      readOnly: false,\n      label: \"Product Name\",\n      value: productName,\n      change: productNameChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"text\",\n      readOnly: false,\n      label: \"Product Code\",\n      value: productCode,\n      change: productCodeChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormInput, {\n      type: \"number\",\n      readOnly: false,\n      label: \"Stock Count\",\n      value: stockCount,\n      change: stockCountChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateModal, \"Yo6RyHbLnNT3bf2w7LI6v4p/dRE=\", false, function () {\n  return [useFormValidate, useFormValidate, useFormValidate, useSelector, useDispatch];\n});\n\n_c = CreateModal;\nexport default CreateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Product/CreateModal.js"],"names":["useState","useSelector","useDispatch","API","FormInput","CModal","useFormValidate","productStoreAction","CreateModal","productName","inputValue","productNameChangeHandler","inputChangeHandler","productNameRestHandler","reset","productCode","productCodeChangeHandler","productCodeRestHandler","stockCount","stockCountChangeHandler","stockCountRestHandler","isLoading","modalData","setModalData","mapStateToProps","state","openModal","productStore","dispatch","modalCloseHandler","addProductModal","data","onSubmitHandler","e","preventDefault","itemname","itemcode","count","post","then","response","msg","type","dataChanged","prevState","catch","error","console","log"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,yBAIIF,eAAe,CAAC,EAAD,CAJnB;AAAA,MACcG,WADd,oBACEC,UADF;AAAA,MAEsBC,wBAFtB,oBAEEC,kBAFF;AAAA,MAGSC,sBAHT,oBAGEC,KAHF;;AAKA,0BAIIR,eAAe,CAAC,EAAD,CAJnB;AAAA,MACcS,WADd,qBACEL,UADF;AAAA,MAEsBM,wBAFtB,qBAEEJ,kBAFF;AAAA,MAGSK,sBAHT,qBAGEH,KAHF;;AAKA,0BAIIR,eAAe,CAAC,EAAD,CAJnB;AAAA,MACcY,UADd,qBACER,UADF;AAAA,MAEsBS,uBAFtB,qBAEEP,kBAFF;AAAA,MAGSQ,qBAHT,qBAGEN,KAHF;;AAKA,kBAAkCd,QAAQ,CAAC;AACzCqB,IAAAA,SAAS,EAAE;AAD8B,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAGA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLC,MAAAA,SAAS,EAAED,KAAK,CAACE,YAAN,CAAmBD;AADzB,KAAP;AAGD,GAJD;;AAKA,MAAMD,KAAK,GAAGxB,WAAW,CAACuB,eAAD,CAAzB;AACA,MAAMI,QAAQ,GAAG1B,WAAW,EAA5B;;AACA,MAAM2B,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BD,IAAAA,QAAQ,CAACrB,kBAAkB,CAACuB,eAAnB,CAAmC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAnC,CAAD,CAAR;AACD,GAFD;;AAGA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAMH,IAAI,GAAG;AACXI,MAAAA,QAAQ,EAAE1B,WADC;AAEX2B,MAAAA,QAAQ,EAAErB,WAFC;AAGXsB,MAAAA,KAAK,EAAEnB;AAHI,KAAb;AAKAf,IAAAA,GAAG,CAACmC,IAAJ,CAAS,aAAT,EAAwBP,IAAxB,EACGQ,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAMC,GAAG,GAAGD,QAAQ,CAACT,IAAT,CAAcA,IAAd,CAAmBU,GAA/B;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACT,IAAT,CAAcA,IAAd,CAAmBW,IAAhC;AACAd,MAAAA,QAAQ,CAACrB,kBAAkB,CAACoC,WAAnB,EAAD,CAAR;;AACA,UAAID,IAAI,KAAK,SAAb,EAAwB;AACpBnB,QAAAA,YAAY,CAAC,UAAAqB,SAAS,EAAI;AACtB,iBAAM,EAAN;AAGH,SAJW,CAAZ;AAKH;AACF,KAZH,EAaGC,KAbH,CAaS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAfH;AAgBD,GAvBD;;AAwBA,sBACE,QAAC,MAAD;AACE,IAAA,MAAM,EAAErB,KAAK,CAACC,SADhB;AAEE,IAAA,OAAO,EAAEG,iBAFX;AAGE,IAAA,OAAO,EAAE,eAHX;AAIE,IAAA,OAAO,EAAE,SAJX;AAKE,IAAA,MAAM,EAAE,aALV;AAME,IAAA,IAAI,EAAC,IANP;AAOE,IAAA,eAAe,EAAEG,eAPnB;AAQE,IAAA,OAAO,EAAEV,SAAS,CAACD,SARrB;AAAA,4BAUE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,KAAK,EAAEZ,WAJT;AAKE,MAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,aAVF,eAiBE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,KAAK,EAAEI,WAJT;AAKE,MAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,aAjBF,eAwBE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,KAAK,EAAC,aAHR;AAIE,MAAA,KAAK,EAAEE,UAJT;AAKE,MAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,aAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkCD,CAvFD;;GAAMX,W;UAKAF,e,EAKAA,e,EAKAA,e,EASUL,W,EACGC,W;;;KAzBbM,W;AAwFN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nconst CreateModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    reset: productNameRestHandler,\r\n  } = useFormValidate(\"\");\r\n  const {\r\n    inputValue: productCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n    reset: productCodeRestHandler,\r\n  } = useFormValidate(\"\");\r\n  const {\r\n    inputValue: stockCount,\r\n    inputChangeHandler: stockCountChangeHandler,\r\n    reset: stockCountRestHandler,\r\n  } = useFormValidate(\"\");\r\n  const [modalData, setModalData] = useState({\r\n    isLoading: false,\r\n  });\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      openModal: state.productStore.openModal,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.addProductModal({ data: false }));\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      itemname: productName,\r\n      itemcode: productCode,\r\n      count: stockCount,\r\n    };\r\n    API.post(\"add-product\", data)\r\n      .then((response) => {\r\n        const msg = response.data.data.msg;\r\n        const type = response.data.data.type;\r\n        dispatch(productStoreAction.dataChanged());\r\n        if (type === \"success\") {\r\n            setModalData(prevState => {\r\n                return{\r\n                    \r\n                }\r\n            })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.openModal}\r\n      onClose={modalCloseHandler}\r\n      heading={\"Add a Product\"}\r\n      variant={\"primary\"}\r\n      action={\"Add Product\"}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={modalData.isLoading}\r\n    >\r\n      <FormInput\r\n        type=\"text\"\r\n        readOnly={false}\r\n        label=\"Product Name\"\r\n        value={productName}\r\n        change={productNameChangeHandler}\r\n      />\r\n      <FormInput\r\n        type=\"text\"\r\n        readOnly={false}\r\n        label=\"Product Code\"\r\n        value={productCode}\r\n        change={productCodeChangeHandler}\r\n      />\r\n      <FormInput\r\n        type=\"number\"\r\n        readOnly={false}\r\n        label=\"Stock Count\"\r\n        value={stockCount}\r\n        change={stockCountChangeHandler}\r\n      />\r\n    </CModal>\r\n  );\r\n};\r\nexport default CreateModal;\r\n"]},"metadata":{},"sourceType":"module"}