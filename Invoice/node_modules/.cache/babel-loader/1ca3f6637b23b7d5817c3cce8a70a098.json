{"ast":null,"code":"import _objectSpread from \"C:/xampp/htdocs/nkItService/relax-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { StaticRouter } from \"react-router-dom\";\nimport API from \"src/axios/axios\";\nimport { saleStoreAction } from \"./store\";\nvar initialState = {\n  isDataLoaded: false,\n  saleData: [],\n  reRunComponent: true,\n  saleModalData: {\n    isLoading: false,\n    saleId: 0,\n    actionType: \"\",\n    isModalOpen: false,\n    modalHeading: \"\",\n    modalAction: \"\",\n    variant: \"\"\n  },\n  updateSaleData: {\n    isLoading: false,\n    isUpdated: false,\n    msg: \"\",\n    variant: \"\"\n  },\n  addSaleModalData: {\n    isLoading: false,\n    latestOrderId: \"\",\n    productNames: [],\n    modalHeading: \"Add A New Order\",\n    modalActionButton: \"Create\",\n    isModalOpen: false\n  },\n  addOrderItem: []\n};\nvar saleSlice = createSlice({\n  name: \"sale\",\n  initialState: initialState,\n  reducers: {\n    getData: function getData(state, action) {\n      state.isDataLoaded = true;\n      state.saleData = action.payload.sale;\n    },\n    loadModalInitialData: function loadModalInitialData(state, action) {\n      state.saleModalData = {\n        isLoading: true,\n        saleId: action.payload.id,\n        actionType: action.payload.action\n      };\n    },\n    loadSaleModal: function loadSaleModal(state, action) {\n      state.saleModalData = {\n        isLoading: false,\n        modalData: action.payload.saleDetails,\n        saleId: action.payload.id,\n        isModalOpen: true,\n        modalHeading: action.payload.heading,\n        modalAction: action.payload.actionType,\n        variant: action.payload.variant\n      };\n      console.log(state.saleModalData);\n    },\n    closeModal: function closeModal(state) {\n      state.saleModalData = {\n        isLoading: false,\n        saleId: 0,\n        actionType: \"\",\n        isModalOpen: false,\n        modalHeading: \"\",\n        modalAction: \"\",\n        variant: \"\"\n      };\n      state.updateSaleData = {\n        isLoading: false,\n        isUpdated: false,\n        msg: \"\",\n        variant: \"\"\n      };\n      state.addSaleModalData = {\n        isLoading: false,\n        latestOrderId: \"000\",\n        productNames: [],\n        modalHeading: \"Add A New Order\",\n        modalActionButton: \"Create\",\n        isModalOpen: false\n      };\n    },\n    updatingData: function updatingData(state) {\n      state.updateSaleData = _objectSpread(_objectSpread({}, state.updateSaleData), {}, {\n        isLoading: true\n      });\n    },\n    dataUpdated: function dataUpdated(state, action) {\n      state.updateSaleData = {\n        isLoading: false,\n        isUpdated: true,\n        msg: action.payload.msg,\n        variant: action.payload.color\n      };\n    },\n    loadingInitialAddModal: function loadingInitialAddModal(state) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        isLoading: true\n      });\n    },\n    getlatestOrderId: function getlatestOrderId(state, action) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        latestOrderId: action.payload.id\n      });\n    },\n    getProductNames: function getProductNames(state, action) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        productNames: action.payload.names\n      });\n    },\n    loadAddModalData: function loadAddModalData(state) {\n      state.addSaleModalData = _objectSpread(_objectSpread({}, state.addSaleModalData), {}, {\n        isLoading: false,\n        isModalOpen: true\n      });\n    },\n    addOrderItemCart: function addOrderItemCart(state, action) {\n      state.addOrderItem.push(action.payload.data);\n    },\n    removeOrderItemCart: function removeOrderItemCart(state, action) {\n      state.orderList.splice(action.payload.id, 1);\n    }\n  }\n});\nexport default saleSlice;\nexport var getSaleData = function getSaleData() {\n  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return function (dispatch) {\n    var url = \"order/get-order-data\";\n\n    if (param) {\n      url = \"order/get-order-data?\".concat(param);\n    }\n\n    API.get(url).then(function (response) {\n      if (response.data.http_status === 200) {\n        dispatch(saleStoreAction.getData({\n          sale: response.data.data\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};\nexport var getSaleModalData = function getSaleModalData(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.loadModalInitialData({\n      id: data.id,\n      action: data.action\n    }));\n    dispatch(saleStoreAction.loadSaleModal({\n      id: data.id,\n      saleDetails: data.saleData,\n      heading: data.action === \"Update\" ? \"Update the Order\" : \"Cancel The Order\",\n      actionType: data.action === \"Update\" ? \"Update\" : \"Cancel\",\n      variant: data.action === \"Update\" ? \"primary\" : \"danger\"\n    }));\n  };\n};\nexport var closeSaleModal = function closeSaleModal() {\n  return function (dispatch) {\n    dispatch(saleStoreAction.closeModal());\n  };\n};\nexport var updateSaleData = function updateSaleData(data) {\n  return function (dispatch) {\n    dispatch(saleStoreAction.updatingData());\n    var result = {\n      msg: \"Order has been updated successfully\"\n    };\n    dispatch(saleStoreAction.dataUpdated({\n      msg: result.msg,\n      color: \"success\"\n    }));\n  };\n};\nexport var openAddOrderModal = function openAddOrderModal() {\n  return function (dispatch) {\n    dispatch(saleStoreAction.loadingInitialAddModal());\n    API.get(\"order/get-latest-order-id\").then(function (response) {\n      if (response.data.http_status === 200) {\n        var id = response.data.data.order_id;\n        dispatch(saleStoreAction.getlatestOrderId({\n          id: id\n        }));\n      }\n    }).catch();\n    API.get(\"get-product-names\").then(function (response) {\n      if (response.data.http_status === 200) {\n        var names = response.data.data;\n        dispatch(saleStoreAction.getProductNames({\n          names: names\n        }));\n        dispatch(saleStoreAction.loadAddModalData());\n      }\n    }).catch();\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/sale-slice.js"],"names":["createSlice","StaticRouter","API","saleStoreAction","initialState","isDataLoaded","saleData","reRunComponent","saleModalData","isLoading","saleId","actionType","isModalOpen","modalHeading","modalAction","variant","updateSaleData","isUpdated","msg","addSaleModalData","latestOrderId","productNames","modalActionButton","addOrderItem","saleSlice","name","reducers","getData","state","action","payload","sale","loadModalInitialData","id","loadSaleModal","modalData","saleDetails","heading","console","log","closeModal","updatingData","dataUpdated","color","loadingInitialAddModal","getlatestOrderId","getProductNames","names","loadAddModalData","addOrderItemCart","push","data","removeOrderItemCart","orderList","splice","getSaleData","param","dispatch","url","get","then","response","http_status","catch","error","message","getSaleModalData","closeSaleModal","result","openAddOrderModal","order_id"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { StaticRouter } from \"react-router-dom\";\r\nimport API from \"src/axios/axios\";\r\nimport { saleStoreAction } from \"./store\";\r\n\r\nconst initialState = {\r\n  isDataLoaded: false,\r\n  saleData: [],\r\n  reRunComponent: true,\r\n  saleModalData: {\r\n    isLoading: false,\r\n    saleId: 0,\r\n    actionType: \"\",\r\n    isModalOpen: false,\r\n    modalHeading: \"\",\r\n    modalAction: \"\",\r\n    variant: \"\",\r\n  },\r\n  updateSaleData: {\r\n    isLoading: false,\r\n    isUpdated: false,\r\n    msg: \"\",\r\n    variant: \"\",\r\n  },\r\n  addSaleModalData: {\r\n    isLoading: false,\r\n    latestOrderId: \"\",\r\n    productNames: [],\r\n    modalHeading: \"Add A New Order\",\r\n    modalActionButton: \"Create\",\r\n    isModalOpen: false,\r\n  },\r\n  addOrderItem: [],\r\n};\r\n\r\nconst saleSlice = createSlice({\r\n  name: \"sale\",\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.isDataLoaded = true;\r\n      state.saleData = action.payload.sale;\r\n    },\r\n    loadModalInitialData(state, action) {\r\n      state.saleModalData = {\r\n        isLoading: true,\r\n        saleId: action.payload.id,\r\n        actionType: action.payload.action,\r\n      };\r\n    },\r\n    loadSaleModal(state, action) {\r\n      state.saleModalData = {\r\n        isLoading: false,\r\n        modalData: action.payload.saleDetails,\r\n        saleId: action.payload.id,\r\n        isModalOpen: true,\r\n        modalHeading: action.payload.heading,\r\n        modalAction: action.payload.actionType,\r\n        variant: action.payload.variant,\r\n      };\r\n      console.log(state.saleModalData);\r\n    },\r\n    closeModal(state) {\r\n      state.saleModalData = {\r\n        isLoading: false,\r\n        saleId: 0,\r\n        actionType: \"\",\r\n        isModalOpen: false,\r\n        modalHeading: \"\",\r\n        modalAction: \"\",\r\n        variant: \"\",\r\n      };\r\n      state.updateSaleData = {\r\n        isLoading: false,\r\n        isUpdated: false,\r\n        msg: \"\",\r\n        variant: \"\",\r\n      };\r\n      state.addSaleModalData = {\r\n        isLoading: false,\r\n        latestOrderId: \"000\",\r\n        productNames: [],\r\n        modalHeading: \"Add A New Order\",\r\n        modalActionButton: \"Create\",\r\n        isModalOpen: false,\r\n      };\r\n    },\r\n    updatingData(state) {\r\n      state.updateSaleData = {\r\n        ...state.updateSaleData,\r\n        isLoading: true,\r\n      };\r\n    },\r\n    dataUpdated(state, action) {\r\n      state.updateSaleData = {\r\n        isLoading: false,\r\n        isUpdated: true,\r\n        msg: action.payload.msg,\r\n        variant: action.payload.color,\r\n      };\r\n    },\r\n    loadingInitialAddModal(state) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        isLoading: true,\r\n      };\r\n    },\r\n    getlatestOrderId(state, action) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        latestOrderId: action.payload.id,\r\n      };\r\n    },\r\n    getProductNames(state, action) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        productNames: action.payload.names,\r\n      };\r\n    },\r\n    loadAddModalData(state) {\r\n      state.addSaleModalData = {\r\n        ...state.addSaleModalData,\r\n        isLoading: false,\r\n        isModalOpen: true,\r\n      };\r\n    },\r\n    addOrderItemCart(state, action) {\r\n      state.addOrderItem.push(action.payload.data);\r\n    },\r\n    removeOrderItemCart(state , action){\r\n      state.orderList.splice(action.payload.id, 1);\r\n    }\r\n  },\r\n});\r\nexport default saleSlice;\r\n\r\nexport const getSaleData = (param = \"\") => {\r\n  return (dispatch) => {\r\n    let url = \"order/get-order-data\";\r\n    if (param) {\r\n      url = `order/get-order-data?${param}`;\r\n    }\r\n    API.get(url)\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          dispatch(saleStoreAction.getData({ sale: response.data.data }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getSaleModalData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      saleStoreAction.loadModalInitialData({\r\n        id: data.id,\r\n        action: data.action,\r\n      })\r\n    );\r\n    dispatch(\r\n      saleStoreAction.loadSaleModal({\r\n        id: data.id,\r\n        saleDetails: data.saleData,\r\n        heading:\r\n          data.action === \"Update\" ? \"Update the Order\" : \"Cancel The Order\",\r\n        actionType: data.action === \"Update\" ? \"Update\" : \"Cancel\",\r\n        variant: data.action === \"Update\" ? \"primary\" : \"danger\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const closeSaleModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.closeModal());\r\n  };\r\n};\r\n\r\nexport const updateSaleData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.updatingData());\r\n    const result = {\r\n      msg: \"Order has been updated successfully\",\r\n    };\r\n    dispatch(\r\n      saleStoreAction.dataUpdated({\r\n        msg: result.msg,\r\n        color: \"success\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const openAddOrderModal = () => {\r\n  return (dispatch) => {\r\n    dispatch(saleStoreAction.loadingInitialAddModal());\r\n    API.get(\"order/get-latest-order-id\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const id = response.data.data.order_id;\r\n          dispatch(saleStoreAction.getlatestOrderId({ id }));\r\n        }\r\n      })\r\n      .catch();\r\n    API.get(\"get-product-names\")\r\n      .then((response) => {\r\n        if (response.data.http_status === 200) {\r\n          const names = response.data.data;\r\n          dispatch(saleStoreAction.getProductNames({ names }));\r\n          dispatch(saleStoreAction.loadAddModalData());\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}