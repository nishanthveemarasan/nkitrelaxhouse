{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\nkItService\\\\relax-frontend\\\\src\\\\Components\\\\views\\\\Posts\\\\AllPosts.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CButton from \"src/Components/UI/Button/Button\";\nimport Loader from \"src/Components/UI/Loader/Loader\";\nimport CTable from \"src/Components/UI/Table/CTable\";\nimport Pagination from \"src/Components/UI/Table/Pagination\";\nimport { getPostData, openAddPostModal } from \"src/store/post.slice\";\nimport { postStoreAction } from \"src/store/store\";\nimport AllPostBodyTable from \"./AllPostBodyTable\";\nimport CreateModal from \"./Modal/CreateModal\";\nimport PostEditModal from \"./Modal/PostEditModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AllPosts = function AllPosts() {\n  _s();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      isPostDataLoaded: state.postStore.isPostDataLoaded,\n      postData: state.postStore.postData,\n      reRunPostComponent: state.postStore.reRunPostComponent,\n      userId: state.userStore.reRunComponent.postId\n    };\n  };\n\n  var state = useSelector(mapStateToProps);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (state.reRunPostComponent.isDataChanged) {\n      var data = {\n        id: state.userId,\n        param: state.reRunPostComponent.queryParam\n      };\n      dispatch(getPostData(data));\n    }\n  }, [state.reRunPostComponent.isDataChanged, dispatch, state.reRunPostComponent.queryParam, state.reRunPostComponent.id]);\n\n  var pageChangeHandler = function pageChangeHandler(url) {\n    if (url) {\n      var param = url.split(\"?\")[1];\n      dispatch(postStoreAction.updateParam({\n        param: param\n      }));\n      var data = {\n        id: state.userId,\n        param: param\n      };\n      dispatch(getPostData(data));\n    }\n  };\n\n  var openCreateModalHandler = function openCreateModalHandler() {\n    dispatch(openAddPostModal());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(PostEditModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        className: \"text-right mb-3\",\n        children: /*#__PURE__*/_jsxDEV(CButton, {\n          name: \"Add Post\",\n          color: \"success\",\n          click: openCreateModalHandler // loading={state.addSaleModalData.isLoading}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), !state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 35\n    }, _this), state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(CTable, {\n      header: [\"#\", \"Author\", \"Title\", \"Content\", \"Date Created\", \"Comments\", \"Likes\", \"Published\", \"Status\", \"Action\"],\n      children: /*#__PURE__*/_jsxDEV(AllPostBodyTable, {\n        body: state.postData.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, _this), state.isPostDataLoaded && /*#__PURE__*/_jsxDEV(Pagination, {\n      body: state.postData,\n      change: pageChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AllPosts, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AllPosts;\nexport default AllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/Components/views/Posts/AllPosts.js"],"names":["useEffect","Col","Row","useSelector","useDispatch","CButton","Loader","CTable","Pagination","getPostData","openAddPostModal","postStoreAction","AllPostBodyTable","CreateModal","PostEditModal","AllPosts","mapStateToProps","state","isPostDataLoaded","postStore","postData","reRunPostComponent","userId","userStore","reRunComponent","postId","dispatch","isDataChanged","data","id","param","queryParam","pageChangeHandler","url","split","updateParam","openCreateModalHandler"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport CTable from \"src/Components/UI/Table/CTable\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { getPostData, openAddPostModal } from \"src/store/post.slice\";\r\nimport { postStoreAction } from \"src/store/store\";\r\nimport AllPostBodyTable from \"./AllPostBodyTable\";\r\nimport CreateModal from \"./Modal/CreateModal\";\r\nimport PostEditModal from \"./Modal/PostEditModal\";\r\nconst AllPosts = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isPostDataLoaded: state.postStore.isPostDataLoaded,\r\n      postData: state.postStore.postData,\r\n      reRunPostComponent: state.postStore.reRunPostComponent,\r\n      userId: state.userStore.reRunComponent.postId,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunPostComponent.isDataChanged) {\r\n      const data = {\r\n        id: state.userId,\r\n        param: state.reRunPostComponent.queryParam,\r\n      };\r\n      dispatch(getPostData(data));\r\n    }\r\n  }, [\r\n    state.reRunPostComponent.isDataChanged,\r\n    dispatch,\r\n    state.reRunPostComponent.queryParam,\r\n    state.reRunPostComponent.id,\r\n  ]);\r\n\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const param = url.split(\"?\")[1];\r\n      dispatch(postStoreAction.updateParam({ param }));\r\n      const data = {\r\n        id: state.userId,\r\n        param,\r\n      };\r\n      dispatch(getPostData(data));\r\n    }\r\n  };\r\n  const openCreateModalHandler = () => {\r\n    dispatch(openAddPostModal());\r\n  };\r\n  return (\r\n    <>\r\n      <CreateModal />\r\n      <PostEditModal />\r\n      <Row>\r\n        <Col sm={12} className=\"text-right mb-3\">\r\n          <CButton\r\n            name=\"Add Post\"\r\n            color=\"success\"\r\n            click={openCreateModalHandler}\r\n            // loading={state.addSaleModalData.isLoading}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {!state.isPostDataLoaded && <Loader />}\r\n      {state.isPostDataLoaded && (\r\n        <CTable\r\n          header={[\r\n            \"#\",\r\n            \"Author\",\r\n            \"Title\",\r\n            \"Content\",\r\n            \"Date Created\",\r\n            \"Comments\",\r\n            \"Likes\",\r\n            \"Published\",\r\n            \"Status\",\r\n            \"Action\",\r\n          ]}\r\n        >\r\n          <AllPostBodyTable body={state.postData.data} />\r\n        </CTable>\r\n      )}\r\n      {state.isPostDataLoaded && (\r\n        <Pagination body={state.postData} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AllPosts;\r\n"]},"metadata":{},"sourceType":"module"}