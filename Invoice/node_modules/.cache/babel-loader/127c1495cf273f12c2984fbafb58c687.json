{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"src/axios/axios\";\nvar initialState = {\n  isDataLoaded: false,\n  saleData: [],\n  reRunComponent: true\n};\nvar saleSlice = createSlice({\n  name: \"sale\",\n  initialState: initialState,\n  reducers: {}\n});\nexport default saleSlice;\nexport var getSaleData = function getSaleData() {\n  return function (dispatch) {\n    API.get().then(function (response) {\n      if (response.data.http_status === 200) {\n        console.log();\n      }\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/nkItService/relax-frontend/src/store/sale-slice.js"],"names":["createSlice","API","initialState","isDataLoaded","saleData","reRunComponent","saleSlice","name","reducers","getSaleData","dispatch","get","then","response","data","http_status","console","log","catch","error","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,KADK;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAArB;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAC,MADqB;AAE1BL,EAAAA,YAAY,EAAZA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAC;AAHiB,CAAD,CAA7B;AAOA,eAAeF,SAAf;AAEA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAK;AAC5B,SAAO,UAAAC,QAAQ,EAAG;AACdT,IAAAA,GAAG,CAACU,GAAJ,GACKC,IADL,CAEQ,UAAAC,QAAQ,EAAG;AACP,UAAGA,QAAQ,CAACC,IAAT,CAAcC,WAAd,KAA8B,GAAjC,EACA;AACIC,QAAAA,OAAO,CAACC,GAAR;AACH;AACJ,KAPT,EASKC,KATL,CAUQ,UAAAC,KAAK,EAAI;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,OAAlB;AACH,KAZT;AAcH,GAfD;AAgBH,CAjBM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport API from \"src/axios/axios\";\r\n\r\nconst initialState = {\r\n  isDataLoaded: false,\r\n  saleData: [],\r\n  reRunComponent: true,\r\n};\r\n\r\nconst saleSlice = createSlice({\r\n    name:\"sale\",\r\n    initialState,\r\n    reducers:{\r\n\r\n    }\r\n});\r\nexport default saleSlice;\r\n\r\nexport const getSaleData = () =>{\r\n    return dispatch =>{\r\n        API.get()\r\n            .then(\r\n                response =>{\r\n                    if(response.data.http_status === 200)\r\n                    {\r\n                        console.log();\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    console.log(error.message);\r\n                }\r\n            )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}