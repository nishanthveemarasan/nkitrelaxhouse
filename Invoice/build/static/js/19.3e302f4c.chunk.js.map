{"version":3,"sources":["custom-functions.js","Components/UI/Table/Pagination.js","Components/UI/Input/FormSelect.js","Components/UI/Icon/Icon.js","Components/UI/ActionButton/ActionButton.js","Components/UI/Badge/CBadge.js","Components/Table/CTable.js","Components/UI/Input/FormInput.js","Components/views/Store/Order/UI/Filter/FIlterOrder.module.css","Components/views/Store/Order/Table/OTableBody.js","Components/views/Store/Order/UI/Filter/SearchContent.js","Components/views/Store/Order/UI/Filter/FilterOrder.js","Components/views/Store/Order/StoreOrder.js"],"names":["getDate","value","date","Date","getYear","getFullYear","getMonth","getDay","toString","padStart","Pagination","props","to","body","total","links","pageChangeHandler","url","change","className","map","link","i","active","onClick","bind","length","label","React","memo","FormSelect","sm","htmlFor","id","style","color","onChange","disabled","readOnly","chooseOption","options","option","index","toLowerCase","Icon","name","size","class","action","ActionButton","ToolTip","CBadge","variant","fontSize","click","CTable","Header","header","th","responsive","striped","bordered","hover","children","FormInput","md","Group","Control","type","onBlur","blur","list","placeholder","module","exports","OTableBody","data","row","order_id","getCustomerName","customer_details","amount","getStatus","status","getMethod","pay_method","getOrderStatus","delivery_status","created_at","classes","view","firstName","lastName","method","SearchContent","state","useSelector","shopStore","orderIdArray","el","idChange","FilterOrder","orderData","order","reRunComponent","isDataChanged","dispatch","useDispatch","useState","payMethod","payStatus","deliveryStatus","filter","setFilter","touched","orderId","setorderId","useEffect","debounce","setTimeout","getAllOrderIds","clearTimeout","e","target","console","log","prevState","shopStoreAction","updatePayStatus","getStoreOrderData","param","orderStatus","split","join","updatePayMethod","updateDeliveryStatus","dropDown","searchBox","marginBottom","content","clearOrderIdArray","getStoreProductById","StoreOrder","history","useHistory","isDataReceived","Loader","getSingleOrder","push","updateOrderParam"],"mappings":"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","file":"static/js/19.3e302f4c.chunk.js","sourcesContent":["export const getDate = (value) => {\r\n  if (!value) {\r\n    return \"\";\r\n  }\r\n  const date = new Date(value);\r\n  const getYear = date.getFullYear();\r\n  const getMonth = date.getMonth() + 1;\r\n  const getDay = date.getDate();\r\n\r\n  const constructDate = `${getYear}-${getMonth\r\n    .toString()\r\n    .padStart(2, \"0\")}-${getDay.toString().padStart(2, \"0\")}`;\r\n  return constructDate;\r\n};\r\n","import React from \"react\";\r\nconst Pagination = (props) => {\r\n  // console.log(\"body\", props.body);\r\n  const to = props.body?.to;\r\n  const total = props.body?.total;\r\n  const links = props.body?.links;\r\n\r\n  const pageChangeHandler = (url) => {\r\n    props.change(url);\r\n  };\r\n  return (\r\n    <nav className=\"d-flex justify-content-end\">\r\n      <div className=\"align-self-center mr-3 font-weight-bold\">\r\n        <span>{`${to} of ${total}`}</span>\r\n      </div>\r\n      <ul className=\"pagination\">\r\n        {links &&\r\n          links.map((link, i) => {\r\n            return (\r\n              <li key={i} className={`page-item ${link.active && \"active\"}`}>\r\n                {i === 0 && (\r\n                  <span\r\n                    className=\"page-link\"\r\n                    onClick={pageChangeHandler.bind(null, link.url)}\r\n                  >\r\n                    &laquo;\r\n                  </span>\r\n                )}\r\n                {i === links.length - 1 && (\r\n                  <span\r\n                    className=\"page-link\"\r\n                    onClick={pageChangeHandler.bind(null, link.url)}\r\n                  >\r\n                    &raquo;\r\n                  </span>\r\n                )}\r\n                {i !== 0 && i !== links.length - 1 && (\r\n                  <span\r\n                    className=\"page-link\"\r\n                    onClick={pageChangeHandler.bind(null, link.url)}\r\n                  >\r\n                    {link.label}\r\n                  </span>\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default React.memo(Pagination);\r\n","import { CCol } from \"@coreui/react\";\r\n\r\nconst FormSelect = (props) => {\r\n  return (\r\n    <CCol sm={12}>\r\n      <div className=\"form-group\">\r\n        {props.label && (\r\n          <label htmlFor={props.id} style={{ color: \"black\" }}>\r\n            {props.label}\r\n          </label>\r\n        )}\r\n        <select\r\n          className=\"form-control\"\r\n          id={props.id}\r\n          value={props.value}\r\n          onChange={props.change}\r\n          disabled={props.readOnly && \"readOnly\"}\r\n        >\r\n          {props.chooseOption && <option>Choose One Option</option>}\r\n          {props.options.map((option, index) => {\r\n            return (\r\n              <option key={index} value={option.toLowerCase()}>\r\n                {option}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    </CCol>\r\n  );\r\n};\r\nexport default FormSelect;\r\n","import CIcon from \"@coreui/icons-react\";\r\nconst Icon = (props) => {\r\n  return (\r\n    <>\r\n      <CIcon\r\n        name={props.name}\r\n        size=\"2xl\"\r\n        className={props.class}\r\n        onClick={props.action}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Icon;\r\n","import ToolTip from \"src/Components/UI/Tooltip/ToolTip\";\r\nimport Icon from \"src/Components/UI/Icon/Icon\";\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <ToolTip value={props.value}>\r\n      <Icon class={props.class} name={props.name} action={props.action} />\r\n    </ToolTip>\r\n  );\r\n};\r\nexport default ActionButton;\r\n","import { Badge } from \"react-bootstrap\";\r\nconst CBadge = (props) => {\r\n  return (\r\n    <Badge\r\n      variant={props.color}\r\n      style={{ fontSize: props.size }}\r\n      onClick={props.click}\r\n    >\r\n      {props.value}\r\n    </Badge>\r\n  );\r\n};\r\nexport default CBadge;\r\n","import Table from \"react-bootstrap/Table\";\r\nconst CTable = (props) => {\r\n  const Header = props.header.map((th, i) => {\r\n    return <th key={i}>{th}</th>;\r\n  });\r\n  return (\r\n    <>\r\n      <Table responsive=\"lg\" striped bordered hover>\r\n        <thead variant=\"info\">\r\n          <tr>{Header}</tr>\r\n        </thead>\r\n        <tbody>{props.children}</tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\nexport default CTable;\r\n\r\n/*\r\n\r\nstate.providerData.data.map((row, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>{row.id}</td>\r\n                <td>{row.name}</td>\r\n                <td>{row.provider_code}</td>\r\n                <td>{row.status}</td>\r\n                <td>{row.updated_at}</td>\r\n              </tr>\r\n            );\r\n          })\r\n\r\n*/\r\n","import { Col, Form } from \"react-bootstrap\";\r\nexport const FormInput = (props) => {\r\n  return (\r\n    <Col md={props.size}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          type={props.type}\r\n          readOnly={props.readOnly}\r\n          onChange={props.change}\r\n          value={props.value}\r\n          onBlur={props.blur}\r\n          list={props.list}\r\n          placeholder={props.label}\r\n        />\r\n      </Form.Group>\r\n    </Col>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDown\":\"FIlterOrder_dropDown__SSXtZ\",\"searchBox\":\"FIlterOrder_searchBox__1MzSD\",\"content\":\"FIlterOrder_content__33weO\"};","import ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\r\nimport CBadge from \"src/Components/UI/Badge/CBadge\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport classes from \"./OTableBody.module.css\";\r\nconst OTableBody = (props) => {\r\n  const data = props.body;\r\n  return (\r\n    <>\r\n      {data.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>{row.order_id}</td>\r\n            <td>{getCustomerName(row.customer_details)}</td>\r\n            <td>{row.amount}</td>\r\n            <td>{getStatus(row.status)}</td>\r\n            <td>{getMethod(row.pay_method)}</td>\r\n            <td>{getOrderStatus(row.delivery_status)}</td>\r\n            <td>{getDate(row.created_at)}</td>\r\n            <td>\r\n              <ActionButton\r\n                value=\"Edit Product\"\r\n                class={classes.view}\r\n                name=\"cil-align-center\"\r\n                action={() => props.action(i)}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default OTableBody;\r\n\r\nconst getCustomerName = (data) => {\r\n  return `${data.firstName} ${data.lastName}`;\r\n};\r\n\r\nconst getStatus = (status) => {\r\n  switch (status) {\r\n    case \"paid\":\r\n      return <CBadge color=\"success\" value=\"Paid\" />;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\nconst getMethod = (method) => {\r\n  switch (method) {\r\n    case \"credit_card\":\r\n      return <CBadge color=\"danger\" value=\"Credit Card\" />;\r\n    case \"stripe\":\r\n      return <CBadge color=\"primary\" value=\"Stripe Payment\" />;\r\n    case \"paypal\":\r\n      return <CBadge color=\"secondary\" value=\"Paypal\" />;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\nconst getOrderStatus = (method) => {\r\n  switch (method) {\r\n    case \"processing\":\r\n      return <CBadge color=\"info\" value=\"Processing\" />;\r\n    case \"packed\":\r\n      return <CBadge color=\"primary\" value=\"Packed\" />;\r\n    case \"delivered\":\r\n      return <CBadge color=\"secondary\" value=\"Delivered\" />;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nconst CONTENT = [\"abcdcdcdc\", \"dfdfsdfsf\", \"dfdsfsdf\"];\r\n\r\nconst SearchContent = (props) => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      data: state.shopStore.orderIdArray.data,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  return (\r\n    <>\r\n      {state.data.length > 0 &&\r\n        state.data.map((el, index) => {\r\n          return (\r\n            <li key={index} onClick={() => props.idChange(el.order_id)}>\r\n              {el.order_id}\r\n            </li>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\nexport default SearchContent;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport FormSelect from \"src/Components/UI/Input/FormSelect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { shopStoreAction } from \"src/store/store\";\r\nimport {\r\n  getAllOrderIds,\r\n  getStoreOrderData,\r\n  getStoreProductById,\r\n} from \"src/store/shop-slice\";\r\nimport classes from \"./FIlterOrder.module.css\";\r\nimport SearchContent from \"./SearchContent\";\r\nconst FilterOrder = (props) => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      orderData: state.shopStore.order,\r\n      reRunComponent: state.shopStore.reRunComponent.isDataChanged,\r\n    };\r\n  };\r\n\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const [filter, setFilter] = useState({\r\n    payMethod: \"all\",\r\n    payStatus: \"all\",\r\n    deliveryStatus: \"all\",\r\n  });\r\n  const [orderId, setorderId] = useState({\r\n    value: \"\",\r\n    touched: false,\r\n  });\r\n  useEffect(() => {\r\n    let debounce;\r\n    if (orderId.touched) {\r\n      debounce = setTimeout(() => {\r\n        dispatch(getAllOrderIds(orderId.value));\r\n      }, 500);\r\n    }\r\n    return () => {\r\n      clearTimeout(debounce);\r\n    };\r\n  }, [orderId]);\r\n  const onPayStautsChangeHandler = (e) => {\r\n    const status = e.target.value;\r\n    console.log(status);\r\n    setFilter((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        payStatus: status,\r\n      };\r\n    });\r\n    setorderId((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        value: \"\",\r\n        touched: false,\r\n      };\r\n    });\r\n    dispatch(shopStoreAction.updatePayStatus({ status }));\r\n    dispatch(\r\n      getStoreOrderData(\r\n        state.orderData.param,\r\n        status,\r\n        state.orderData.method,\r\n        state.orderData.orderStatus\r\n      )\r\n    );\r\n  };\r\n  const onPayMethodChangeHandler = (e) => {\r\n    const value = e.target.value;\r\n    setorderId((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        value: \"\",\r\n        touched: false,\r\n      };\r\n    });\r\n    setFilter((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        payMethod: value,\r\n      };\r\n    });\r\n    const method = e.target.value.split(\" \").join(\"_\");\r\n    dispatch(shopStoreAction.updatePayMethod({ method }));\r\n    dispatch(\r\n      getStoreOrderData(\r\n        state.orderData.param,\r\n        state.orderData.status,\r\n        method,\r\n        state.orderData.orderStatus\r\n      )\r\n    );\r\n  };\r\n  const onDeliveryStatusChangeHandler = (e) => {\r\n    const status = e.target.value;\r\n    setorderId((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        value: \"\",\r\n        touched: false,\r\n      };\r\n    });\r\n    setFilter((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        deliveryStatus: status,\r\n      };\r\n    });\r\n    dispatch(shopStoreAction.updateDeliveryStatus({ status }));\r\n    dispatch(\r\n      getStoreOrderData(\r\n        state.orderData.param,\r\n        state.orderData.status,\r\n        state.orderData.method,\r\n        status\r\n      )\r\n    );\r\n  };\r\n  const onOrderIdChangeHandler = (e) => {\r\n    const value = e.target.value;\r\n    setFilter((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        payMethod: \"all\",\r\n        payStatus: \"all\",\r\n        deliveryStatus: \"all\",\r\n      };\r\n    });\r\n    setorderId((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        value: value,\r\n        touched: true,\r\n      };\r\n    });\r\n  };\r\n  const onIdChangeHandler = (id) => {\r\n    dispatch(shopStoreAction.clearOrderIdArray());\r\n    setorderId((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        value: id,\r\n        touched: false,\r\n      };\r\n    });\r\n    dispatch(getStoreProductById(id));\r\n  };\r\n  return (\r\n    <CRow>\r\n      <CCol sm={12} md={3}>\r\n        <FormSelect\r\n          label=\"Pay Status\"\r\n          options={[\"All\", \"Paid\", \"Refund\"]}\r\n          value={filter.payStatus}\r\n          change={onPayStautsChangeHandler}\r\n        />\r\n      </CCol>\r\n      <CCol sm={12} md={3}>\r\n        <FormSelect\r\n          label=\"Pay Method\"\r\n          options={[\"All\", \"Credit Card\", \"Stripe\", \"Paypal\"]}\r\n          value={filter.payMethod}\r\n          change={onPayMethodChangeHandler}\r\n        />\r\n      </CCol>\r\n      <CCol sm={12} md={3}>\r\n        <FormSelect\r\n          label=\"Order Status\"\r\n          options={[\"All\", \"Processing\", \"Packed\", \"Delivered\"]}\r\n          value={filter.deliveryStatus}\r\n          change={onDeliveryStatusChangeHandler}\r\n        />\r\n      </CCol>\r\n      <CCol sm={12} md={3}>\r\n        <div className={classes.dropDown}>\r\n          <div className={classes.searchBox}>\r\n            <div style={{ marginBottom: \"2.5%\" }}>Search</div>\r\n            <FormInput\r\n              label={false}\r\n              label=\"Search Order ID\"\r\n              value={orderId.value}\r\n              change={onOrderIdChangeHandler}\r\n            />\r\n\r\n            <div className={classes.content}>\r\n              <SearchContent idChange={onIdChangeHandler} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\nexport default FilterOrder;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getStoreOrderData } from \"src/store/shop-slice\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport CTable from \"src/Components/Table/CTable\";\r\nimport OTableBody from \"./Table/OTableBody\";\r\nimport { shopStoreAction } from \"src/store/store\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { useHistory } from \"react-router\";\r\nimport FilterOrder from \"./UI/Filter/FilterOrder\";\r\nconst StoreOrder = () => {\r\n  const history = useHistory();\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      orderData: state.shopStore.order,\r\n      reRunComponent: state.shopStore.reRunComponent.isDataChanged,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunComponent) {\r\n      dispatch(\r\n        getStoreOrderData(\r\n          state.orderData.param,\r\n          state.orderData.status,\r\n          state.orderData.method,\r\n          state.orderData.orderStatus\r\n        )\r\n      );\r\n    }\r\n  }, [state.reRunComponent, dispatch]);\r\n  const pageChangeHandler = (url) => {\r\n    if (url) {\r\n      const param = url.split(\"?\")[1];\r\n      dispatch(shopStoreAction.updateOrderParam({ param }));\r\n      dispatch(\r\n        getStoreOrderData(\r\n          param,\r\n          state.orderData.status,\r\n          state.orderData.method,\r\n          state.orderData.orderStatus\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const onEditOrderHandler = (id) => {\r\n    const data = state.orderData.data.data[id];\r\n    dispatch(shopStoreAction.getSingleOrder({ data }));\r\n    history.push(\"/admin/store/order-edit\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"bg-white mb-3 pt-3\">\r\n        <FilterOrder />\r\n      </div>\r\n      {!state.orderData.isDataReceived && <Loader />}\r\n      {state.orderData.isDataReceived && (\r\n        <>\r\n          <CTable\r\n            header={[\r\n              \"#\",\r\n              \"order_id\",\r\n              \"Customer\",\r\n              \"Total Amount\",\r\n              \"Payment Status\",\r\n              \"Pay Method\",\r\n              \"Order Status\",\r\n              \"Order Date\",\r\n              \"Action\",\r\n            ]}\r\n          >\r\n            <OTableBody\r\n              body={state.orderData.data.data}\r\n              action={onEditOrderHandler}\r\n            />\r\n          </CTable>\r\n        </>\r\n      )}\r\n      {state.orderData.isDataReceived && state.orderData.data.to && (\r\n        <Pagination body={state.orderData.data} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default StoreOrder;\r\n"],"sourceRoot":""}