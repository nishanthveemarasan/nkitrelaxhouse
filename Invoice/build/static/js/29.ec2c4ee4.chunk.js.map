{"version":3,"sources":["Components/UI/Spinner/CButtonSpinner.js","Components/UI/Button/Button.js","Components/views/Store/UI/validator/Validator.js","Components/views/Store/UI/Alert/Alert.js","Components/views/Store/UI/FormSelect.js","Components/views/Store/UI/FormInput.js","Components/views/Store/UI/SButtonGroup/SButtonGroup.js","Components/views/Store/UI/SFormTextArea.js","Components/views/Store/Product/Product.module.css","Components/views/Store/Product/EditProduct.js"],"names":["CButtonSpinner","Spinner","as","animation","size","role","CButton","props","control","Button","variant","color","onClick","click","input","index","type","style","minWidth","width","block","disabled","loading","name","required","value","trim","offer","test","decimal","SAlert","onClose","close","dismissible","msg","SFormSelect","className","label","htmlFor","id","onChange","e","change","readOnly","chooseOption","options","map","option","toLowerCase","FormInput","md","sm","Group","Label","Control","onBlur","blur","list","placeholder","placeHolder","SButtonGroup","SFormTextArea","labelName","rows","children","module","exports","EditProduct","history","useHistory","params","useParams","useState","setLoading","status","show","alert","setAlert","height","setChange","isDataReceived","isRequestSend","productDetails","setProductDetails","valid","validators","price","offerValue","offerPrice","image","file","src","description","formData","setFormData","useEffect","a","sendGetAdminApi","response","product","data","prevState","split","offer_price","image_url","console","log","onInputChangeHandler","event","url","target","array","slice","includes","push","URL","createObjectURL","files","isValid","validator","isFormValid","onArrayChangeHandler","length","splice","onSubmitHandler","preventDefault","FormData","append","sendPostAdminApi","onSubmit","el","i","display","xs","lg","xl","classes","productImage"],"mappings":"2MAceA,EAbQ,WACrB,OACE,mCACE,cAACC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,OACVC,KAAK,KACLC,KAAK,SACL,cAAY,YCuBLC,IA9BC,SAACC,GACf,OACE,mCACGA,EAAMC,QACL,eAACC,EAAA,EAAD,CACEC,QAASH,EAAMI,MACfC,QAAS,kBAAML,EAAMM,MAAMN,EAAMO,MAAOP,EAAMQ,QAC9CC,KAAMT,EAAMS,KACZC,MAAO,CAAEC,SAAUX,EAAMY,OACzBC,MAAOb,EAAMa,MACbC,SAAUd,EAAMc,SAChBP,MAAOP,EAAMO,MAPf,UASGP,EAAMe,SAAW,cAAC,EAAD,IATpB,IASyCf,EAAMgB,QAG/C,cAACd,EAAA,EAAD,CACEC,QAASH,EAAMI,MACfC,QAASL,EAAMM,MACfG,KAAMT,EAAMS,KACZC,MAAO,CAAEC,SAAUX,EAAMY,OACzBC,MAAOb,EAAMa,MACbC,SAAUd,EAAMc,SANlB,SAQGd,EAAMe,QAAU,cAAC,EAAD,IAAqBf,EAAMgB,W,iCC1BtD,sGAAO,IAAMC,EAAW,SAACC,GACvB,MAAwB,KAAjBA,EAAMC,QAEFC,EAAQ,SAACF,GACpB,MAAqB,KAAjBA,EAAMC,QAGD,kBAAkBE,KAAKH,IAIrBI,EAAU,SAACJ,GACtB,MAAO,kBAAkBG,KAAKH,K,iCCZhC,qBASeK,IAPA,SAACvB,GACd,OACE,cAAC,IAAD,CAAOG,QAASH,EAAMI,MAAOoB,QAASxB,EAAMyB,MAAOC,aAAW,EAA9D,SACG1B,EAAM2B,Q,6CCkBEC,IAvBK,SAAC5B,GACnB,OACE,sBAAK6B,UAAU,aAAf,UACG7B,EAAM8B,OAAS,uBAAOC,QAAS/B,EAAMgC,GAAtB,SAA2BhC,EAAM8B,QACjD,yBACED,UAAU,eACVG,GAAIhC,EAAMgC,GACVd,MAAOlB,EAAMkB,MACbe,SAAU,SAACC,GAAD,OAAOlC,EAAMmC,OAAOD,EAAGlC,EAAMgC,KACvClB,SAAUd,EAAMoC,UAAY,WAL9B,UAOGpC,EAAMqC,cAAgB,uDACtBrC,EAAMsC,QAAQC,KAAI,SAACC,EAAQhC,GAC1B,OACE,wBAAoBU,MAAOsB,EAAOC,cAAlC,SACGD,GADUhC,c,iCCdzB,8BAoBekC,IAnBG,SAAC1C,GAEjB,OACE,cAAC,IAAD,CAAK2C,GAAI3C,EAAM2C,GAAIC,GAAI5C,EAAM4C,GAA7B,SACE,eAAC,IAAKC,MAAN,WACG7C,EAAM8B,OAAS,cAAC,IAAKgB,MAAN,UAAa9C,EAAM8B,QACnC,cAAC,IAAKiB,QAAN,CACEtC,KAAMT,EAAMS,KACZ2B,SAAUpC,EAAMoC,SAChBH,SAAU,SAACC,GAAD,OAAOlC,EAAMmC,OAAOD,EAAGlC,EAAMgC,KACvCd,MAAOlB,EAAMkB,MACb8B,OAAQhD,EAAMiD,KACdC,KAAMlD,EAAMkD,KACZC,YAAanD,EAAMoD,qB,wECedC,IA1BM,SAACrD,GAAW,IAAD,EAC9B,OACE,eAAC,IAAD,CAAc6B,UAAU,OAAxB,UACE,cAAC,IAAD,aACEzB,MAAM,OACNQ,MAAM,MACNH,KAAK,SACLO,KAAMhB,EAAMI,MACZS,OAAO,GALT,QAMQ,QAER,cAAC,KAAD,GACET,MAAM,SACNQ,MAAM,MACNH,KAAK,SACLO,KAAK,IACLH,OAAO,GALT,sBAMQ,OANR,wBAOWb,EAAMC,SAPjB,sBAQSD,EAAMO,OARf,sBASSP,EAAMQ,OATf,sBAUSR,EAAMM,OAVf,S,iCCdN,qBAoBegD,IAlBO,SAACtD,GACrB,OACE,cAAC,IAAD,CAAM4C,GAAI,GAAID,GAAI,GAAlB,SACE,sBAAKd,UAAU,aAAf,UACE,gCAAQ7B,EAAMuD,YACd,0BACE1B,UAAU,eACVO,SAAUpC,EAAMoC,SAChBH,SAAU,SAACC,GAAD,OAAOlC,EAAMmC,OAAOD,EAAGlC,EAAMgC,KACvCd,MAAOlB,EAAMkB,MACbsC,KAAMxD,EAAMwD,KALd,SAOGxD,EAAMyD,kB,oBCbjBC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,aAAe,gC,0PC+c/CC,UAhcK,WAAO,IAAD,EAClBC,EAAUC,cACVC,EAASC,cACf,EAA8BC,oBAAS,GAAvC,mBAAOlD,EAAP,KAAgBmD,EAAhB,KACA,EAA0BD,mBAAS,CACjCtC,IAAK,GACLwC,OAAQ,GACRC,MAAM,IAHR,mBAAOC,EAAP,KAAcC,EAAd,KAQA,EAA4BL,mBAAS,CACnC7D,MAAO,CAAC,SACRmE,OAAQ,CAAC,UAFX,mBAAOpC,EAAP,KAAeqC,EAAf,KAIA,EAA4CP,mBAAS,CACnDjC,GAAI,GACJyC,gBAAgB,EAChBC,eAAe,IAHjB,mBAAOC,EAAP,KAAuBC,EAAvB,KAKA,EAAgCX,mBAAS,CACvCjD,KAAM,CACJE,MAAO,GACP2D,OAAO,EACPC,WAAY,CAAC7D,MAEf8D,MAAO,CACL7D,MAAO,GACP8D,WAAY,GACZH,OAAO,EACPC,WAAY,CAAC7D,IAAUK,MAEzB2D,WAAY,CACV/D,MAAO,GACP2D,OAAO,EACPC,WAAY,CAAC1D,MAEfhB,MAAO,CACLc,MAAO,QACP2D,OAAO,EACPC,WAAY,CAAC7D,MAEfiE,MAAO,CACLhE,MAAO,GACPiE,KAAM,GACNN,OAAO,EACPO,IAAK,GACLN,WAAY,CAAC7D,MAEfoE,YAAa,CACXnE,MAAO,GACP2D,OAAO,EACPC,WAAY,CAAC7D,MAEfsD,OAAQ,CAAErD,MAAO,OAAQ2D,OAAO,EAAMC,WAAY,CAAC7D,MACnDkD,OAAQ,CAAEjD,MAAO,SAAU2D,OAAO,EAAMC,WAAY,CAAC7D,QAnCvD,mBAAOqE,EAAP,KAAiBC,EAAjB,KAsCAC,oBAAS,sBAAC,oCAAAC,EAAA,6DACFzD,EAAK+B,EAAO/B,GADV,kBAGiB0D,YAAgB,6BAAD,OAA8B1D,IAH9D,OAGA2D,EAHA,QAIAC,EAAUD,EAASE,KAAKA,OAEtBzF,EAAQwF,EAAQxF,MAChBmE,EAASqB,EAAQrB,OACvBC,GAAU,SAACsB,GACT,OAAO,2BACFA,GADL,IAEE1F,MAAOA,EAAM2F,MAAM,KACnBxB,OAAQA,EAAOwB,MAAM,UAGzBR,GAAY,SAACO,GACX,OAAO,2BACFA,GADL,IAEE9E,KAAK,2BACA8E,EAAS,MADV,IAEF5E,MAAO0E,EAAQ5E,KACf6D,OAAO,IAETE,MAAM,2BACDe,EAAS,OADT,IAEH5E,MAAO0E,EAAQb,MACfF,OAAO,IAETI,WAAW,2BACNa,EAAS,YADJ,IAER5E,MAAO0E,EAAQI,YAAcJ,EAAQI,YAAc,GACnDnB,OAAO,IAETK,MAAM,2BACDY,EAAS,OADT,IAEHV,IAAKQ,EAAQK,UACbpB,OAAO,IAETQ,YAAY,2BACPS,EAAS,aADH,IAET5E,MAAO0E,EAAQP,YACfR,OAAO,IAETV,OAAO,2BACF2B,EAAS,aADR,IAEJ5E,MAAO0E,EAAQzB,OACfU,OAAO,SAKbD,GAAkB,SAACkB,GACjB,OAAO,2BACFA,GADL,IAEE9D,GAAI4D,EAAQ5D,GACZyC,gBAAgB,EAChBC,eAAe,QAInBE,GAAkB,SAACkB,GACjB,OAAO,2BACFA,GADL,IAEErB,gBAAgB,EAChBC,eAAe,OAhEf,gDAqENwB,QAAQC,IAAI,KAAMR,UArEZ,yDAuEP,CAACJ,EAAaf,IAEjB,IAAM4B,EAAuB,SAACC,EAAO9F,GACnC,IACI+F,EAAKnB,EADLjE,EAAQmF,EAAME,OAAOrF,MAEzB,GAAc,UAAVX,GAA+B,WAAVA,EAAoB,CAC3C,IAAIiG,EAAQrE,EAAO5B,GAAOkG,QACrBD,EAAME,SAASxF,KAClBsF,EAAMG,KAAKzF,GACXsD,GAAU,SAACsB,GACT,OAAO,2BACFA,GADL,kBAEGvF,EAAQiG,QAKH,UAAVjG,IACF+F,EAAMM,IAAIC,gBAAgBR,EAAME,OAAOO,MAAM,IAC7C3B,EAAOkB,EAAME,OAAOO,MAAM,GAC1B5F,EAAQmF,EAAME,OAAOrF,OAEvBqE,GAAY,SAACO,GACX,IADyB,EACrBiB,GAAU,EADW,cAEDjB,EAAUvF,GAAOuE,YAFhB,IAEzB,2BAAqD,CAAC,IAA3CkC,EAA0C,QACnDD,EAAUA,GAAWC,EAAU9F,IAHR,8BAKzB,MAAc,UAAVX,EACe,2BACZuF,GADY,kBAEdvF,EAFc,2BAGVuF,EAAUvF,IAHA,IAIbW,MAAOA,EACPiE,KAAMA,EACNC,IAAKkB,EACLzB,MAAOkC,MAKM,2BACZjB,GADY,kBAEdvF,EAFc,2BAGVuF,EAAUvF,IAHA,IAIbW,MAAOA,EACP2D,MAAOkC,UAObE,GAAc,EAClB,IAAK,IAAM1G,KAAS+E,EAClB2B,EAAcA,GAAe3B,EAAS/E,GAAOsE,MAE/C,IAAMqC,EAAuB,SAACzG,EAAMD,GAClC,IAAIgG,EAAQrE,EAAO1B,GAAMgG,QACJ,IAAjBD,EAAMW,SACRX,EAAMY,OAAO5G,EAAO,GACpBgE,GAAU,SAACsB,GACT,OAAO,2BACFA,GADL,kBAEGrF,EAAO+F,SAKVa,EAAe,uCAAG,WAAOnF,GAAP,iBAAAuD,EAAA,6DACtBvD,EAAEoF,kBACE1B,EAAU,IAAI2B,UACVC,OAAO,KAAM7C,EAAe3C,IACpC4D,EAAQ4B,OAAO,OAAQlC,EAAStE,KAAKE,OACrC0E,EAAQ4B,OAAO,QAASlC,EAASP,MAAM7D,OACvC0E,EAAQ4B,OAAO,aAAclC,EAASL,WAAW/D,OACjD0E,EAAQ4B,OAAO,QAASrF,EAAO/B,OAC/BwF,EAAQ4B,OAAO,SAAUrF,EAAOoC,QAChCqB,EAAQ4B,OAAO,cAAelC,EAASD,YAAYnE,OACnD0E,EAAQ4B,OAAO,SAAUlC,EAASnB,OAAOjD,OACrCoE,EAASJ,MAAMC,KACjBS,EAAQ4B,OAAO,OAAQlC,EAASJ,MAAMC,MAEtCS,EAAQ4B,OAAO,QAASlC,EAASJ,MAAME,KAdnB,UAiBpBlB,GAAW,GAjBS,UAkBGuD,YAAiB,uBAAwB7B,GAlB5C,QAkBdD,EAlBc,OAmBpBrB,GAAS,SAACwB,GACR,OAAO,2BACFA,GADL,IAEEnE,IAAKgE,EAASE,KAAKA,KAAKlE,IACxBwC,OAAQ,UACRC,MAAM,OAGVF,GAAW,GA3BS,mDA6BpBgC,QAAQC,IAAI,KAAMR,UA7BE,2DAAH,sDA0CrB,OACE,qCACE,qBAAK9D,UAAU,kBAAf,SACE,cAAC,IAAD,CAASb,KAAK,UAAUZ,MAAM,OAAOE,MA1OnB,WACtBuD,EAAQ8C,KAAK,2BA2OThC,EAAeF,iBAAmBE,EAAeD,eACjD,cAAC,IAAD,KAEAC,EAAeF,gBAAkBE,EAAeD,eAChD,+CAEDC,EAAeF,gBAAkBE,EAAeD,eAC/C,qCACGL,EAAMD,MACL,cAAC,IAAD,CACEhE,MAAOiE,EAAMF,OACbxC,IAAK0C,EAAM1C,IACXF,MA3Bc,WACxB6C,GAAS,SAACwB,GACR,OAAO,2BACFA,GADL,IAEEnE,IAAK,GACLwC,OAAQ,GACRC,MAAM,UAwBJ,cAAC,IAAD,CAAMsD,SAAUL,EAAhB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAM1E,GAAI,EAAGC,GAAI,GAAjB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMD,GAAI,EAAGC,GAAI,GAAjB,SACE,cAAC,IAAD,CACED,GAAI,GACJC,GAAI,GACJd,MAAM,eACNE,GAAG,OACHvB,KAAK,OACL2B,UAAU,EACVlB,MAAOoE,EAAStE,KAAKE,MACrBiB,OAAQiE,QAId,eAAC,IAAD,WACE,cAAC,IAAD,CAAMzD,GAAI,EAAGC,GAAI,GAAjB,SACE,cAAC,IAAD,CACED,GAAI,GACJC,GAAI,GACJd,MAAM,WACNE,GAAG,QACHvB,KAAK,OACL2B,UAAU,EACVlB,MAAOoE,EAASP,MAAM7D,MACtBiB,OAAQiE,MAGZ,cAAC,IAAD,CAAMzD,GAAI,EAAGC,GAAI,GAAjB,SACE,cAAC,IAAD,CACED,GAAI,GACJC,GAAI,GACJd,MAAM,iBACNE,GAAG,aACHvB,KAAK,OACL2C,YAAY,QACZhB,UAAU,EACVlB,MAAOoE,EAASL,WAAW/D,MAC3BiB,OAAQiE,SAId,cAAC,IAAD,UACE,cAAC,IAAD,CAAMvE,UAAU,OAAhB,SACE,cAAC,IAAD,CACEc,GAAI,GACJC,GAAI,GACJd,MAAM,gBACNE,GAAG,QACHvB,KAAK,OACL2B,UAAU,EACVlB,MAAOoE,EAASJ,MAAMhE,MACtBiB,OAAQiE,QAId,cAAC,IAAD,UACE,eAAC,IAAD,CAAMvE,UAAU,OAAhB,UACE,qBAAKA,UAAU,OAAf,2BACCM,EAAO/B,MAAM+G,OAAS,GACrB,cAAC,IAAD,UACGhF,EAAO/B,MAAMmC,KAAI,SAACoF,EAAIC,GACrB,OACE,qBAAK/F,UAAU,OAAf,SACE,cAAC,IAAD,CACEzB,MAAOuH,EACP1H,SAAS,EACTM,MAAM,QACNC,MAAOoH,EACPtH,MAAO4G,KANgBU,QAcnC,qBAAKlH,MAAO,CAAEmH,QAAS,gBAAvB,SACE,cAAC,IAAD,CACElF,GAAI,EACJC,GAAI,GACJd,OAAO,EACPE,GAAG,QACHM,QAAS,CAAC,QAAS,QAAS,SAAU,WACtCH,OAAQiE,WAKhB,cAAC,IAAD,UACE,eAAC,IAAD,CAAMvE,UAAU,OAAhB,UACE,qBAAKA,UAAU,OAAf,4BACCM,EAAOoC,OAAO4C,OAAS,GACtB,cAAC,IAAD,UACGhF,EAAOoC,OAAOhC,KAAI,SAACoF,EAAIC,GACtB,OACE,qBAAK/F,UAAU,OAAf,SACE,cAAC,IAAD,CACEzB,MAAOuH,EACP1H,SAAS,EACTM,MAAM,SACNC,MAAOoH,EACPtH,MAAO4G,KANgBU,QAanC,qBAAKlH,MAAO,CAAEmH,QAAS,gBAAvB,SACE,cAAC,IAAD,CACElF,GAAI,GACJC,GAAI,GACJd,OAAO,EACPE,GAAG,SACHM,QAAS,CAAC,OAAQ,OAAQ,QAC1BH,OAAQiE,WAKhB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE5C,KAAK,IACLD,UAAU,sBACVvB,GAAG,cACHvB,KAAK,WACL2B,UAAU,EACVlB,MAAOoE,EAASD,YAAYnE,MAC5BiB,OAAQiE,QAId,cAAC,IAAD,CAAMvE,UAAU,OAAhB,SACE,cAAC,IAAD,CAAMc,GAAI,EAAGC,GAAI,GAAjB,SACE,cAAC,IAAD,CACED,GAAI,GACJC,GAAI,GACJd,MAAM,iBACNE,GAAG,SACHM,QAAS,CAAC,QAAS,UACnBpB,MAAOoE,EAASnB,OAAOjD,MACvBiB,OAAQiE,QAId,cAAC,IAAD,UACE,cAAC,IAAD,CAAMvE,UAAU,OAAhB,SACE,cAAC,KAAD,GACEzB,MAAM,UACNQ,MAAM,MACNH,KAAK,SACLO,KAAK,eACLH,OAAO,GALT,sBAMQ,OANR,wBAOWE,GAPX,0BAQYkG,GARZ,WAaN,cAAC,IAAD,CAAMtE,GAAI,EAAGC,GAAI,GAAIf,UAAU,SAA/B,SACE,cAAC,IAAD,CACEiG,GAAI,EACJlF,GAAI,EACJD,GAAI,EACJoF,GAAI,EACJC,GAAI,EACJnG,UAAU,kBANZ,SAQGyD,EAASJ,MAAME,KACd,qBACEA,IAAKE,EAASJ,MAAME,IACpBvD,UAAWoG,IAAQC","file":"static/js/29.ec2c4ee4.chunk.js","sourcesContent":["import { Spinner } from \"react-bootstrap\";\r\nconst CButtonSpinner = () => {\r\n  return (\r\n    <>\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default CButtonSpinner;\r\n","import { Button } from \"react-bootstrap\";\r\nimport CButtonSpinner from \"../Spinner/CButtonSpinner\";\r\nconst CButton = (props) => {\r\n  return (\r\n    <>\r\n      {props.control ? (\r\n        <Button\r\n          variant={props.color}\r\n          onClick={() => props.click(props.input, props.index)}\r\n          type={props.type}\r\n          style={{ minWidth: props.width }}\r\n          block={props.block}\r\n          disabled={props.disabled}\r\n          input={props.input}\r\n        >\r\n          {props.loading && <CButtonSpinner />} {props.name}\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant={props.color}\r\n          onClick={props.click}\r\n          type={props.type}\r\n          style={{ minWidth: props.width }}\r\n          block={props.block}\r\n          disabled={props.disabled}\r\n        >\r\n          {props.loading ? <CButtonSpinner /> : props.name}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CButton;\r\n","export const required = (value) => {\r\n  return value.trim() !== \"\";\r\n};\r\nexport const offer = (value) => {\r\n  if (value.trim() === \"\") {\r\n    return true;\r\n  } else {\r\n    return /^\\d+\\.?\\d{0,2}$/.test(value);\r\n  }\r\n};\r\n\r\nexport const decimal = (value) => {\r\n  return /^\\d+\\.?\\d{0,2}$/.test(value);\r\n};\r\nexport const imageType = (type) => {\r\n  const value = /\\.(jpg|jpeg|png|gif)$/.test(type.name);\r\n  console.log(\"result \", value);\r\n  return value;\r\n};\r\n","import { Alert } from \"react-bootstrap\";\r\n\r\nconst SAlert = (props) => {\r\n  return (\r\n    <Alert variant={props.color} onClose={props.close} dismissible>\r\n      {props.msg}\r\n    </Alert>\r\n  );\r\n};\r\nexport default SAlert;\r\n","const SFormSelect = (props) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      {props.label && <label htmlFor={props.id}>{props.label}</label>}\r\n      <select\r\n        className=\"form-control\"\r\n        id={props.id}\r\n        value={props.value}\r\n        onChange={(e) => props.change(e, props.id)}\r\n        disabled={props.readOnly && \"readOnly\"}\r\n      >\r\n        {props.chooseOption && <option>Choose One Option</option>}\r\n        {props.options.map((option, index) => {\r\n          return (\r\n            <option key={index} value={option.toLowerCase()}>\r\n              {option}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\nexport default SFormSelect;\r\n","import { Col, Form } from \"react-bootstrap\";\r\nconst FormInput = (props) => {\r\n  //   console.log(props.id);\r\n  return (\r\n    <Col md={props.md} sm={props.sm}>\r\n      <Form.Group>\r\n        {props.label && <Form.Label>{props.label}</Form.Label>}\r\n        <Form.Control\r\n          type={props.type}\r\n          readOnly={props.readOnly}\r\n          onChange={(e) => props.change(e, props.id)}\r\n          value={props.value}\r\n          onBlur={props.blur}\r\n          list={props.list}\r\n          placeholder={props.placeHolder}\r\n        />\r\n      </Form.Group>\r\n    </Col>\r\n  );\r\n};\r\nexport default FormInput;\r\n","import { CButtonGroup, CButtonToolbar } from \"@coreui/react\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\n\r\nconst SButtonGroup = (props) => {\r\n  return (\r\n    <CButtonGroup className=\"mr-2\">\r\n      <CButton\r\n        color=\"dark\"\r\n        width=\"30%\"\r\n        type=\"submit\"\r\n        name={props.color}\r\n        block={false}\r\n        width=\"30%\"\r\n      />\r\n      <CButton\r\n        color=\"danger\"\r\n        width=\"30%\"\r\n        type=\"button\"\r\n        name=\"X\"\r\n        block={false}\r\n        width=\"30%\"\r\n        control={props.control}\r\n        input={props.input}\r\n        index={props.index}\r\n        click={props.click}\r\n      />\r\n    </CButtonGroup>\r\n  );\r\n};\r\nexport default SButtonGroup;\r\n","import { CCol } from \"@coreui/react\";\r\n\r\nconst SFormTextArea = (props) => {\r\n  return (\r\n    <CCol sm={12} md={12}>\r\n      <div className=\"form-group\">\r\n        <label>{props.labelName}</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          readOnly={props.readOnly}\r\n          onChange={(e) => props.change(e, props.id)}\r\n          value={props.value}\r\n          rows={props.rows}\r\n        >\r\n          {props.children}\r\n        </textarea>\r\n      </div>\r\n    </CCol>\r\n  );\r\n};\r\nexport default SFormTextArea;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"Product_view__kmx7j\",\"productImage\":\"Product_productImage__1KzKP\"};","import { useState, useEffect } from \"react\";\r\nimport { CButtonToolbar, CCol, CRow } from \"@coreui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport FormInput from \"../UI/FormInput\";\r\nimport SButtonGroup from \"../UI/SButtonGroup/SButtonGroup\";\r\nimport SFormSelect from \"../UI/FormSelect\";\r\nimport SFormTextArea from \"../UI/SFormTextArea\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport { decimal, offer, required } from \"../UI/validator/Validator\";\r\nimport classes from \"./Product.module.css\";\r\nimport { sendGetAdminApi, sendPostAdminApi } from \"src/service/appService\";\r\nimport SAlert from \"../UI/Alert/Alert\";\r\nimport { useParams } from \"react-router\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nconst EditProduct = () => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert] = useState({\r\n    msg: \"\",\r\n    status: \"\",\r\n    show: false,\r\n  });\r\n  const onGoBackHandler = () => {\r\n    history.push(\"/admin/store/item\");\r\n  };\r\n  const [change, setChange] = useState({\r\n    color: [\"black\"],\r\n    height: [\"46cm\"],\r\n  });\r\n  const [productDetails, setProductDetails] = useState({\r\n    id: \"\",\r\n    isDataReceived: false,\r\n    isRequestSend: false,\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    name: {\r\n      value: \"\",\r\n      valid: false,\r\n      validators: [required],\r\n    },\r\n    price: {\r\n      value: \"\",\r\n      offerValue: \"\",\r\n      valid: false,\r\n      validators: [required, decimal],\r\n    },\r\n    offerPrice: {\r\n      value: \"\",\r\n      valid: true,\r\n      validators: [offer],\r\n    },\r\n    color: {\r\n      value: \"black\",\r\n      valid: true,\r\n      validators: [required],\r\n    },\r\n    image: {\r\n      value: \"\",\r\n      file: \"\",\r\n      valid: false,\r\n      src: \"\",\r\n      validators: [required],\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      valid: false,\r\n      validators: [required],\r\n    },\r\n    height: { value: \"46cm\", valid: true, validators: [required] },\r\n    status: { value: \"active\", valid: true, validators: [required] },\r\n  });\r\n\r\n  useEffect(async () => {\r\n    const id = params.id;\r\n    try {\r\n      const response = await sendGetAdminApi(`store/get-product-details/${id}`);\r\n      const product = response.data.data;\r\n      if (product) {\r\n        const color = product.color;\r\n        const height = product.height;\r\n        setChange((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            color: color.split(\",\"),\r\n            height: height.split(\",\"),\r\n          };\r\n        });\r\n        setFormData((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            name: {\r\n              ...prevState[\"name\"],\r\n              value: product.name,\r\n              valid: true,\r\n            },\r\n            price: {\r\n              ...prevState[\"price\"],\r\n              value: product.price,\r\n              valid: true,\r\n            },\r\n            offerPrice: {\r\n              ...prevState[\"offerPrice\"],\r\n              value: product.offer_price ? product.offer_price : \"\",\r\n              valid: true,\r\n            },\r\n            image: {\r\n              ...prevState[\"image\"],\r\n              src: product.image_url,\r\n              valid: true,\r\n            },\r\n            description: {\r\n              ...prevState[\"description\"],\r\n              value: product.description,\r\n              valid: true,\r\n            },\r\n            status: {\r\n              ...prevState[\"description\"],\r\n              value: product.status,\r\n              valid: true,\r\n            },\r\n          };\r\n        });\r\n\r\n        setProductDetails((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            id: product.id,\r\n            isDataReceived: true,\r\n            isRequestSend: true,\r\n          };\r\n        });\r\n      } else {\r\n        setProductDetails((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            isDataReceived: false,\r\n            isRequestSend: true,\r\n          };\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  }, [setFormData, setChange]);\r\n\r\n  const onInputChangeHandler = (event, input) => {\r\n    let value = event.target.value;\r\n    let url, file;\r\n    if (input === \"color\" || input === \"height\") {\r\n      let array = change[input].slice();\r\n      if (!array.includes(value)) {\r\n        array.push(value);\r\n        setChange((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            [input]: array,\r\n          };\r\n        });\r\n      }\r\n    }\r\n    if (input === \"image\") {\r\n      url = URL.createObjectURL(event.target.files[0]);\r\n      file = event.target.files[0];\r\n      value = event.target.value;\r\n    }\r\n    setFormData((prevState) => {\r\n      let isValid = true;\r\n      for (const validator of prevState[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      if (input === \"image\") {\r\n        const updatedForm = {\r\n          ...prevState,\r\n          [input]: {\r\n            ...prevState[input],\r\n            value: value,\r\n            file: file,\r\n            src: url,\r\n            valid: isValid,\r\n          },\r\n        };\r\n        return updatedForm;\r\n      } else {\r\n        const updatedForm = {\r\n          ...prevState,\r\n          [input]: {\r\n            ...prevState[input],\r\n            value: value,\r\n            valid: isValid,\r\n          },\r\n        };\r\n        return updatedForm;\r\n      }\r\n    });\r\n  };\r\n  let isFormValid = true;\r\n  for (const input in formData) {\r\n    isFormValid = isFormValid && formData[input].valid;\r\n  }\r\n  const onArrayChangeHandler = (type, index) => {\r\n    let array = change[type].slice();\r\n    if (array.length !== 1) {\r\n      array.splice(index, 1);\r\n      setChange((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [type]: array,\r\n        };\r\n      });\r\n    }\r\n  };\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    var product = new FormData();\r\n    product.append(\"id\", productDetails.id);\r\n    product.append(\"name\", formData.name.value);\r\n    product.append(\"price\", formData.price.value);\r\n    product.append(\"offerPrice\", formData.offerPrice.value);\r\n    product.append(\"color\", change.color);\r\n    product.append(\"height\", change.height);\r\n    product.append(\"description\", formData.description.value);\r\n    product.append(\"status\", formData.status.value);\r\n    if (formData.image.file) {\r\n      product.append(\"file\", formData.image.file);\r\n    } else {\r\n      product.append(\"image\", formData.image.src);\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const response = await sendPostAdminApi(\"store/update-product\", product);\r\n      setAlert((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          msg: response.data.data.msg,\r\n          status: \"success\",\r\n          show: true,\r\n        };\r\n      });\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  const closeAlertHandler = () => {\r\n    setAlert((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        msg: \"\",\r\n        status: \"\",\r\n        show: false,\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"text-right mb-3\">\r\n        <CButton name=\"GO BACK\" color=\"dark\" click={onGoBackHandler} />\r\n      </div>\r\n      {!productDetails.isDataReceived && !productDetails.isRequestSend && (\r\n        <Loader />\r\n      )}\r\n      {!productDetails.isDataReceived && productDetails.isRequestSend && (\r\n        <h1>No Data Found</h1>\r\n      )}\r\n      {productDetails.isDataReceived && productDetails.isRequestSend && (\r\n        <>\r\n          {alert.show && (\r\n            <SAlert\r\n              color={alert.status}\r\n              msg={alert.msg}\r\n              close={closeAlertHandler}\r\n            />\r\n          )}\r\n          <Form onSubmit={onSubmitHandler}>\r\n            <CRow>\r\n              <CCol md={6} sm={12}>\r\n                <CRow>\r\n                  <CCol md={8} sm={12}>\r\n                    <FormInput\r\n                      md={12}\r\n                      sm={12}\r\n                      label=\"Product Name\"\r\n                      id=\"name\"\r\n                      type=\"text\"\r\n                      readOnly={false}\r\n                      value={formData.name.value}\r\n                      change={onInputChangeHandler}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol md={4} sm={12}>\r\n                    <FormInput\r\n                      md={12}\r\n                      sm={12}\r\n                      label=\"Price($)\"\r\n                      id=\"price\"\r\n                      type=\"text\"\r\n                      readOnly={false}\r\n                      value={formData.price.value}\r\n                      change={onInputChangeHandler}\r\n                    />\r\n                  </CCol>\r\n                  <CCol md={4} sm={12}>\r\n                    <FormInput\r\n                      md={12}\r\n                      sm={12}\r\n                      label=\"Offer Price($)\"\r\n                      id=\"offerPrice\"\r\n                      type=\"text\"\r\n                      placeHolder=\"$0.00\"\r\n                      readOnly={false}\r\n                      value={formData.offerPrice.value}\r\n                      change={onInputChangeHandler}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol className=\"mr-1\">\r\n                    <FormInput\r\n                      md={12}\r\n                      sm={12}\r\n                      label=\"Product Image\"\r\n                      id=\"image\"\r\n                      type=\"file\"\r\n                      readOnly={false}\r\n                      value={formData.image.value}\r\n                      change={onInputChangeHandler}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol className=\"ml-3\">\r\n                    <div className=\"mb-2\">Product Color</div>\r\n                    {change.color.length > 0 && (\r\n                      <CButtonToolbar>\r\n                        {change.color.map((el, i) => {\r\n                          return (\r\n                            <div className=\"mb-2\" key={i}>\r\n                              <SButtonGroup\r\n                                color={el}\r\n                                control={true}\r\n                                input=\"color\"\r\n                                index={i}\r\n                                click={onArrayChangeHandler}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </CButtonToolbar>\r\n                    )}\r\n\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                      <SFormSelect\r\n                        md={4}\r\n                        sm={12}\r\n                        label={false}\r\n                        id=\"color\"\r\n                        options={[\"black\", \"white\", \"walnet\", \"Natural\"]}\r\n                        change={onInputChangeHandler}\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol className=\"ml-3\">\r\n                    <div className=\"mb-2\">Product Height</div>\r\n                    {change.height.length > 0 && (\r\n                      <CButtonToolbar>\r\n                        {change.height.map((el, i) => {\r\n                          return (\r\n                            <div className=\"mb-2\" key={i}>\r\n                              <SButtonGroup\r\n                                color={el}\r\n                                control={true}\r\n                                input=\"height\"\r\n                                index={i}\r\n                                click={onArrayChangeHandler}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </CButtonToolbar>\r\n                    )}\r\n                    <div style={{ display: \"inline-block\" }}>\r\n                      <SFormSelect\r\n                        md={12}\r\n                        sm={12}\r\n                        label={false}\r\n                        id=\"height\"\r\n                        options={[\"46cm\", \"68cm\", \"74cm\"]}\r\n                        change={onInputChangeHandler}\r\n                      />\r\n                    </div>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol>\r\n                    <SFormTextArea\r\n                      rows=\"5\"\r\n                      labelName=\"Product Description\"\r\n                      id=\"description\"\r\n                      type=\"textarea\"\r\n                      readOnly={false}\r\n                      value={formData.description.value}\r\n                      change={onInputChangeHandler}\r\n                    ></SFormTextArea>\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow className=\"ml-1\">\r\n                  <CCol md={4} sm={12}>\r\n                    <SFormSelect\r\n                      md={12}\r\n                      sm={12}\r\n                      label=\"Product Status\"\r\n                      id=\"status\"\r\n                      options={[\"draft\", \"active\"]}\r\n                      value={formData.status.value}\r\n                      change={onInputChangeHandler}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol className=\"ml-3\">\r\n                    <CButton\r\n                      color=\"success\"\r\n                      width=\"30%\"\r\n                      type=\"submit\"\r\n                      name=\"Save Product\"\r\n                      block={false}\r\n                      width=\"30%\"\r\n                      loading={loading}\r\n                      disabled={isFormValid ? false : true}\r\n                    />\r\n                  </CCol>\r\n                </CRow>\r\n              </CCol>\r\n              <CCol md={6} sm={12} className=\"d-flex\">\r\n                <CCol\r\n                  xs={4}\r\n                  sm={3}\r\n                  md={4}\r\n                  lg={4}\r\n                  xl={4}\r\n                  className=\"mx-auto my-auto\"\r\n                >\r\n                  {formData.image.src && (\r\n                    <img\r\n                      src={formData.image.src}\r\n                      className={classes.productImage}\r\n                    />\r\n                  )}\r\n                </CCol>\r\n              </CCol>\r\n            </CRow>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default EditProduct;\r\n"],"sourceRoot":""}