{"version":3,"sources":["Components/UI/Spinner/CButtonSpinner.js","Components/UI/Button/Button.js","custom-functions.js","Components/UI/Table/Pagination.js","Components/UI/Alert/CAlert.js","Hooks/input-validation.js","Components/UI/Input/FormInputLabel.js","Components/UI/Modal/CModal.js","Components/UI/Icon/Icon.js","Components/UI/ActionButton/ActionButton.js","Components/Table/CTable.js","Components/UI/Input/FormInput.js","../node_modules/react-bootstrap/esm/Row.js","Components/UI/Spinner/CSpinner.js","Components/views/Product/Product.module.css","Components/views/Product/CTableBody.js","Components/views/Product/ProductModal.js","Components/UI/Input/FormRadio.js","Components/views/Product/CreateModal.js","Components/views/Product/Product.js"],"names":["CButtonSpinner","Spinner","as","animation","size","role","CButton","props","control","Button","variant","color","onClick","click","input","index","type","style","minWidth","width","block","disabled","loading","name","getDate","value","date","Date","getYear","getFullYear","getMonth","getDay","toString","padStart","Pagination","to","body","total","links","pageChangeHandler","url","change","className","map","link","i","active","bind","length","label","React","memo","CAlert","class","text","useFormValidate","useState","inputValue","setInputValue","inputIsTouched","setInputIsTouched","inputChangeHandler","event","target","inputBlurHandler","reset","FormInputLabel","md","sm","Group","Label","Control","readOnly","onChange","onBlur","blur","list","placeholder","placeHolder","CModal","show","onShow","onHide","onClose","backdrop","keyboard","onSubmit","onSubmitHandler","Header","closeButton","Title","heading","Body","children","Footer","showButton","action","Icon","ActionButton","ToolTip","CTable","header","th","responsive","striped","bordered","hover","FormInput","_excluded","DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","noGutters","_ref$as","Component","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","CSpinner","module","exports","CTableBody","state","useSelector","initialLoad","productStore","dispatch","useDispatch","viewHandler","id","data","getModalData","deleteHandler","row","itemname","itemcode","count","updated_at","view","delete","ProductModal","productName","setProductName","productNameChangeHandler","productCode","setProductCode","productCodeChangeHandler","stock","setstock","stockChangeHandler","modalData","productId","isLoading","updateData","useEffect","isModalOpen","productStoreAction","modalClose","modalHeading","modalAction","e","preventDefault","itemId","itemCount","toLowerCase","updateProductData","dataUpdated","msg","toUpperCase","FormRadio","Form","Check","inline","checked","CreateModal","productNameRestHandler","productCodeRestHandler","stockCount","stockCountChangeHandler","stockCountRestHandler","trackType","setTrackType","selectedFile","setSelectedFile","onTrackTypeChange","alertText","alertType","setModalData","openModal","addProductModal","prevState","dataNotChanged","formData","FormData","append","sendPostAdminApi","then","response","dataChanged","catch","error","console","log","message","Alert","Col","files","Product","isDataChanged","productData","reRunData","param","queryParam","getProductData","Loader","split","updateParam"],"mappings":"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","file":"static/js/13.f8f34271.chunk.js","sourcesContent":["import { Spinner } from \"react-bootstrap\";\r\nconst CButtonSpinner = () => {\r\n  return (\r\n    <>\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default CButtonSpinner;\r\n","import { Button } from \"react-bootstrap\";\r\nimport CButtonSpinner from \"../Spinner/CButtonSpinner\";\r\nconst CButton = (props) => {\r\n  return (\r\n    <>\r\n      {props.control ? (\r\n        <Button\r\n          variant={props.color}\r\n          onClick={() => props.click(props.input, props.index)}\r\n          type={props.type}\r\n          style={{ minWidth: props.width }}\r\n          block={props.block}\r\n          disabled={props.disabled}\r\n          input={props.input}\r\n        >\r\n          {props.loading && <CButtonSpinner />} {props.name}\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant={props.color}\r\n          onClick={props.click}\r\n          type={props.type}\r\n          style={{ minWidth: props.width }}\r\n          block={props.block}\r\n          disabled={props.disabled}\r\n        >\r\n          {props.loading ? <CButtonSpinner /> : props.name}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CButton;\r\n","export const getDate = (value) => {\r\n  if (!value) {\r\n    return \"\";\r\n  }\r\n  const date = new Date(value);\r\n  const getYear = date.getFullYear();\r\n  const getMonth = date.getMonth() + 1;\r\n  const getDay = date.getDate();\r\n\r\n  const constructDate = `${getYear}-${getMonth\r\n    .toString()\r\n    .padStart(2, \"0\")}-${getDay.toString().padStart(2, \"0\")}`;\r\n  return constructDate;\r\n};\r\n","import React from \"react\";\r\nconst Pagination = (props) => {\r\n  // console.log(\"body\", props.body);\r\n  const to = props.body?.to;\r\n  const total = props.body?.total;\r\n  const links = props.body?.links;\r\n\r\n  const pageChangeHandler = (url) => {\r\n    props.change(url);\r\n  };\r\n  return (\r\n    <nav className=\"d-flex justify-content-end\">\r\n      <div className=\"align-self-center mr-3 font-weight-bold\">\r\n        <span>{`${to} of ${total}`}</span>\r\n      </div>\r\n      <ul className=\"pagination\">\r\n        {links &&\r\n          links.map((link, i) => {\r\n            return (\r\n              <li key={i} className={`page-item ${link.active && \"active\"}`}>\r\n                {i === 0 && (\r\n                  <span\r\n                    className=\"page-link\"\r\n                    onClick={pageChangeHandler.bind(null, link.url)}\r\n                  >\r\n                    &laquo;\r\n                  </span>\r\n                )}\r\n                {i === links.length - 1 && (\r\n                  <span\r\n                    className=\"page-link\"\r\n                    onClick={pageChangeHandler.bind(null, link.url)}\r\n                  >\r\n                    &raquo;\r\n                  </span>\r\n                )}\r\n                {i !== 0 && i !== links.length - 1 && (\r\n                  <span\r\n                    className=\"page-link\"\r\n                    onClick={pageChangeHandler.bind(null, link.url)}\r\n                  >\r\n                    {link.label}\r\n                  </span>\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default React.memo(Pagination);\r\n","import { Alert } from \"react-bootstrap\";\r\nconst CAlert = (props) => {\r\n  return (\r\n    <Alert variant={props.color}>\r\n      <div className={props.class}>{props.text}</div>\r\n    </Alert>\r\n  );\r\n};\r\nexport default CAlert;\r\n","import { useState } from \"react\";\r\nconst useFormValidate = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [inputIsTouched, setInputIsTouched] = useState(false);\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n  const inputBlurHandler = (event) => {\r\n    setInputIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInputValue(\"\");\r\n    setInputIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    inputValue,\r\n    setInputValue,\r\n    inputIsTouched,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\nexport default useFormValidate;\r\n","import { Col, Form } from \"react-bootstrap\";\r\nexport const FormInputLabel = (props) => {\r\n  return (\r\n    <Col md={props.md} sm={props.sm}>\r\n      <Form.Group>\r\n        {props.label && <Form.Label>{props.label}</Form.Label>}\r\n        <Form.Control\r\n          type={props.type}\r\n          readOnly={props.readOnly}\r\n          onChange={props.change}\r\n          value={props.value}\r\n          onBlur={props.blur}\r\n          list={props.list}\r\n          placeholder={props.placeHolder}\r\n        />\r\n      </Form.Group>\r\n    </Col>\r\n  );\r\n};\r\nexport default FormInputLabel;\r\n","import { Form, Button, Modal, Spinner } from \"react-bootstrap\";\r\n\r\nconst CModal = (props) => {\r\n  return (\r\n    <Modal\r\n      show={props.onShow}\r\n      onHide={props.onClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size={props.size}\r\n    >\r\n      <Form onSubmit={props.onSubmitHandler}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.heading}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.children}</Modal.Body>\r\n        <Modal.Footer>\r\n          {props.showButton && (\r\n            <Button\r\n              variant={props.variant}\r\n              type=\"submit\"\r\n              style={{ width: props.width }}\r\n            >\r\n              {props.loading && (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"grow\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}\r\n              {!props.loading && props.action}\r\n            </Button>\r\n          )}\r\n\r\n          <Button variant=\"secondary\" onClick={props.onClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default CModal;\r\n","import CIcon from \"@coreui/icons-react\";\r\nconst Icon = (props) => {\r\n  return (\r\n    <>\r\n      <CIcon\r\n        name={props.name}\r\n        size=\"2xl\"\r\n        className={props.class}\r\n        onClick={props.action}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Icon;\r\n","import ToolTip from \"src/Components/UI/Tooltip/ToolTip\";\r\nimport Icon from \"src/Components/UI/Icon/Icon\";\r\nconst ActionButton = (props) => {\r\n  return (\r\n    <ToolTip value={props.value}>\r\n      <Icon class={props.class} name={props.name} action={props.action} />\r\n    </ToolTip>\r\n  );\r\n};\r\nexport default ActionButton;\r\n","import Table from \"react-bootstrap/Table\";\r\nconst CTable = (props) => {\r\n  const Header = props.header.map((th, i) => {\r\n    return <th key={i}>{th}</th>;\r\n  });\r\n  return (\r\n    <>\r\n      <Table responsive=\"lg\" striped bordered hover>\r\n        <thead variant=\"info\">\r\n          <tr>{Header}</tr>\r\n        </thead>\r\n        <tbody>{props.children}</tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\nexport default CTable;\r\n\r\n/*\r\n\r\nstate.providerData.data.map((row, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>{row.id}</td>\r\n                <td>{row.name}</td>\r\n                <td>{row.provider_code}</td>\r\n                <td>{row.status}</td>\r\n                <td>{row.updated_at}</td>\r\n              </tr>\r\n            );\r\n          })\r\n\r\n*/\r\n","import { Col, Form } from \"react-bootstrap\";\r\nexport const FormInput = (props) => {\r\n  return (\r\n    <Col md={props.size}>\r\n      <Form.Group>\r\n        <Form.Control\r\n          type={props.type}\r\n          readOnly={props.readOnly}\r\n          onChange={props.change}\r\n          value={props.value}\r\n          onBlur={props.blur}\r\n          list={props.list}\r\n          placeholder={props.label}\r\n        />\r\n      </Form.Group>\r\n    </Col>\r\n  );\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import { Spinner } from \"react-bootstrap\";\r\nconst CSpinner = (props) => {\r\n  return (\r\n    <span className={props.class}>\r\n      <Spinner animation=\"border\" size={props.size} />\r\n    </span>\r\n  );\r\n};\r\nexport default CSpinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"Product_delete__5GmCp\",\"view\":\"Product_view__5uBsG\"};","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport classes from \"./Product.module.css\";\r\nimport { getModalData } from \"src/store/product-slice\";\r\nimport ActionButton from \"src/Components/UI/ActionButton/ActionButton\";\r\nimport CSpinner from \"src/Components/UI/Spinner/CSpinner\";\r\nconst CTableBody = (props) => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      initialLoad: state.productStore.initialLoad,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const viewHandler = (id) => {\r\n    const data = {\r\n      id,\r\n      action: \"Update\",\r\n    };\r\n    dispatch(getModalData(data));\r\n  };\r\n  const deleteHandler = (id) => {\r\n    const data = {\r\n      id,\r\n      action: \"Delete\",\r\n    };\r\n    dispatch(getModalData(data));\r\n  };\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{row.id}</td>\r\n            <td>{row.itemname}</td>\r\n            <td>{row.itemcode}</td>\r\n            <td>{row.count}</td>\r\n            <td>{getDate(row.updated_at)}</td>\r\n            <td>\r\n              {state.initialLoad.id === row.id &&\r\n                state.initialLoad.action === \"Update\" &&\r\n                (state.initialLoad.loading ? (\r\n                  <CSpinner class={classes.view} size=\"sm\" />\r\n                ) : (\r\n                  <ActionButton\r\n                    value=\"Update\"\r\n                    class={classes.view}\r\n                    name=\"cil-align-center\"\r\n                    action={viewHandler.bind(null, row.id)}\r\n                  />\r\n                ))}\r\n              {(state.initialLoad.id !== row.id ||\r\n                state.initialLoad.action !== \"Update\") && (\r\n                <ActionButton\r\n                  value=\"Update\"\r\n                  class={classes.view}\r\n                  name=\"cil-align-center\"\r\n                  action={viewHandler.bind(null, row.id)}\r\n                />\r\n              )}\r\n              |\r\n              {state.initialLoad.id === row.id &&\r\n                state.initialLoad.action === \"Delete\" &&\r\n                (state.initialLoad.loading ? (\r\n                  <CSpinner class={classes.delete} size=\"sm\" />\r\n                ) : (\r\n                  <ActionButton\r\n                    value=\"Delete\"\r\n                    class={classes.delete}\r\n                    name=\"cil-trash\"\r\n                    action={deleteHandler.bind(null, row.id)}\r\n                  />\r\n                ))}\r\n              {(state.initialLoad.id !== row.id ||\r\n                state.initialLoad.action !== \"Delete\") && (\r\n                <ActionButton\r\n                  value=\"Update\"\r\n                  class={classes.delete}\r\n                  name=\"cil-trash\"\r\n                  action={deleteHandler.bind(null, row.id)}\r\n                />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default CTableBody;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { updateProductData } from \"src/store/product-slice\";\r\nimport { productStoreAction } from \"src/store/store\";\r\n\r\nconst ProductModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    setInputValue: setProductName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    setInputValue: setProductCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stock,\r\n    setInputValue: setstock,\r\n    inputChangeHandler: stockChangeHandler,\r\n  } = useFormValidate();\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      modalData: state.productStore.modalData,\r\n      id: state.productStore.modalData.productId,\r\n      isLoading: state.productStore.isLoading,\r\n      initialLoad: state.productStore.initialLoad,\r\n      updateData: state.productStore.updateData,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.modalClose());\r\n  };\r\n  useEffect(() => {\r\n    if (state.modalData.isModalOpen && state.initialLoad.action === \"Update\") {\r\n      setProductCode(state.modalData.data.itemcode);\r\n      setProductName(state.modalData.data.itemname);\r\n      setstock(state.modalData.data.count);\r\n    }\r\n  }, [\r\n    state.modalData,\r\n    state.initialLoad.action,\r\n    setProductCode,\r\n    setProductName,\r\n    setstock,\r\n  ]);\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      itemId: state.id,\r\n      itemCount: stock,\r\n      action: state.initialLoad.action.toLowerCase(),\r\n    };\r\n    dispatch(updateProductData(data));\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.modalData.isModalOpen}\r\n      onClose={modalCloseHandler}\r\n      heading={state.modalData.modalHeading}\r\n      variant={state.modalData.variant}\r\n      action={state.modalData.modalAction}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={state.updateData.isLoading}\r\n      showButton={\r\n        state.updateData.dataUpdated && state.modalData.modalAction === \"Delete\"\r\n          ? false\r\n          : true\r\n      }\r\n    >\r\n      {state.updateData.dataUpdated && (\r\n        <CAlert color={state.updateData.color} text={state.updateData.msg} />\r\n      )}\r\n      {state.initialLoad.action === \"Delete\" &&\r\n        !state.updateData.dataUpdated && (\r\n          <CAlert\r\n            color=\"danger\"\r\n            text={`please confirm that you are going to delete ${state.modalData.data?.itemname.toUpperCase()}`}\r\n          />\r\n        )}\r\n      {state.initialLoad.action === \"Update\" && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Product Name\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={true}\r\n            label=\"Product Code\"\r\n            value={productCode}\r\n            change={productCodeChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Current Stock\"\r\n            value={stock}\r\n            change={stockChangeHandler}\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default ProductModal;\r\n","import { Form } from \"react-bootstrap\";\r\n\r\nconst FormRadio = (props) => {\r\n  return (\r\n    <Form.Check\r\n      inline={props.inline}\r\n      label={props.label}\r\n      name={props.name}\r\n      type={props.type}\r\n      value={props.value}\r\n      onChange={props.change}\r\n      checked={props.checked}\r\n    />\r\n  );\r\n};\r\nexport default FormRadio;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport API from \"src/axios/axios\";\r\nimport { FormInput } from \"src/Components/UI/Input/FormInput\";\r\nimport CModal from \"src/Components/UI/Modal/CModal\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport FormRadio from \"src/Components/UI/Input/FormRadio\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport { sendPostAdminApi } from \"src/service/appService\";\r\nconst CreateModal = () => {\r\n  const {\r\n    inputValue: productName,\r\n    inputChangeHandler: productNameChangeHandler,\r\n    reset: productNameRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: productCode,\r\n    inputChangeHandler: productCodeChangeHandler,\r\n    reset: productCodeRestHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: stockCount,\r\n    inputChangeHandler: stockCountChangeHandler,\r\n    reset: stockCountRestHandler,\r\n  } = useFormValidate();\r\n\r\n  const [trackType, setTrackType] = useState(\"singleProduct\");\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const fileSelectedHandler = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n  const onTrackTypeChange = (e) => {\r\n    setTrackType(e.target.value);\r\n  };\r\n  const [modalData, setModalData] = useState({\r\n    isLoading: false,\r\n    alertText: \"\",\r\n    alertType: \"\",\r\n  });\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      openModal: state.productStore.openModal,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  const modalCloseHandler = () => {\r\n    dispatch(productStoreAction.addProductModal({ data: false }));\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    setModalData((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLoading: true,\r\n      };\r\n    });\r\n    if (trackType === \"multipleProducts\") {\r\n      dispatch(productStoreAction.dataNotChanged());\r\n      var formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      sendPostAdminApi(\"product/add-multiple-products\", formData)\r\n        .then((response) => {\r\n          const msg = response.data.data.msg;\r\n          const type = response.data.data.type;\r\n          dispatch(productStoreAction.dataChanged());\r\n          if (type === \"success\") {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"success\",\r\n              };\r\n            });\r\n          } else {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"danger\",\r\n              };\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setModalData((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              isLoading: false,\r\n              alertText: error.response.data.error.msg,\r\n              alertType: \"danger\",\r\n            };\r\n          });\r\n        });\r\n    } else {\r\n      const data = {\r\n        itemname: productName,\r\n        itemcode: productCode,\r\n        count: stockCount,\r\n      };\r\n\r\n      dispatch(productStoreAction.dataNotChanged());\r\n      sendPostAdminApi(\"add-product\", data)\r\n        .then((response) => {\r\n          const msg = response.data.data.msg;\r\n          const type = response.data.data.type;\r\n          dispatch(productStoreAction.dataChanged());\r\n          if (type === \"success\") {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"success\",\r\n              };\r\n            });\r\n          } else {\r\n            setModalData((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                isLoading: false,\r\n                alertText: msg,\r\n                alertType: \"danger\",\r\n              };\r\n            });\r\n          }\r\n          productNameRestHandler(\"\");\r\n          productCodeRestHandler(\"\");\r\n          stockCountRestHandler(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.message);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <CModal\r\n      onShow={state.openModal}\r\n      onClose={modalCloseHandler}\r\n      heading={\"Add a Product\"}\r\n      variant={\"primary\"}\r\n      action={\"Add Product\"}\r\n      size=\"md\"\r\n      onSubmitHandler={onSubmitHandler}\r\n      loading={modalData.isLoading}\r\n      showButton={true}\r\n    >\r\n      {modalData.alertText && (\r\n        <Alert variant={modalData.alertType}>{modalData.alertText}</Alert>\r\n      )}\r\n      <Row className=\"mt-4 mb-4\">\r\n        <Col sm={12} md={5}>\r\n          <FormRadio\r\n            inline={true}\r\n            label=\"Create Single Product\"\r\n            type=\"radio\"\r\n            value=\"singleProduct\"\r\n            name=\"inLineProduct\"\r\n            change={onTrackTypeChange}\r\n            checked={trackType === \"singleProduct\"}\r\n          />\r\n        </Col>\r\n        <Col sm={12} md={6}>\r\n          <FormRadio\r\n            inline={true}\r\n            label=\"Create Multiple Products(CSV)\"\r\n            type=\"radio\"\r\n            value=\"multipleProducts\"\r\n            name=\"inLineProduct\"\r\n            change={onTrackTypeChange}\r\n            checked={trackType === \"multipleProducts\"}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {trackType === \"singleProduct\" && (\r\n        <>\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Name\"\r\n            value={productName}\r\n            change={productNameChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            readOnly={false}\r\n            label=\"Product Code\"\r\n            value={productCode}\r\n            change={productCodeChangeHandler}\r\n          />\r\n          <FormInput\r\n            type=\"number\"\r\n            readOnly={false}\r\n            label=\"Stock Count\"\r\n            value={stockCount}\r\n            change={stockCountChangeHandler}\r\n          />\r\n        </>\r\n      )}\r\n      {trackType === \"multipleProducts\" && (\r\n        <>\r\n          <FormInputLabel\r\n            type=\"file\"\r\n            readOnly={false}\r\n            label=\"UpLoad CSV File\"\r\n            change={fileSelectedHandler}\r\n          />\r\n        </>\r\n      )}\r\n    </CModal>\r\n  );\r\n};\r\nexport default CreateModal;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport Pagination from \"src/Components/UI/Table/Pagination\";\r\nimport { getProductData } from \"src/store/product-slice\";\r\nimport CTableBody from \"./CTableBody\";\r\nimport CTable from \"src/Components/Table/CTable\";\r\nimport ProductModal from \"./ProductModal\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport { productStoreAction } from \"src/store/store\";\r\nimport CreateModal from \"./CreateModal\";\r\n\r\nconst Product = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      isDataChanged: state.productStore.isDataChanged,\r\n      productData: state.productStore.productData,\r\n      reRunData: state.productStore.reRunData,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (state.reRunData.isDataChanged) {\r\n      const data = {\r\n        param: state.reRunData.queryParam,\r\n      };\r\n      dispatch(getProductData(data));\r\n    }\r\n  }, [dispatch, state.reRunData.isDataChanged]);\r\n\r\n  const pageChangeHandler = (url) => {\r\n    const param = url.split(\"?\")[1];\r\n    dispatch(\r\n      productStoreAction.updateParam({\r\n        param,\r\n      })\r\n    );\r\n    const data = {\r\n      param,\r\n    };\r\n    dispatch(getProductData(data));\r\n  };\r\n\r\n  const openCreateModalHandler = () => {\r\n    dispatch(productStoreAction.addProductModal({ data: true }));\r\n  };\r\n  return (\r\n    <>\r\n      <ProductModal />\r\n      <CreateModal />\r\n      <div className=\"text-right mb-3\">\r\n        <CButton\r\n          name=\"Add Product\"\r\n          color=\"success\"\r\n          click={openCreateModalHandler}\r\n        />\r\n      </div>\r\n      {!state.isDataChanged && <Loader />}\r\n      {state.isDataChanged && (\r\n        <CTable\r\n          header={[\r\n            \"#\",\r\n            \"Item Name\",\r\n            \"Item Code\",\r\n            \"Current Stock\",\r\n            \"Last Updated\",\r\n            \"Action\",\r\n          ]}\r\n        >\r\n          <CTableBody body={state.productData.data} />\r\n        </CTable>\r\n      )}\r\n      {state.isDataChanged && (\r\n        <Pagination body={state.productData} change={pageChangeHandler} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Product;\r\n"],"sourceRoot":""}