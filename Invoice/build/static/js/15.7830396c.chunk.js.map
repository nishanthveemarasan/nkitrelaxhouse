{"version":3,"sources":["Components/UI/Spinner/CButtonSpinner.js","Components/UI/Button/Button.js","custom-functions.js","Components/UI/Alert/CAlert.js","Hooks/input-validation.js","Components/UI/Input/FormInputLabel.js","../node_modules/prop-types-extra/lib/all.js","Components/UI/Card/Card.js","../node_modules/warning/warning.js","Components/UI/Card/Card.module.css","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","Components/views/Users/UserDetail/UserDetail.module.css","Components/views/Users/UserDetail/PersonalInfo.js","Components/views/Users/UserDetail/ContactInfo.js","../node_modules/react-bootstrap/esm/InputGroup.js","Components/UI/Input/FormGroup.js","Components/views/Users/UserDetail/PasswordReset.js","Components/views/Users/UserDetail/Job.js","Components/views/Users/UserDetail/UserDetail.js"],"names":["CButtonSpinner","Spinner","as","animation","size","role","CButton","props","control","Button","variant","color","onClick","click","input","index","type","style","minWidth","width","block","disabled","loading","name","getDate","value","date","Date","getYear","getFullYear","getMonth","getDay","toString","padStart","CAlert","className","class","text","useFormValidate","useState","inputValue","setInputValue","inputIsTouched","setInputIsTouched","inputChangeHandler","event","target","inputBlurHandler","reset","FormInputLabel","md","sm","Group","label","Label","Control","readOnly","onChange","change","onBlur","blur","list","placeholder","placeHolder","Object","defineProperty","exports","default","_len","arguments","length","validators","Array","_key","allPropTypes","_len2","args","_key2","error","forEach","validator","result","apply","undefined","_createChainableTypeChecker2","obj","_createChainableTypeChecker","require","__esModule","module","Card","classes","cardHeader","header","subTitle","by","children","warning","validate","checkType","isRequired","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","Error","concat","chainedCheckType","bind","PersonalInfo","data","body","dispatch","useDispatch","fname","setFname","fNameChangeHandler","lname","setLname","lNameChangeHandler","email","setEmail","emailChangeHandler","username","setUsername","usernameChangeHandler","setRole","roleChangeHandler","createDate","setCreateDate","createDateChangeHandler","setLoading","msg","dataReceived","response","setResponse","profileImage","src","selectedImage","setSelectedImage","useEffect","last_name","getUpperCaseString","roles","created_at","prevState","profile_photo_path","Form","onSubmit","e","preventDefault","sendPostAdminApi","then","catch","console","log","url","URL","createObjectURL","files","match","loginStoreAction","updateProfileImage","formData","FormData","append","alert","xs","lg","xl","img","show","ContactInfo","phone","setPhone","phoneChangeHandler","city","setCity","cityChangeHandler","country","setCountry","countryChangeHandler","zip","setZip","zipChangeHandler","address","postal_code","onUpdateContactInfoHandler","a","contactData","user_id","id","_excluded","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","Component","InputGroup","React","forwardRef","_ref","ref","bsPrefix","hasValidation","_ref$as","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","FormGroup","Col","FormControl","viewHandler","group","PasswordReset","password","setPassword","passwordChangeHandler","password_confirmation","passwordConfirmationChangeHandler","view","setView","setType","onResetPasswordHandler","passwordData","generateRandomPassword","Job","jobTitle","setJobTitle","jobTitleChangeHandler","jobStartedDate","setJobStartedDate","jobStartedDateChangeHandler","jobType","setJobType","jobTypeChangeHandler","jobs","job_title","job_started_date","job_type","UserDetail","changed","setData","sendGetAdminApi"],"mappings":"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","file":"static/js/15.7830396c.chunk.js","sourcesContent":["import { Spinner } from \"react-bootstrap\";\r\nconst CButtonSpinner = () => {\r\n  return (\r\n    <>\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"grow\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default CButtonSpinner;\r\n","import { Button } from \"react-bootstrap\";\r\nimport CButtonSpinner from \"../Spinner/CButtonSpinner\";\r\nconst CButton = (props) => {\r\n  return (\r\n    <>\r\n      {props.control ? (\r\n        <Button\r\n          variant={props.color}\r\n          onClick={() => props.click(props.input, props.index)}\r\n          type={props.type}\r\n          style={{ minWidth: props.width }}\r\n          block={props.block}\r\n          disabled={props.disabled}\r\n          input={props.input}\r\n        >\r\n          {props.loading && <CButtonSpinner />} {props.name}\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant={props.color}\r\n          onClick={props.click}\r\n          type={props.type}\r\n          style={{ minWidth: props.width }}\r\n          block={props.block}\r\n          disabled={props.disabled}\r\n        >\r\n          {props.loading ? <CButtonSpinner /> : props.name}\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CButton;\r\n","export const getDate = (value) => {\r\n  if (!value) {\r\n    return \"\";\r\n  }\r\n  const date = new Date(value);\r\n  const getYear = date.getFullYear();\r\n  const getMonth = date.getMonth() + 1;\r\n  const getDay = date.getDate();\r\n\r\n  const constructDate = `${getYear}-${getMonth\r\n    .toString()\r\n    .padStart(2, \"0\")}-${getDay.toString().padStart(2, \"0\")}`;\r\n  return constructDate;\r\n};\r\n","import { Alert } from \"react-bootstrap\";\r\nconst CAlert = (props) => {\r\n  return (\r\n    <Alert variant={props.color}>\r\n      <div className={props.class}>{props.text}</div>\r\n    </Alert>\r\n  );\r\n};\r\nexport default CAlert;\r\n","import { useState } from \"react\";\r\nconst useFormValidate = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [inputIsTouched, setInputIsTouched] = useState(false);\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n  const inputBlurHandler = (event) => {\r\n    setInputIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInputValue(\"\");\r\n    setInputIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    inputValue,\r\n    setInputValue,\r\n    inputIsTouched,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\nexport default useFormValidate;\r\n","import { Col, Form } from \"react-bootstrap\";\r\nexport const FormInputLabel = (props) => {\r\n  return (\r\n    <Col md={props.md} sm={props.sm}>\r\n      <Form.Group>\r\n        {props.label && <Form.Label>{props.label}</Form.Label>}\r\n        <Form.Control\r\n          type={props.type}\r\n          readOnly={props.readOnly}\r\n          onChange={props.change}\r\n          value={props.value}\r\n          onBlur={props.blur}\r\n          list={props.list}\r\n          placeholder={props.placeHolder}\r\n        />\r\n      </Form.Group>\r\n    </Col>\r\n  );\r\n};\r\nexport default FormInputLabel;\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","import { CCard, CCardHeader, CCardBody } from \"@coreui/react\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport classes from \"./Card.module.css\";\r\nconst Card = (props) => {\r\n  return (\r\n    <CCard>\r\n      <CCardHeader color={props.color}>\r\n        <h5 className={classes.cardHeader}>{props.header}</h5>\r\n        {props.subTitle && (\r\n          <p className=\"text-white\"> {`By ${props.by} on ${getDate(props.date)}`}</p>\r\n        )}\r\n      </CCardHeader>\r\n      <CCardBody>{props.children}</CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\nexport default Card;\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHeader\":\"Card_cardHeader__rI94v\"};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-image\":\"UserDetail_user-image__29aHY\"};","import { useEffect, useState } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { getUpperCaseString } from \"src/service/customService\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport { sendPostAdminApi } from \"src/service/appService\";\r\nimport classes from \"./UserDetail.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginStoreAction } from \"src/store/store\";\r\nimport img from \"src/assets/img/profile.jpg\";\r\nconst PersonalInfo = (props) => {\r\n  const data = props.body;\r\n  const dispatch = useDispatch();\r\n  const {\r\n    inputValue: fname,\r\n    setInputValue: setFname,\r\n    inputChangeHandler: fNameChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: lname,\r\n    setInputValue: setLname,\r\n    inputChangeHandler: lNameChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: email,\r\n    setInputValue: setEmail,\r\n    inputChangeHandler: emailChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: username,\r\n    setInputValue: setUsername,\r\n    inputChangeHandler: usernameChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: role,\r\n    setInputValue: setRole,\r\n    inputChangeHandler: roleChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: createDate,\r\n    setInputValue: setCreateDate,\r\n    inputChangeHandler: createDateChangeHandler,\r\n  } = useFormValidate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    msg: \"\",\r\n    dataReceived: false,\r\n    color: \"\",\r\n  });\r\n  const [selectedImage, setSelectedImage] = useState({\r\n    profileImage: \"\",\r\n    src: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (data) {\r\n      setFname(data.name);\r\n      setLname(data.last_name);\r\n      setEmail(data.email);\r\n      setUsername(data.username);\r\n      setRole(getUpperCaseString(data.roles, \" \"));\r\n      setCreateDate(getDate(data.created_at));\r\n      setSelectedImage((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          src: data.profile_photo_path,\r\n        };\r\n      });\r\n    }\r\n  }, [\r\n    setFname,\r\n    setLname,\r\n    setEmail,\r\n    setUsername,\r\n    setRole,\r\n    setCreateDate,\r\n    setSelectedImage,\r\n    data,\r\n  ]);\r\n\r\n  const onSubmitPersonalInfoHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: fname,\r\n      last_name: lname,\r\n    };\r\n    if (!fname || !lname) {\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: true,\r\n          msg: \"Some Fields are missing!!!\",\r\n          color: \"danger\",\r\n        };\r\n      });\r\n    } else {\r\n      setLoading(true);\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: false,\r\n        };\r\n      });\r\n      sendPostAdminApi(\"users/update-a-user\", data)\r\n        .then((response) => {\r\n          setResponse((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              dataReceived: true,\r\n              msg: response.data.data.msg,\r\n              color: \"success\",\r\n            };\r\n          });\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n  const fileSelectedHandler = (event) => {\r\n    const url = URL.createObjectURL(event.target.files[0]);\r\n    if (event.target.files[0].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\r\n      dispatch(loginStoreAction.updateProfileImage({ url }));\r\n      setSelectedImage((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          profileImage: event.target.files[0],\r\n          src: url,\r\n        };\r\n      });\r\n      var formData = new FormData();\r\n      formData.append(\"file\", event.target.files[0]);\r\n      console.log(formData);\r\n      sendPostAdminApi(\"users/update-prifile-image\", formData)\r\n        .then((response) => {\r\n          console.log(response.data.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    } else {\r\n      alert(\"Invalid Image Type(jpg|jpeg|png|gif)\");\r\n    }\r\n  };\r\n  return (\r\n    <Card color=\"primary\" header=\"Personal Information\">\r\n      {response.dataReceived && (\r\n        <CAlert color={response.color} text={response.msg} />\r\n      )}\r\n      <Form onSubmit={onSubmitPersonalInfoHandler}>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"First Name\"\r\n            type=\"text\"\r\n            readOnly={false}\r\n            md={6}\r\n            sm={12}\r\n            value={fname}\r\n            change={fNameChangeHandler}\r\n          />\r\n          <FormInputLabel\r\n            label=\"Last Name\"\r\n            type=\"text\"\r\n            readOnly={false}\r\n            md={6}\r\n            sm={12}\r\n            value={lname}\r\n            change={lNameChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            readOnly={true}\r\n            md={12}\r\n            sm={12}\r\n            value={email}\r\n            change={emailChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"User Name\"\r\n            type=\"text\"\r\n            readOnly={true}\r\n            md={6}\r\n            sm={12}\r\n            value={username}\r\n            change={usernameChangeHandler}\r\n          />\r\n          <FormInputLabel\r\n            label=\"User Role\"\r\n            type=\"text\"\r\n            readOnly={true}\r\n            md={6}\r\n            sm={12}\r\n            value={role}\r\n            change={roleChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"Created At\"\r\n            type=\"text\"\r\n            readOnly={true}\r\n            md={6}\r\n            sm={12}\r\n            value={createDate}\r\n            change={createDateChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"Change Profile\"\r\n            type=\"file\"\r\n            readOnly={false}\r\n            md={8}\r\n            sm={12}\r\n            change={fileSelectedHandler}\r\n          />\r\n          <CCol xs={4} sm={3} md={4} lg={4} xl={4}>\r\n            <img\r\n              src={selectedImage.src ? selectedImage.src : img}\r\n              className={classes[\"user-image\"]}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n        {props.show && (\r\n          <CRow className=\"mt-3\">\r\n            <CCol md={12} sm={12} className=\"text-left\">\r\n              <CButton\r\n                color=\"success\"\r\n                width=\"30%\"\r\n                type=\"submit\"\r\n                loading={loading}\r\n                name=\"update\"\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default PersonalInfo;\r\n","import { useEffect, useState } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport { sendPostAdminApi } from \"src/service/appService\";\r\nconst ContactInfo = (props) => {\r\n  const data = props.body;\r\n  const {\r\n    inputValue: phone,\r\n    setInputValue: setPhone,\r\n    inputChangeHandler: phoneChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: city,\r\n    setInputValue: setCity,\r\n    inputChangeHandler: cityChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: country,\r\n    setInputValue: setCountry,\r\n    inputChangeHandler: countryChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: zip,\r\n    setInputValue: setZip,\r\n    inputChangeHandler: zipChangeHandler,\r\n  } = useFormValidate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    msg: \"\",\r\n    dataReceived: false,\r\n    color: \"\",\r\n  });\r\n  useEffect(() => {\r\n    if (data.address) {\r\n      setPhone(data.address.phone ? data.address.phone : \"\");\r\n      setCity(data.address.city ? data.address.city : \"\");\r\n      setCountry(data.address.country ? data.address.country : \"\");\r\n      setZip(data.address.postal_code ? data.address.postal_code : \"\");\r\n    }\r\n  }, [setPhone, setCity, setCity, setZip, data]);\r\n\r\n  const onUpdateContactInfoHandler = async (e) => {\r\n    e.preventDefault();\r\n    const contactData = {\r\n      user_id: data.id,\r\n      phone,\r\n      postal_code: zip,\r\n      city,\r\n      country,\r\n    };\r\n\r\n    if (!phone || !zip || !city || !country) {\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: true,\r\n          msg: \"Some Fields are missing!!!\",\r\n          color: \"danger\",\r\n        };\r\n      });\r\n    } else {\r\n      setLoading(true);\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: false,\r\n        };\r\n      });\r\n      try {\r\n        const response = await sendPostAdminApi(\r\n          \"users/update-contact-info\",\r\n          contactData\r\n        );\r\n        setResponse((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            dataReceived: true,\r\n            msg: response.data.data.msg,\r\n            color: \"success\",\r\n          };\r\n        });\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error.response);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Card color=\"primary\" header=\"Contact Information\">\r\n      {response.dataReceived && (\r\n        <CAlert color={response.color} text={response.msg} />\r\n      )}\r\n      <Form onSubmit={onUpdateContactInfoHandler}>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"Phone Number\"\r\n            type=\"text\"\r\n            readOnly={false}\r\n            md={12}\r\n            sm={12}\r\n            value={phone}\r\n            change={phoneChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"ZIP Code\"\r\n            type=\"text\"\r\n            readOnly={false}\r\n            md={3}\r\n            sm={12}\r\n            value={zip}\r\n            change={zipChangeHandler}\r\n          />\r\n          <FormInputLabel\r\n            label=\"City\"\r\n            type=\"text\"\r\n            readOnly={false}\r\n            md={5}\r\n            sm={12}\r\n            value={city}\r\n            change={cityChangeHandler}\r\n          />\r\n          <FormInputLabel\r\n            label=\"Country\"\r\n            type=\"text\"\r\n            readOnly={false}\r\n            md={4}\r\n            sm={12}\r\n            value={country}\r\n            change={countryChangeHandler}\r\n          />\r\n        </CRow>\r\n        {props.show && (\r\n          <CRow>\r\n            <CCol md={12} sm={12} className=\"text-right\">\r\n              <CButton\r\n                color=\"success\"\r\n                width=\"30%\"\r\n                type=\"submit\"\r\n                loading={loading}\r\n                name=\"update\"\r\n              />\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default ContactInfo;\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","import { Col, FormControl, InputGroup } from \"react-bootstrap\";\r\n\r\nconst FormGroup = (props) => {\r\n  return (\r\n    <Col md={props.md} sm={props.sm}>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          type={props.type}\r\n          placeholder={props.placeholder}\r\n          aria-label={props.label}\r\n          aria-describedby=\"basic-addon2\"\r\n          value={props.value}\r\n          onChange={props.change}\r\n        />\r\n        <InputGroup.Text id=\"basic-addon2\" onClick={props.viewHandler}>\r\n          {props.group}\r\n        </InputGroup.Text>\r\n      </InputGroup>\r\n    </Col>\r\n  );\r\n};\r\nexport default FormGroup;\r\n","import { useState } from \"react\";\r\nimport { CCol, CRow } from \"@coreui/react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport FormGroup from \"src/Components/UI/Input/FormGroup\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport { generateRandomPassword } from \"src/service/customService\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport CAlert from \"src/Components/UI/Alert/CAlert\";\r\nimport { sendPostAdminApi } from \"src/service/appService\";\r\nconst PasswordReset = (props) => {\r\n  const data = props.body;\r\n  const {\r\n    inputValue: password,\r\n    setInputValue: setPassword,\r\n    inputChangeHandler: passwordChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: password_confirmation,\r\n    inputChangeHandler: passwordConfirmationChangeHandler,\r\n  } = useFormValidate();\r\n  const [view, setView] = useState(\"view\");\r\n  const [type, setType] = useState(\"password\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState({\r\n    msg: \"\",\r\n    dataReceived: false,\r\n    color: \"\",\r\n  });\r\n  const generateRandomPasswordHandler = () => {\r\n    const password = generateRandomPassword(15);\r\n    setPassword(password);\r\n  };\r\n\r\n  const onViewHandler = () => {\r\n    if (view === \"view\") {\r\n      setView(\"hide\");\r\n      setType(\"text\");\r\n    } else if (view === \"hide\") {\r\n      setView(\"view\");\r\n      setType(\"password\");\r\n    }\r\n  };\r\n\r\n  const onResetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n    const passwordData = {\r\n      user_id: data.id,\r\n      password,\r\n      password_confirmation,\r\n    };\r\n    if (\r\n      password &&\r\n      password_confirmation &&\r\n      password === password_confirmation\r\n    ) {\r\n      setLoading(true);\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: false,\r\n        };\r\n      });\r\n      const response = await sendPostAdminApi(\r\n        \"users/password-reset\",\r\n        passwordData\r\n      );\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: true,\r\n          msg: response.data.data.msg,\r\n          color: \"success\",\r\n        };\r\n      });\r\n      setLoading(false);\r\n    } else {\r\n      setResponse((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          dataReceived: true,\r\n          msg: \"Password does not match!!\",\r\n          color: \"danger\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Card color=\"primary\" header=\"Change Password\">\r\n      {response.dataReceived && (\r\n        <CAlert color={response.color} text={response.msg} />\r\n      )}\r\n      <Form onSubmit={onResetPasswordHandler}>\r\n        <CRow>\r\n          <FormGroup\r\n            placeholder=\"New Password\"\r\n            type={type}\r\n            group={view}\r\n            md={8}\r\n            sm={12}\r\n            value={password}\r\n            change={passwordChangeHandler}\r\n            viewHandler={onViewHandler}\r\n          />\r\n          <CCol md={4} sm={12} className=\"text-right\">\r\n            <CButton\r\n              color=\"light\"\r\n              width=\"30%\"\r\n              type=\"button\"\r\n              loading={false}\r\n              name=\"generate\"\r\n              block={true}\r\n              click={generateRandomPasswordHandler}\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label={false}\r\n            type={type}\r\n            readOnly={false}\r\n            md={8}\r\n            sm={12}\r\n            placeHolder=\"Confirm Password\"\r\n            value={password_confirmation}\r\n            change={passwordConfirmationChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <CCol md={12} sm={12} className=\"text-right\">\r\n            <CButton\r\n              color=\"success\"\r\n              width=\"30%\"\r\n              type=\"submit\"\r\n              loading={loading}\r\n              name=\"Reset\"\r\n            />\r\n          </CCol>\r\n        </CRow>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n","import { CCol, CRow } from \"@coreui/react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport CButton from \"src/Components/UI/Button/Button\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport FormInputLabel from \"src/Components/UI/Input/FormInputLabel\";\r\nimport useFormValidate from \"src/Hooks/input-validation\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport { getUpperCaseString } from \"src/service/customService\";\r\nconst Job = (props) => {\r\n  const data = props.body;\r\n  const {\r\n    inputValue: jobTitle,\r\n    setInputValue: setJobTitle,\r\n    inputChangeHandler: jobTitleChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: jobStartedDate,\r\n    setInputValue: setJobStartedDate,\r\n    inputChangeHandler: jobStartedDateChangeHandler,\r\n  } = useFormValidate();\r\n  const {\r\n    inputValue: jobType,\r\n    setInputValue: setJobType,\r\n    inputChangeHandler: jobTypeChangeHandler,\r\n  } = useFormValidate();\r\n\r\n  useEffect(() => {\r\n    if (data.jobs) {\r\n      setJobTitle(data.jobs.job_title);\r\n      if (data.jobs.job_started_date) {\r\n        setJobStartedDate(getDate(data.jobs.job_started_date));\r\n      } else {\r\n        setJobStartedDate(\"N/A\");\r\n      }\r\n      if (data.jobs.job_type) {\r\n        setJobType(getUpperCaseString(data.jobs.job_type, \"-\"));\r\n      } else {\r\n        setJobType(\"N/A\");\r\n      }\r\n    }\r\n  }, [setJobTitle, data]);\r\n  return (\r\n    <Card color=\"primary\" header=\"Job Information\">\r\n      <Form>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"Job Title\"\r\n            type=\"text\"\r\n            readOnly={true}\r\n            md={12}\r\n            sm={12}\r\n            value={jobTitle}\r\n            change={jobTitleChangeHandler}\r\n          />\r\n        </CRow>\r\n        <CRow>\r\n          <FormInputLabel\r\n            label=\"Joined Date\"\r\n            type=\"text\"\r\n            readOnly={true}\r\n            md={6}\r\n            sm={12}\r\n            value={jobStartedDate}\r\n            change={jobStartedDateChangeHandler}\r\n          />\r\n          <FormInputLabel\r\n            label=\"Job Type\"\r\n            type=\"text\"\r\n            readOnly={true}\r\n            md={6}\r\n            sm={12}\r\n            value={jobType}\r\n            change={jobTypeChangeHandler}\r\n          />\r\n        </CRow>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\nexport default Job;\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport { CRow, CCol } from \"@coreui/react\";\r\nimport { sendGetAdminApi } from \"src/service/appService\";\r\nimport PersonalInfo from \"./PersonalInfo\";\r\nimport ContactInfo from \"./ContactInfo\";\r\nimport PasswordReset from \"./PasswordReset\";\r\nimport Job from \"./Job\";\r\nconst UserDetail = () => {\r\n  const [data, setData] = useState({\r\n    data: \"\",\r\n    changed: true,\r\n  });\r\n  useEffect(async () => {\r\n    if (data.changed) {\r\n      try {\r\n        const response = await sendGetAdminApi(\"users/get-a-user\");\r\n        setData((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            data: response.data.data,\r\n          };\r\n        });\r\n      } catch (error) {\r\n        console.log(error.response);\r\n      }\r\n      // sendGetAdminApi(\"users/get-a-user\")\r\n      //   .then((response) => {\r\n      //     setData((prevState) => {\r\n      //       return {\r\n      //         ...prevState,\r\n      //         data: response.data.data,\r\n      //       };\r\n      //     });\r\n      //   })\r\n      //   .catch();\r\n    }\r\n  }, [data.changed]);\r\n  // console.log(data.data.job_title);\r\n  // console.log(data);\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol md={6} sm={12}>\r\n          <PersonalInfo body={data.data} show={true} />\r\n          <PasswordReset body={data.data} />\r\n        </CCol>\r\n        <CCol md={6} sm={12}>\r\n          <ContactInfo body={data.data} show={true} />\r\n          <Job body={data.data} />\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\nexport default UserDetail;\r\n/**\r\n * about_me: null\r\ncity: \"Hawthorn east\"\r\ncountry: \"Australia\"\r\ncreated_at: \"2020-11-05T13:58:43.000000Z\"\r\ncurrent_team_id: null\r\nemail: \"nis@gmail.com\"\r\nemail_verified_at: null\r\nid: 1\r\njob_title: \"BackPacker/Bendwood\"\r\nlast_name: \"Veemarasan\"\r\nname: \"Nishanthan\"\r\nphone: \"+61402457102\"\r\npostal_code: \"3123\"\r\nprofile_photo_path: \"http://relaxreact.test/react-backend/storage/app/public/profileImage/download.png\"\r\nroles: \"admin\"\r\nstatus: \"1\"\r\ntwo_factor_recovery_codes: null\r\ntwo_factor_secret: null\r\nupdated_at: \"2021-06-28T08:56:13.000000Z\"\r\nusername: \"nisha_veema\"\r\n\r\n */\r\n"],"sourceRoot":""}