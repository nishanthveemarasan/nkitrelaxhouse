{"version":3,"sources":["../node_modules/react-bootstrap/esm/ThemeProvider.js","custom-functions.js","../node_modules/react-bootstrap/esm/Table.js","Components/UI/Card/Card.js","Components/UI/Table/CTable.js","Components/UI/Card/Card.module.css","Components/UI/DWidget.js","Components/UI/Array/_widget.js","Components/views/Dashboard/RTableBody.js","Components/views/Dashboard/TTableBody.js","Components/views/Dashboard/Dashboard.js"],"names":["ThemeContext","React","createContext","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","prefixes","useContext","getDate","value","date","Date","getYear","getFullYear","getMonth","getDay","toString","padStart","_excluded","Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","classes","classNames","table","createElement","_extends","responsiveClass","Card","color","cardHeader","header","subTitle","by","children","CTable","Header","map","th","i","module","exports","DWidget","text","inverse","name","icon","height","_widget","type","RTableBody","body","row","itemname","total","TTableBody","order_number","sellcount","getStatus","sell_type","Dashboard","state","useSelector","widget","dashboardStore","isDataChanged","topOrders","recentOrders","dispatch","useDispatch","useEffect","getWidgetData","item","sm","md","Loader","lg"],"mappings":"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","file":"static/js/34.d28a6990.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useContext, useMemo } from 'react';\nvar ThemeContext = /*#__PURE__*/React.createContext({});\nvar Consumer = ThemeContext.Consumer,\n    Provider = ThemeContext.Provider;\n\nfunction ThemeProvider(_ref) {\n  var prefixes = _ref.prefixes,\n      children = _ref.children;\n  var copiedPrefixes = useMemo(function () {\n    return _extends({}, prefixes);\n  }, [prefixes]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: copiedPrefixes\n  }, children);\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var prefixes = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  var Wrapped = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var props = _extends({}, _ref2);\n\n    props[forwardRefAs] = ref;\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      bsPrefix: bsPrefix\n    }));\n  });\n  Wrapped.displayName = \"Bootstrap(\" + (Component.displayName || Component.name) + \")\";\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","export const getDate = (value) => {\r\n  if (!value) {\r\n    return \"\";\r\n  }\r\n  const date = new Date(value);\r\n  const getYear = date.getFullYear();\r\n  const getMonth = date.getMonth() + 1;\r\n  const getDay = date.getDate();\r\n\r\n  const constructDate = `${getYear}-${getMonth\r\n    .toString()\r\n    .padStart(2, \"0\")}-${getDay.toString().padStart(2, \"0\")}`;\r\n  return constructDate;\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import { CCard, CCardHeader, CCardBody } from \"@coreui/react\";\r\nimport { getDate } from \"src/custom-functions\";\r\nimport classes from \"./Card.module.css\";\r\nconst Card = (props) => {\r\n  return (\r\n    <CCard>\r\n      <CCardHeader color={props.color}>\r\n        <h5 className={classes.cardHeader}>{props.header}</h5>\r\n        {props.subTitle && (\r\n          <p className=\"text-white\"> {`By ${props.by} on ${getDate(props.date)}`}</p>\r\n        )}\r\n      </CCardHeader>\r\n      <CCardBody>{props.children}</CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\nexport default Card;\r\n","import Table from \"react-bootstrap/Table\";\r\nconst CTable = (props) => {\r\n  const Header = props.header.map((th, i) => {\r\n    return <th key={i}>{th}</th>;\r\n  });\r\n  return (\r\n    <>\r\n      <Table responsive=\"md\" striped bordered hover>\r\n        <thead className=\"thead-light\">\r\n          <tr>{Header}</tr>\r\n        </thead>\r\n        <tbody>{props.children}</tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\nexport default CTable;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHeader\":\"Card_cardHeader__rI94v\"};","import { CWidgetProgressIcon } from \"@coreui/react\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nconst DWidget = (props) => {\r\n  return (\r\n    <>\r\n      <CWidgetProgressIcon\r\n        header={props.value}\r\n        text={props.text}\r\n        color={props.color}\r\n        inverse\r\n      >\r\n        <CIcon name={props.icon} height=\"36\" />\r\n      </CWidgetProgressIcon>\r\n    </>\r\n  );\r\n};\r\nexport default DWidget;\r\n","const _widget = [\r\n  {\r\n    type: \"users\",\r\n    text: \"Total Users\",\r\n    color: \"gradient-danger\",\r\n    icon: \"cil-people\",\r\n  },\r\n  {\r\n    type: \"posts\",\r\n    text: \"Total Posts\",\r\n    color: \"gradient-primary\",\r\n    icon: \"cil-people\",\r\n  },\r\n  {\r\n    type: \"comments\",\r\n    text: \"Total Comments\",\r\n    color: \"gradient-info\",\r\n    icon: \"cil-people\",\r\n  },\r\n  {\r\n    type: \"product\",\r\n    text: \"Total Products\",\r\n    color: \"gradient-warning\",\r\n    icon: \"cil-people\",\r\n  },\r\n];\r\nexport default _widget;\r\n","const RTableBody = (props) => {\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{i + 1}</td>\r\n            <td>{row.itemname}</td>\r\n            <td>{row.total}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default RTableBody;\r\n","import { CBadge } from \"@coreui/react\";\r\nconst TTableBody = (props) => {\r\n  return (\r\n    <>\r\n      {props.body.map((row, i) => {\r\n        return (\r\n          <tr key={i}>\r\n            <td>{i + 1}</td>\r\n            <td>{row.order_number}</td>\r\n            <td>{row.itemname}</td>\r\n            <td>{row.sellcount}</td>\r\n            <td>{getStatus(row.sell_type)}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default TTableBody;\r\n\r\nconst getStatus = (value) => {\r\n  switch (value) {\r\n    case \"received\":\r\n      return <CBadge color=\"danger\">Received</CBadge>;\r\n    case \"processing\":\r\n      return <CBadge color=\"warning\">Processing</CBadge>;\r\n    case \"packed\":\r\n      return <CBadge color=\"info\">Packed</CBadge>;\r\n    case \"sent\":\r\n      return <CBadge color=\"success\">Sent</CBadge>;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CRow, CCol } from \"@coreui/react\";\r\nimport DWidget from \"src/Components/UI/DWidget\";\r\nimport { getWidgetData } from \"src/store/dashboard-slice\";\r\nimport Loader from \"src/Components/UI/Loader/Loader\";\r\nimport _widget from \"src/Components/UI/Array/_widget\";\r\nimport Card from \"src/Components/UI/Card/Card\";\r\nimport CTable from \"src/Components/UI/Table/CTable\";\r\nimport RTableBody from \"./RTableBody\";\r\nimport TTableBody from \"./TTableBody\";\r\nconst Dashboard = () => {\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      widget: state.dashboardStore.widget,\r\n      isDataChanged: state.dashboardStore.isDataChanged,\r\n      topOrders: state.dashboardStore.topOrders,\r\n      recentOrders: state.dashboardStore.recentOrders,\r\n    };\r\n  };\r\n  const state = useSelector(mapStateToProps);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getWidgetData());\r\n  }, [dispatch]);\r\n\r\n  const widget =\r\n    state.isDataChanged &&\r\n    state.widget.map((item, i) => {\r\n      return (\r\n        <CCol sm=\"12\" md=\"3\" key={i}>\r\n          <DWidget\r\n            value={item[_widget[i].type]}\r\n            text={_widget[i].text}\r\n            color={_widget[i].color}\r\n            icon={_widget[i].icon}\r\n          />\r\n        </CCol>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {!state.isDataChanged && <Loader />}\r\n\r\n      <CRow>{widget}</CRow>\r\n      {state.isDataChanged && (\r\n        <CRow>\r\n          <CCol sm=\"12\" md=\"12\" lg=\"6\">\r\n            <Card header=\"Top 10 Selling Items\">\r\n              <CTable header={[\"#\", \"Product Name\", \"Total Sell Count\"]}>\r\n                <RTableBody body={state.topOrders} />\r\n              </CTable>\r\n            </Card>\r\n          </CCol>\r\n          <CCol sm=\"12\" md=\"12\" lg=\"6\">\r\n            <Card header=\"Most Recent Orders\">\r\n              <CTable\r\n                header={[\"#\", \"Order ID\", \"Product\", \"Quantity\", \"Status\"]}\r\n              >\r\n                <TTableBody body={state.recentOrders} />\r\n              </CTable>\r\n            </Card>\r\n          </CCol>\r\n        </CRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n"],"sourceRoot":""}